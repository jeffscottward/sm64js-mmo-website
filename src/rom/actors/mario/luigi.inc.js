import * as Gbi from "../../include/gbi"
import { mario_texture_metal as luigi_texture_metal } from "./texture.inc"
import { mario_texture_yellow_button as luigi_texture_yellow_button } from "./texture.inc"
import { L_CAP as luigi_texture_l_logo } from "./texture.inc"
import { L_SIDEBURN as luigi_texture_hair_sideburn } from "./texture.inc"
import { L_STACHE as luigi_texture_mustache } from "./texture.inc"
import { mario_texture_eyes_front as luigi_texture_eyes_front } from "./texture.inc"
import { mario_texture_eyes_half_closed as luigi_texture_eyes_half_closed } from "./texture.inc"
import { mario_texture_eyes_closed as luigi_texture_eyes_closed } from "./texture.inc"
import { mario_texture_eyes_right as luigi_texture_eyes_right } from "./texture.inc"
import { mario_texture_eyes_left as luigi_texture_eyes_left } from "./texture.inc"
import { mario_texture_eyes_up as luigi_texture_eyes_up } from "./texture.inc"
import { mario_texture_eyes_down as luigi_texture_eyes_down } from "./texture.inc"
import { mario_texture_eyes_dead as luigi_texture_eyes_dead } from "./texture.inc"
import { mario_texture_wings_half_1 as luigi_texture_wings_half_1 } from "./texture.inc"
import { mario_texture_wings_half_2 as luigi_texture_wings_half_2 } from "./texture.inc"
import { mario_texture_metal_wings_half_1 as luigi_texture_metal_wings_half_1 } from "./texture.inc"
import { mario_texture_metal_wings_half_2 as luigi_texture_metal_wings_half_2 } from "./texture.inc"

/*
    Luigi; Created by Marshivolt
    Ported by Agent X
*/

// 0x04000000 # solid color blue - butt, left thigh, right thigh - all poly types
const mario_overalls_lights_group = (customData) => {
	return Gbi.gdSPDefLights1(...customData.mario_overalls_lights, 0x28, 0x28, 0x28)
}

// 0x04000018 # solid color red - left & right arm, torso (tshirt part), caps - all poly types
const mario_hat_lights_group = (customData) => {
	return Gbi.gdSPDefLights1(...customData.mario_hat_lights, 0x28, 0x28, 0x28)
}

const mario_shirt_lights_group = (customData) => {
	return Gbi.gdSPDefLights1(...customData.mario_shirt_lights, 0x28, 0x28, 0x28)
}

// 0x04000030 # solid color white - metal butt & left thigh - normal left & right hand closed & open (with cap too) and all wings - all poly types
const mario_white_lights_group = (customData) => {
	return Gbi.gdSPDefLights1(...customData.mario_gloves_lights, 0x28, 0x28, 0x28)
}

// 0x04000048 # solid color brown 1 - foot - all poly types
const mario_brown1_lights_group = (customData) => {
	return Gbi.gdSPDefLights1(...customData.mario_boots_lights, 0x28, 0x28, 0x28)
}

// 0x04000060 # solid color beige skin - face (cap on and off dls) - all poly types
const mario_beige_lights_group = (customData) => {
	return Gbi.gdSPDefLights1(...customData.mario_skin_lights, 0x28, 0x28, 0x28)
}

// 0x04000078  # solid color brown 2 - hair - all poly types
const mario_brown2_lights_group = (customData) => {
	return Gbi.gdSPDefLights1(...customData.mario_hair_lights, 0x28, 0x28, 0x28)
}

const luigi_butt_dl_vertex = [
	{ pos: [ -7, -65, 43 ], flag: 0, tc: [ 0, 0 ], color: [ 218, 148, 56, 255 ] },
	{ pos: [ -13, -71, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 212, 137, 0, 255 ] },
	{ pos: [ 35, -67, 37 ], flag: 0, tc: [ 0, 0 ], color: [ 23, 136, 35, 255 ] },
	{ pos: [ -33, -51, 33 ], flag: 0, tc: [ 0, 0 ], color: [ 150, 197, 38, 255 ] },
	{ pos: [ 8, -47, 70 ], flag: 0, tc: [ 0, 0 ], color: [ 234, 187, 105, 255 ] },
	{ pos: [ 46, -48, 64 ], flag: 0, tc: [ 0, 0 ], color: [ 51, 185, 92, 255 ] },
	{ pos: [ 69, -55, 29 ], flag: 0, tc: [ 0, 0 ], color: [ 96, 179, 32, 255 ] },
	{ pos: [ 35, -67, -37 ], flag: 0, tc: [ 0, 0 ], color: [ 24, 136, 221, 255 ] },
	{ pos: [ -7, -65, -45 ], flag: 0, tc: [ 0, 0 ], color: [ 216, 151, 197, 255 ] },
	{ pos: [ -33, -50, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 150, 199, 216, 255 ] },
	{ pos: [ -38, 31, -32 ], flag: 0, tc: [ 0, 0 ], color: [ 139, 40, 227, 255 ] },
	{ pos: [ -38, 30, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 139, 40, 28, 255 ] },
	{ pos: [ -23, -11, 65 ], flag: 0, tc: [ 0, 0 ], color: [ 168, 242, 91, 255 ] },
	{ pos: [ 11, -10, 80 ], flag: 0, tc: [ 0, 0 ], color: [ 242, 249, 126, 255 ] },
	{ pos: [ 53, -9, 74 ], flag: 0, tc: [ 0, 0 ], color: [ 73, 246, 104, 255 ] },
	{ pos: [ 86, 10, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 126, 13, 0, 255 ] },
	{ pos: [ 69, -55, 29 ], flag: 0, tc: [ 0, 0 ], color: [ 96, 179, 32, 255 ] },
	{ pos: [ 69, -55, -29 ], flag: 0, tc: [ 0, 0 ], color: [ 96, 179, 225, 255 ] },
	{ pos: [ 86, 10, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 126, 13, 0, 255 ] },
	{ pos: [ 35, -67, -37 ], flag: 0, tc: [ 0, 0 ], color: [ 24, 136, 221, 255 ] },
	{ pos: [ 46, -48, -64 ], flag: 0, tc: [ 0, 0 ], color: [ 51, 184, 164, 255 ] },
	{ pos: [ 9, -47, -70 ], flag: 0, tc: [ 0, 0 ], color: [ 235, 188, 151, 255 ] },
	{ pos: [ -7, -65, -45 ], flag: 0, tc: [ 0, 0 ], color: [ 216, 151, 197, 255 ] },
	{ pos: [ -33, -50, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 150, 199, 216, 255 ] },
	{ pos: [ -22, -11, -65 ], flag: 0, tc: [ 0, 0 ], color: [ 169, 241, 164, 255 ] },
	{ pos: [ -38, 31, -32 ], flag: 0, tc: [ 0, 0 ], color: [ 139, 40, 227, 255 ] },
	{ pos: [ -21, 23, -65 ], flag: 0, tc: [ 0, 0 ], color: [ 173, 30, 164, 255 ] },
	{ pos: [ -7, 48, -58 ], flag: 0, tc: [ 0, 0 ], color: [ 205, 86, 177, 255 ] },
	{ pos: [ -13, 61, -27 ], flag: 0, tc: [ 0, 0 ], color: [ 191, 106, 231, 255 ] },
	{ pos: [ -13, 61, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 190, 106, 25, 255 ] },
	{ pos: [ -38, 30, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 139, 40, 28, 255 ] },
	{ pos: [ -7, 48, 57 ], flag: 0, tc: [ 0, 0 ], color: [ 206, 86, 79, 255 ] },
	{ pos: [ -22, 23, 64 ], flag: 0, tc: [ 0, 0 ], color: [ 173, 32, 91, 255 ] },
	{ pos: [ -7, 48, 57 ], flag: 0, tc: [ 0, 0 ], color: [ 206, 86, 79, 255 ] },
	{ pos: [ -38, 30, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 139, 40, 28, 255 ] },
	{ pos: [ -23, -11, 65 ], flag: 0, tc: [ 0, 0 ], color: [ 168, 242, 91, 255 ] },
	{ pos: [ 8, 26, 75 ], flag: 0, tc: [ 0, 0 ], color: [ 236, 39, 119, 255 ] },
	{ pos: [ 11, -10, 80 ], flag: 0, tc: [ 0, 0 ], color: [ 242, 249, 126, 255 ] },
	{ pos: [ 53, -9, 74 ], flag: 0, tc: [ 0, 0 ], color: [ 73, 246, 104, 255 ] },
	{ pos: [ 50, 34, 73 ], flag: 0, tc: [ 0, 0 ], color: [ 61, 45, 102, 255 ] },
	{ pos: [ 86, 10, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 126, 13, 0, 255 ] },
	{ pos: [ 58, 62, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 80, 93, 32, 255 ] },
	{ pos: [ 58, 62, -31 ], flag: 0, tc: [ 0, 0 ], color: [ 81, 93, 224, 255 ] },
	{ pos: [ 50, 34, -73 ], flag: 0, tc: [ 0, 0 ], color: [ 63, 45, 155, 255 ] },
	{ pos: [ 54, -10, -74 ], flag: 0, tc: [ 0, 0 ], color: [ 75, 245, 154, 255 ] },
	{ pos: [ 69, -55, -29 ], flag: 0, tc: [ 0, 0 ], color: [ 96, 179, 225, 255 ] },
	{ pos: [ 46, -48, -64 ], flag: 0, tc: [ 0, 0 ], color: [ 51, 184, 164, 255 ] },
	{ pos: [ 13, -10, -80 ], flag: 0, tc: [ 0, 0 ], color: [ 243, 245, 130, 255 ] },
	{ pos: [ 9, -47, -70 ], flag: 0, tc: [ 0, 0 ], color: [ 235, 188, 151, 255 ] },
	{ pos: [ 13, -10, -80 ], flag: 0, tc: [ 0, 0 ], color: [ 243, 245, 130, 255 ] },
	{ pos: [ 46, -48, -64 ], flag: 0, tc: [ 0, 0 ], color: [ 51, 184, 164, 255 ] },
	{ pos: [ -22, -11, -65 ], flag: 0, tc: [ 0, 0 ], color: [ 169, 241, 164, 255 ] },
	{ pos: [ 8, 26, -77 ], flag: 0, tc: [ 0, 0 ], color: [ 236, 37, 136, 255 ] },
	{ pos: [ -21, 23, -65 ], flag: 0, tc: [ 0, 0 ], color: [ 173, 30, 164, 255 ] },
	{ pos: [ -7, 48, -58 ], flag: 0, tc: [ 0, 0 ], color: [ 205, 86, 177, 255 ] },
	{ pos: [ 31, 62, -51 ], flag: 0, tc: [ 0, 0 ], color: [ 8, 107, 187, 255 ] },
	{ pos: [ -13, 61, -27 ], flag: 0, tc: [ 0, 0 ], color: [ 191, 106, 231, 255 ] },
	{ pos: [ 24, 71, -21 ], flag: 0, tc: [ 0, 0 ], color: [ 254, 126, 240, 255 ] },
	{ pos: [ -13, 61, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 190, 106, 25, 255 ] },
	{ pos: [ 24, 71, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 254, 126, 17, 255 ] },
	{ pos: [ 31, 62, 50 ], flag: 0, tc: [ 0, 0 ], color: [ 7, 106, 69, 255 ] },
	{ pos: [ -7, 48, 57 ], flag: 0, tc: [ 0, 0 ], color: [ 206, 86, 79, 255 ] },
	{ pos: [ 8, 26, 75 ], flag: 0, tc: [ 0, 0 ], color: [ 236, 39, 119, 255 ] },
	{ pos: [ -22, 23, 64 ], flag: 0, tc: [ 0, 0 ], color: [ 173, 32, 91, 255 ] },
	{ pos: [ 50, 34, 73 ], flag: 0, tc: [ 0, 0 ], color: [ 61, 45, 102, 255 ] },
	{ pos: [ 31, 62, 50 ], flag: 0, tc: [ 0, 0 ], color: [ 7, 106, 69, 255 ] },
	{ pos: [ 8, 26, 75 ], flag: 0, tc: [ 0, 0 ], color: [ 236, 39, 119, 255 ] },
	{ pos: [ 58, 62, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 80, 93, 32, 255 ] },
	{ pos: [ 24, 71, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 254, 126, 17, 255 ] },
	{ pos: [ 24, 71, -21 ], flag: 0, tc: [ 0, 0 ], color: [ 254, 126, 240, 255 ] },
	{ pos: [ 58, 62, -31 ], flag: 0, tc: [ 0, 0 ], color: [ 81, 93, 224, 255 ] },
	{ pos: [ 31, 62, -51 ], flag: 0, tc: [ 0, 0 ], color: [ 8, 107, 187, 255 ] },
	{ pos: [ 50, 34, -73 ], flag: 0, tc: [ 0, 0 ], color: [ 63, 45, 155, 255 ] },
	{ pos: [ 8, 26, -77 ], flag: 0, tc: [ 0, 0 ], color: [ 236, 37, 136, 255 ] },
	{ pos: [ 54, -10, -74 ], flag: 0, tc: [ 0, 0 ], color: [ 75, 245, 154, 255 ] },
	{ pos: [ 13, -10, -80 ], flag: 0, tc: [ 0, 0 ], color: [ 243, 245, 130, 255 ] },
]

export const luigi_butt_dl = [
	Gbi.gsSPVertex(luigi_butt_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 3, 1, 0),
	Gbi.gsSP1Triangle(0, 4, 3, 0),
	Gbi.gsSP1Triangle(0, 2, 4, 0),
	Gbi.gsSP1Triangle(5, 4, 2, 0),
	Gbi.gsSP1Triangle(6, 5, 2, 0),
	Gbi.gsSP1Triangle(2, 7, 6, 0),
	Gbi.gsSP1Triangle(1, 7, 2, 0),
	Gbi.gsSP1Triangle(8, 7, 1, 0),
	Gbi.gsSP1Triangle(8, 1, 9, 0),
	Gbi.gsSP1Triangle(9, 1, 3, 0),
	Gbi.gsSP1Triangle(9, 3, 10, 0),
	Gbi.gsSP1Triangle(11, 10, 3, 0),
	Gbi.gsSP1Triangle(11, 3, 12, 0),
	Gbi.gsSP1Triangle(12, 3, 4, 0),
	Gbi.gsSP1Triangle(13, 12, 4, 0),
	Gbi.gsSP1Triangle(4, 5, 13, 0),
	Gbi.gsSP1Triangle(5, 14, 13, 0),
	Gbi.gsSP1Triangle(5, 6, 14, 0),
	Gbi.gsSP1Triangle(15, 14, 6, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(17, 16, 19, 0),
	Gbi.gsSP1Triangle(19, 20, 17, 0),
	Gbi.gsSP1Triangle(20, 19, 21, 0),
	Gbi.gsSP1Triangle(22, 21, 19, 0),
	Gbi.gsSP1Triangle(22, 23, 21, 0),
	Gbi.gsSP1Triangle(21, 23, 24, 0),
	Gbi.gsSP1Triangle(24, 23, 25, 0),
	Gbi.gsSP1Triangle(26, 24, 25, 0),
	Gbi.gsSP1Triangle(26, 25, 27, 0),
	Gbi.gsSP1Triangle(28, 27, 25, 0),
	Gbi.gsSP1Triangle(28, 25, 29, 0),
	Gbi.gsSP1Triangle(29, 25, 30, 0),
	Gbi.gsSP1Triangle(31, 29, 30, 0),
	Gbi.gsSP1Triangle(32, 33, 34, 0),
	Gbi.gsSP1Triangle(32, 34, 35, 0),
	Gbi.gsSP1Triangle(32, 35, 36, 0),
	Gbi.gsSP1Triangle(37, 36, 35, 0),
	Gbi.gsSP1Triangle(37, 38, 36, 0),
	Gbi.gsSP1Triangle(38, 39, 36, 0),
	Gbi.gsSP1Triangle(38, 40, 39, 0),
	Gbi.gsSP1Triangle(41, 39, 40, 0),
	Gbi.gsSP1Triangle(40, 42, 41, 0),
	Gbi.gsSP1Triangle(42, 40, 43, 0),
	Gbi.gsSP1Triangle(44, 43, 40, 0),
	Gbi.gsSP1Triangle(45, 44, 40, 0),
	Gbi.gsSP1Triangle(46, 44, 45, 0),
	Gbi.gsSP1Triangle(47, 44, 46, 0),
	Gbi.gsSP1Triangle(48, 49, 50, 0),
	Gbi.gsSP1Triangle(49, 48, 51, 0),
	Gbi.gsSP1Triangle(49, 51, 52, 0),
	Gbi.gsSP1Triangle(53, 52, 51, 0),
	Gbi.gsSP1Triangle(52, 53, 54, 0),
	Gbi.gsSP1Triangle(54, 55, 52, 0),
	Gbi.gsSP1Triangle(56, 55, 54, 0),
	Gbi.gsSP1Triangle(57, 55, 56, 0),
	Gbi.gsSP1Triangle(57, 56, 58, 0),
	Gbi.gsSP1Triangle(59, 57, 58, 0),
	Gbi.gsSP1Triangle(59, 58, 60, 0),
	Gbi.gsSP1Triangle(58, 61, 60, 0),
	Gbi.gsSP1Triangle(61, 62, 60, 0),
	Gbi.gsSP1Triangle(62, 61, 63, 0),
	Gbi.gsSP1Triangle(64, 65, 66, 0),
	Gbi.gsSP1Triangle(64, 67, 65, 0),
	Gbi.gsSP1Triangle(68, 65, 67, 0),
	Gbi.gsSP1Triangle(68, 67, 69, 0),
	Gbi.gsSP1Triangle(69, 67, 70, 0),
	Gbi.gsSP1Triangle(69, 70, 71, 0),
	Gbi.gsSP1Triangle(70, 72, 71, 0),
	Gbi.gsSP1Triangle(71, 72, 73, 0),
	Gbi.gsSP1Triangle(72, 74, 73, 0),
	Gbi.gsSP1Triangle(75, 73, 74, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_butt = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPLight(mario_overalls_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_overalls_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_butt_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_metal_butt = (customData) => {
	return [
	Gbi.gsSPSetGeometryMode(Gbi.G_TEXTURE_GEN),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_DECALFADE),
	...Gbi.gsDPLoadTextureBlock(luigi_texture_metal, Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 64, 32, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, 6, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0x0F80, 0x07C0, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsSPLight(mario_white_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_white_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_butt_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_left_arm_shared_dl_vertex = [
	{ pos: [ 63, 24, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 52, 91, 72, 255 ] },
	{ pos: [ 63, 25, -16 ], flag: 0, tc: [ 0, 0 ], color: [ 53, 94, 188, 255 ] },
	{ pos: [ 6, 31, 24 ], flag: 0, tc: [ 0, 0 ], color: [ 224, 99, 73, 255 ] },
	{ pos: [ 73, 17, -9 ], flag: 0, tc: [ 0, 0 ], color: [ 112, 50, 223, 255 ] },
	{ pos: [ 73, 16, 15 ], flag: 0, tc: [ 0, 0 ], color: [ 111, 46, 41, 255 ] },
	{ pos: [ 72, -7, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 108, 228, 61, 255 ] },
	{ pos: [ 62, -9, 30 ], flag: 0, tc: [ 0, 0 ], color: [ 49, 216, 110, 255 ] },
	{ pos: [ 5, -11, 38 ], flag: 0, tc: [ 0, 0 ], color: [ 221, 217, 116, 255 ] },
	{ pos: [ -11, -6, 23 ], flag: 0, tc: [ 0, 0 ], color: [ 146, 236, 60, 255 ] },
	{ pos: [ -10, 20, 15 ], flag: 0, tc: [ 0, 0 ], color: [ 148, 55, 39, 255 ] },
	{ pos: [ 6, 33, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 225, 103, 189, 255 ] },
	{ pos: [ 62, -8, -27 ], flag: 0, tc: [ 0, 0 ], color: [ 50, 223, 144, 255 ] },
	{ pos: [ 72, -5, -18 ], flag: 0, tc: [ 0, 0 ], color: [ 109, 239, 192, 255 ] },
	{ pos: [ 72, -21, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 106, 186, 250, 255 ] },
	{ pos: [ 61, -30, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 46, 138, 252, 255 ] },
	{ pos: [ 3, -37, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 216, 135, 253, 255 ] },
	{ pos: [ -11, -21, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 143, 197, 253, 255 ] },
	{ pos: [ 3, -37, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 216, 135, 253, 255 ] },
	{ pos: [ 5, -11, 38 ], flag: 0, tc: [ 0, 0 ], color: [ 221, 217, 116, 255 ] },
	{ pos: [ -11, -6, 23 ], flag: 0, tc: [ 0, 0 ], color: [ 146, 236, 60, 255 ] },
	{ pos: [ -11, -4, -20 ], flag: 0, tc: [ 0, 0 ], color: [ 145, 244, 195, 255 ] },
	{ pos: [ -10, 21, -11 ], flag: 0, tc: [ 0, 0 ], color: [ 148, 57, 220, 255 ] },
	{ pos: [ -10, 20, 15 ], flag: 0, tc: [ 0, 0 ], color: [ 148, 55, 39, 255 ] },
	{ pos: [ 6, 33, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 225, 103, 189, 255 ] },
	{ pos: [ 5, -9, -35 ], flag: 0, tc: [ 0, 0 ], color: [ 222, 225, 138, 255 ] },
	{ pos: [ 62, -8, -27 ], flag: 0, tc: [ 0, 0 ], color: [ 50, 223, 144, 255 ] },
	{ pos: [ 61, -30, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 46, 138, 252, 255 ] },
	{ pos: [ 72, -5, -18 ], flag: 0, tc: [ 0, 0 ], color: [ 109, 239, 192, 255 ] },
	{ pos: [ 72, -21, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 106, 186, 250, 255 ] },
]

export const luigi_left_arm_shared_dl = [
	Gbi.gsSPVertex(luigi_left_arm_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 0, 0),
	Gbi.gsSP1Triangle(4, 3, 0, 0),
	Gbi.gsSP1Triangle(4, 0, 5, 0),
	Gbi.gsSP1Triangle(5, 0, 6, 0),
	Gbi.gsSP1Triangle(6, 0, 7, 0),
	Gbi.gsSP1Triangle(7, 0, 2, 0),
	Gbi.gsSP1Triangle(8, 7, 2, 0),
	Gbi.gsSP1Triangle(9, 8, 2, 0),
	Gbi.gsSP1Triangle(9, 2, 10, 0),
	Gbi.gsSP1Triangle(2, 1, 10, 0),
	Gbi.gsSP1Triangle(1, 11, 10, 0),
	Gbi.gsSP1Triangle(3, 11, 1, 0),
	Gbi.gsSP1Triangle(12, 11, 3, 0),
	Gbi.gsSP1Triangle(12, 3, 4, 0),
	Gbi.gsSP1Triangle(5, 12, 4, 0),
	Gbi.gsSP1Triangle(13, 12, 5, 0),
	Gbi.gsSP1Triangle(13, 5, 14, 0),
	Gbi.gsSP1Triangle(5, 6, 14, 0),
	Gbi.gsSP1Triangle(14, 6, 15, 0),
	Gbi.gsSP1Triangle(15, 6, 7, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(19, 16, 18, 0),
	Gbi.gsSP1Triangle(16, 19, 20, 0),
	Gbi.gsSP1Triangle(20, 19, 21, 0),
	Gbi.gsSP1Triangle(22, 21, 19, 0),
	Gbi.gsSP1Triangle(21, 22, 23, 0),
	Gbi.gsSP1Triangle(21, 23, 24, 0),
	Gbi.gsSP1Triangle(23, 25, 24, 0),
	Gbi.gsSP1Triangle(25, 26, 24, 0),
	Gbi.gsSP1Triangle(27, 26, 25, 0),
	Gbi.gsSP1Triangle(28, 26, 27, 0),
	Gbi.gsSP1Triangle(24, 26, 17, 0),
	Gbi.gsSP1Triangle(20, 24, 17, 0),
	Gbi.gsSP1Triangle(16, 20, 17, 0),
	Gbi.gsSP1Triangle(20, 21, 24, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_left_arm = (customData) => {
    return [
	Gbi.gsSPLight(mario_shirt_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_shirt_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_left_arm_shared_dl),
	Gbi.gsSPEndDisplayList(),
    ]
}

const luigi_left_forearm_shared_dl_vertex = [
	{ pos: [ 64, 20, 16 ], flag: 0, tc: [ 0, 0 ], color: [ 62, 87, 69, 255 ] },
	{ pos: [ 65, 21, -16 ], flag: 0, tc: [ 0, 0 ], color: [ 63, 90, 192, 255 ] },
	{ pos: [ 6, 25, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 228, 98, 76, 255 ] },
	{ pos: [ 78, -1, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 127, 254, 2, 255 ] },
	{ pos: [ 63, -11, 25 ], flag: 0, tc: [ 0, 0 ], color: [ 60, 216, 105, 255 ] },
	{ pos: [ 4, -11, 30 ], flag: 0, tc: [ 0, 0 ], color: [ 222, 215, 115, 255 ] },
	{ pos: [ -8, -7, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 151, 236, 68, 255 ] },
	{ pos: [ -8, 17, 14 ], flag: 0, tc: [ 0, 0 ], color: [ 153, 59, 45, 255 ] },
	{ pos: [ 6, 26, -17 ], flag: 0, tc: [ 0, 0 ], color: [ 228, 104, 189, 255 ] },
	{ pos: [ 64, -8, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 61, 224, 149, 255 ] },
	{ pos: [ 63, -28, -1 ], flag: 0, tc: [ 0, 0 ], color: [ 59, 143, 252, 255 ] },
	{ pos: [ 3, -32, -1 ], flag: 0, tc: [ 0, 0 ], color: [ 219, 135, 252, 255 ] },
	{ pos: [ -9, -21, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 146, 192, 0, 255 ] },
	{ pos: [ -8, 18, -12 ], flag: 0, tc: [ 0, 0 ], color: [ 153, 64, 217, 255 ] },
	{ pos: [ 4, -8, -31 ], flag: 0, tc: [ 0, 0 ], color: [ 224, 226, 137, 255 ] },
	{ pos: [ -8, -5, -22 ], flag: 0, tc: [ 0, 0 ], color: [ 151, 242, 185, 255 ] },
]

export const luigi_left_forearm_shared_dl = [
	Gbi.gsSPVertex(luigi_left_forearm_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 0, 0),
	Gbi.gsSP1Triangle(3, 0, 4, 0),
	Gbi.gsSP1Triangle(4, 0, 5, 0),
	Gbi.gsSP1Triangle(5, 0, 2, 0),
	Gbi.gsSP1Triangle(6, 5, 2, 0),
	Gbi.gsSP1Triangle(7, 6, 2, 0),
	Gbi.gsSP1Triangle(7, 2, 8, 0),
	Gbi.gsSP1Triangle(2, 1, 8, 0),
	Gbi.gsSP1Triangle(1, 9, 8, 0),
	Gbi.gsSP1Triangle(3, 9, 1, 0),
	Gbi.gsSP1Triangle(3, 10, 9, 0),
	Gbi.gsSP1Triangle(3, 4, 10, 0),
	Gbi.gsSP1Triangle(10, 4, 11, 0),
	Gbi.gsSP1Triangle(11, 4, 5, 0),
	Gbi.gsSP1Triangle(12, 11, 5, 0),
	Gbi.gsSP1Triangle(6, 12, 5, 0),
	Gbi.gsSP1Triangle(6, 7, 12, 0),
	Gbi.gsSP1Triangle(7, 13, 12, 0),
	Gbi.gsSP1Triangle(13, 7, 8, 0),
	Gbi.gsSP1Triangle(13, 8, 14, 0),
	Gbi.gsSP1Triangle(8, 9, 14, 0),
	Gbi.gsSP1Triangle(9, 10, 14, 0),
	Gbi.gsSP1Triangle(14, 10, 11, 0),
	Gbi.gsSP1Triangle(15, 14, 11, 0),
	Gbi.gsSP1Triangle(12, 15, 11, 0),
	Gbi.gsSP1Triangle(12, 13, 15, 0),
	Gbi.gsSP1Triangle(15, 13, 14, 0),
	Gbi.gsSPEndDisplayList(),
]

const luigi_left_hand_closed_shared_dl_vertex = [
	{ pos: [ 32, -37, 8 ], flag: 0, tc: [ 0, 0 ], color: [ 60, 152, 41, 255 ] },
	{ pos: [ 25, -54, 10 ], flag: 0, tc: [ 0, 0 ], color: [ 117, 211, 22, 255 ] },
	{ pos: [ 15, -35, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 2, 180, 154, 255 ] },
	{ pos: [ 3, -3, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 67, 27, 105, 255 ] },
	{ pos: [ 15, 3, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 252, 0, 127, 255 ] },
	{ pos: [ 34, 10, 46 ], flag: 0, tc: [ 0, 0 ], color: [ 227, 239, 123, 255 ] },
	{ pos: [ 56, -41, 12 ], flag: 0, tc: [ 0, 0 ], color: [ 6, 138, 48, 255 ] },
	{ pos: [ 24, -21, -27 ], flag: 0, tc: [ 0, 0 ], color: [ 21, 201, 143, 255 ] },
	{ pos: [ -12, 29, -33 ], flag: 0, tc: [ 0, 0 ], color: [ 204, 56, 155, 255 ] },
	{ pos: [ -16, -11, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 140, 205, 2, 255 ] },
	{ pos: [ 25, -54, 10 ], flag: 0, tc: [ 0, 0 ], color: [ 163, 171, 14, 255 ] },
	{ pos: [ 3, -3, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 153, 210, 58, 255 ] },
	{ pos: [ -20, 49, 13 ], flag: 0, tc: [ 0, 0 ], color: [ 130, 245, 14, 255 ] },
	{ pos: [ 2, 27, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 251, 68, 149, 255 ] },
	{ pos: [ -3, 42, 9 ], flag: 0, tc: [ 0, 0 ], color: [ 222, 115, 42, 255 ] },
	{ pos: [ -20, 49, 13 ], flag: 0, tc: [ 0, 0 ], color: [ 53, 112, 27, 255 ] },
	{ pos: [ -3, 42, 9 ], flag: 0, tc: [ 0, 0 ], color: [ 222, 115, 42, 255 ] },
	{ pos: [ 34, 10, 46 ], flag: 0, tc: [ 0, 0 ], color: [ 227, 239, 123, 255 ] },
	{ pos: [ 10, 63, 15 ], flag: 0, tc: [ 0, 0 ], color: [ 175, 85, 48, 255 ] },
	{ pos: [ 57, 84, 13 ], flag: 0, tc: [ 0, 0 ], color: [ 21, 121, 33, 255 ] },
	{ pos: [ 83, 33, 46 ], flag: 0, tc: [ 0, 0 ], color: [ 62, 25, 108, 255 ] },
	{ pos: [ 104, -22, 8 ], flag: 0, tc: [ 0, 0 ], color: [ 102, 191, 40, 255 ] },
	{ pos: [ 56, -41, 12 ], flag: 0, tc: [ 0, 0 ], color: [ 6, 138, 48, 255 ] },
	{ pos: [ 77, -28, -56 ], flag: 0, tc: [ 0, 0 ], color: [ 27, 181, 157, 255 ] },
	{ pos: [ 24, -21, -27 ], flag: 0, tc: [ 0, 0 ], color: [ 21, 201, 143, 255 ] },
	{ pos: [ 31, 11, -39 ], flag: 0, tc: [ 0, 0 ], color: [ 195, 253, 145, 255 ] },
	{ pos: [ 2, 27, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 251, 68, 149, 255 ] },
	{ pos: [ 29, 66, -23 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 91, 182, 255 ] },
	{ pos: [ 55, 58, -32 ], flag: 0, tc: [ 0, 0 ], color: [ 24, 85, 165, 255 ] },
	{ pos: [ 97, 43, -11 ], flag: 0, tc: [ 0, 0 ], color: [ 108, 63, 235, 255 ] },
	{ pos: [ 97, -3, -41 ], flag: 0, tc: [ 0, 0 ], color: [ 105, 252, 185, 255 ] },
	{ pos: [ 58, 16, -55 ], flag: 0, tc: [ 0, 0 ], color: [ 244, 23, 132, 255 ] },
	{ pos: [ 55, 58, -32 ], flag: 0, tc: [ 0, 0 ], color: [ 24, 85, 165, 255 ] },
	{ pos: [ 88, 20, -41 ], flag: 0, tc: [ 0, 0 ], color: [ 73, 47, 163, 255 ] },
	{ pos: [ 58, 16, -55 ], flag: 0, tc: [ 0, 0 ], color: [ 244, 23, 132, 255 ] },
	{ pos: [ 97, 43, -11 ], flag: 0, tc: [ 0, 0 ], color: [ 108, 63, 235, 255 ] },
	{ pos: [ 97, -3, -41 ], flag: 0, tc: [ 0, 0 ], color: [ 105, 252, 185, 255 ] },
]

export const luigi_left_hand_closed_shared_dl = [
	Gbi.gsSPVertex(luigi_left_hand_closed_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 0, 0),
	Gbi.gsSP1Triangle(0, 4, 3, 0),
	Gbi.gsSP1Triangle(5, 4, 0, 0),
	Gbi.gsSP1Triangle(0, 6, 5, 0),
	Gbi.gsSP1Triangle(6, 0, 7, 0),
	Gbi.gsSP1Triangle(2, 7, 0, 0),
	Gbi.gsSP1Triangle(7, 2, 8, 0),
	Gbi.gsSP1Triangle(2, 9, 8, 0),
	Gbi.gsSP1Triangle(10, 9, 2, 0),
	Gbi.gsSP1Triangle(11, 9, 10, 0),
	Gbi.gsSP1Triangle(12, 9, 11, 0),
	Gbi.gsSP1Triangle(8, 9, 12, 0),
	Gbi.gsSP1Triangle(8, 13, 7, 0),
	Gbi.gsSP1Triangle(14, 13, 8, 0),
	Gbi.gsSP1Triangle(8, 15, 14, 0),
	Gbi.gsSP1Triangle(14, 15, 3, 0),
	Gbi.gsSP1Triangle(3, 4, 14, 0),
	Gbi.gsSP1Triangle(14, 4, 5, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(17, 19, 18, 0),
	Gbi.gsSP1Triangle(17, 20, 19, 0),
	Gbi.gsSP1Triangle(21, 20, 17, 0),
	Gbi.gsSP1Triangle(22, 21, 17, 0),
	Gbi.gsSP1Triangle(23, 21, 22, 0),
	Gbi.gsSP1Triangle(24, 23, 22, 0),
	Gbi.gsSP1Triangle(24, 25, 23, 0),
	Gbi.gsSP1Triangle(24, 26, 25, 0),
	Gbi.gsSP1Triangle(27, 25, 26, 0),
	Gbi.gsSP1Triangle(18, 27, 26, 0),
	Gbi.gsSP1Triangle(26, 16, 18, 0),
	Gbi.gsSP1Triangle(27, 18, 19, 0),
	Gbi.gsSP1Triangle(19, 28, 27, 0),
	Gbi.gsSP1Triangle(19, 29, 28, 0),
	Gbi.gsSP1Triangle(20, 29, 19, 0),
	Gbi.gsSP1Triangle(21, 29, 20, 0),
	Gbi.gsSP1Triangle(30, 29, 21, 0),
	Gbi.gsSP1Triangle(23, 30, 21, 0),
	Gbi.gsSP1Triangle(31, 30, 23, 0),
	Gbi.gsSP1Triangle(25, 31, 23, 0),
	Gbi.gsSP1Triangle(31, 25, 27, 0),
	Gbi.gsSP1Triangle(31, 27, 28, 0),
	Gbi.gsSP1Triangle(32, 33, 34, 0),
	Gbi.gsSP1Triangle(33, 32, 35, 0),
	Gbi.gsSP1Triangle(33, 35, 36, 0),
	Gbi.gsSP1Triangle(34, 33, 36, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_left_hand_closed = (customData) => {
	return [
	Gbi.gsSPLight(mario_white_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_white_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_left_hand_closed_shared_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_right_arm_shared_dl_vertex = [
	{ pos: [ 4, -32, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 219, 135, 252, 255 ] },
	{ pos: [ 5, -5, -36 ], flag: 0, tc: [ 0, 0 ], color: [ 222, 224, 138, 255 ] },
	{ pos: [ 61, -4, -29 ], flag: 0, tc: [ 0, 0 ], color: [ 52, 226, 144, 255 ] },
	{ pos: [ -11, -17, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 145, 194, 251, 255 ] },
	{ pos: [ -11, -3, 23 ], flag: 0, tc: [ 0, 0 ], color: [ 148, 235, 63, 255 ] },
	{ pos: [ 5, -8, 36 ], flag: 0, tc: [ 0, 0 ], color: [ 223, 215, 116, 255 ] },
	{ pos: [ 61, -27, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 50, 139, 251, 255 ] },
	{ pos: [ 71, -1, -18 ], flag: 0, tc: [ 0, 0 ], color: [ 111, 240, 197, 255 ] },
	{ pos: [ 62, 29, -15 ], flag: 0, tc: [ 0, 0 ], color: [ 52, 98, 194, 255 ] },
	{ pos: [ 5, 36, -20 ], flag: 0, tc: [ 0, 0 ], color: [ 223, 103, 189, 255 ] },
	{ pos: [ -11, -1, -21 ], flag: 0, tc: [ 0, 0 ], color: [ 146, 239, 195, 255 ] },
	{ pos: [ -10, 24, -12 ], flag: 0, tc: [ 0, 0 ], color: [ 147, 56, 221, 255 ] },
	{ pos: [ -10, 23, 16 ], flag: 0, tc: [ 0, 0 ], color: [ 148, 53, 42, 255 ] },
	{ pos: [ 5, 34, 24 ], flag: 0, tc: [ 0, 0 ], color: [ 223, 97, 75, 255 ] },
	{ pos: [ 61, -7, 30 ], flag: 0, tc: [ 0, 0 ], color: [ 50, 216, 110, 255 ] },
	{ pos: [ 71, -4, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 110, 231, 58, 255 ] },
	{ pos: [ 71, -16, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 112, 196, 250, 255 ] },
	{ pos: [ 71, -4, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 110, 231, 58, 255 ] },
	{ pos: [ 61, -27, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 50, 139, 251, 255 ] },
	{ pos: [ 71, -1, -18 ], flag: 0, tc: [ 0, 0 ], color: [ 111, 240, 197, 255 ] },
	{ pos: [ 72, 21, -9 ], flag: 0, tc: [ 0, 0 ], color: [ 111, 52, 224, 255 ] },
	{ pos: [ 62, 29, -15 ], flag: 0, tc: [ 0, 0 ], color: [ 52, 98, 194, 255 ] },
	{ pos: [ 62, 27, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 50, 91, 73, 255 ] },
	{ pos: [ 5, 36, -20 ], flag: 0, tc: [ 0, 0 ], color: [ 223, 103, 189, 255 ] },
	{ pos: [ 5, 34, 24 ], flag: 0, tc: [ 0, 0 ], color: [ 223, 97, 75, 255 ] },
	{ pos: [ -10, 24, -12 ], flag: 0, tc: [ 0, 0 ], color: [ 147, 56, 221, 255 ] },
	{ pos: [ -11, -1, -21 ], flag: 0, tc: [ 0, 0 ], color: [ 146, 239, 195, 255 ] },
	{ pos: [ -10, 23, 16 ], flag: 0, tc: [ 0, 0 ], color: [ 148, 53, 42, 255 ] },
	{ pos: [ 61, -7, 30 ], flag: 0, tc: [ 0, 0 ], color: [ 50, 216, 110, 255 ] },
	{ pos: [ 72, 19, 15 ], flag: 0, tc: [ 0, 0 ], color: [ 110, 44, 47, 255 ] },
]

export const luigi_right_arm_shared_dl = [
	Gbi.gsSPVertex(luigi_right_arm_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 0, 0),
	Gbi.gsSP1Triangle(3, 0, 4, 0),
	Gbi.gsSP1Triangle(4, 0, 5, 0),
	Gbi.gsSP1Triangle(5, 0, 6, 0),
	Gbi.gsSP1Triangle(6, 0, 2, 0),
	Gbi.gsSP1Triangle(7, 6, 2, 0),
	Gbi.gsSP1Triangle(7, 2, 8, 0),
	Gbi.gsSP1Triangle(2, 1, 8, 0),
	Gbi.gsSP1Triangle(1, 9, 8, 0),
	Gbi.gsSP1Triangle(10, 9, 1, 0),
	Gbi.gsSP1Triangle(10, 1, 3, 0),
	Gbi.gsSP1Triangle(3, 4, 10, 0),
	Gbi.gsSP1Triangle(11, 10, 4, 0),
	Gbi.gsSP1Triangle(12, 11, 4, 0),
	Gbi.gsSP1Triangle(4, 5, 12, 0),
	Gbi.gsSP1Triangle(12, 5, 13, 0),
	Gbi.gsSP1Triangle(13, 5, 14, 0),
	Gbi.gsSP1Triangle(14, 5, 6, 0),
	Gbi.gsSP1Triangle(15, 14, 6, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(16, 18, 19, 0),
	Gbi.gsSP1Triangle(20, 16, 19, 0),
	Gbi.gsSP1Triangle(20, 19, 21, 0),
	Gbi.gsSP1Triangle(20, 21, 22, 0),
	Gbi.gsSP1Triangle(21, 23, 22, 0),
	Gbi.gsSP1Triangle(23, 24, 22, 0),
	Gbi.gsSP1Triangle(25, 24, 23, 0),
	Gbi.gsSP1Triangle(25, 23, 26, 0),
	Gbi.gsSP1Triangle(27, 24, 25, 0),
	Gbi.gsSP1Triangle(22, 24, 28, 0),
	Gbi.gsSP1Triangle(17, 22, 28, 0),
	Gbi.gsSP1Triangle(29, 22, 17, 0),
	Gbi.gsSP1Triangle(29, 17, 20, 0),
	Gbi.gsSP1Triangle(17, 16, 20, 0),
	Gbi.gsSP1Triangle(29, 20, 22, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_right_arm = (customData) => {
    return [
	Gbi.gsSPLight(mario_shirt_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_shirt_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_right_arm_shared_dl),
	Gbi.gsSPEndDisplayList(),
    ]
}

const luigi_right_forearm_shared_dl_vertex = [
	{ pos: [ 3, 28, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 227, 99, 74, 255 ] },
	{ pos: [ 2, -8, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 225, 215, 116, 255 ] },
	{ pos: [ 61, -7, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 62, 219, 104, 255 ] },
	{ pos: [ -10, 20, 15 ], flag: 0, tc: [ 0, 0 ], color: [ 153, 58, 46, 255 ] },
	{ pos: [ -10, 21, -10 ], flag: 0, tc: [ 0, 0 ], color: [ 151, 63, 221, 255 ] },
	{ pos: [ 3, 29, -16 ], flag: 0, tc: [ 0, 0 ], color: [ 225, 104, 190, 255 ] },
	{ pos: [ 62, 23, 17 ], flag: 0, tc: [ 0, 0 ], color: [ 65, 85, 68, 255 ] },
	{ pos: [ 74, 1, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 127, 252, 255, 255 ] },
	{ pos: [ 61, -25, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 61, 145, 253, 255 ] },
	{ pos: [ 2, -29, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 220, 134, 251, 255 ] },
	{ pos: [ -11, -4, 22 ], flag: 0, tc: [ 0, 0 ], color: [ 150, 235, 67, 255 ] },
	{ pos: [ -11, -17, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 146, 192, 250, 255 ] },
	{ pos: [ -11, -1, -20 ], flag: 0, tc: [ 0, 0 ], color: [ 149, 244, 188, 255 ] },
	{ pos: [ 2, -5, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 222, 225, 138, 255 ] },
	{ pos: [ 62, 25, -14 ], flag: 0, tc: [ 0, 0 ], color: [ 65, 92, 196, 255 ] },
	{ pos: [ 61, -5, -25 ], flag: 0, tc: [ 0, 0 ], color: [ 61, 225, 149, 255 ] },
]

export const luigi_right_forearm_shared_dl = [
	Gbi.gsSPVertex(luigi_right_forearm_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 0, 0),
	Gbi.gsSP1Triangle(3, 0, 4, 0),
	Gbi.gsSP1Triangle(4, 0, 5, 0),
	Gbi.gsSP1Triangle(5, 0, 6, 0),
	Gbi.gsSP1Triangle(6, 0, 2, 0),
	Gbi.gsSP1Triangle(7, 6, 2, 0),
	Gbi.gsSP1Triangle(7, 2, 8, 0),
	Gbi.gsSP1Triangle(2, 1, 8, 0),
	Gbi.gsSP1Triangle(1, 9, 8, 0),
	Gbi.gsSP1Triangle(10, 9, 1, 0),
	Gbi.gsSP1Triangle(10, 1, 3, 0),
	Gbi.gsSP1Triangle(10, 3, 11, 0),
	Gbi.gsSP1Triangle(11, 3, 12, 0),
	Gbi.gsSP1Triangle(3, 4, 12, 0),
	Gbi.gsSP1Triangle(4, 5, 12, 0),
	Gbi.gsSP1Triangle(12, 5, 13, 0),
	Gbi.gsSP1Triangle(13, 5, 14, 0),
	Gbi.gsSP1Triangle(14, 5, 6, 0),
	Gbi.gsSP1Triangle(7, 14, 6, 0),
	Gbi.gsSP1Triangle(7, 15, 14, 0),
	Gbi.gsSP1Triangle(7, 8, 15, 0),
	Gbi.gsSP1Triangle(8, 9, 15, 0),
	Gbi.gsSP1Triangle(9, 13, 15, 0),
	Gbi.gsSP1Triangle(11, 13, 9, 0),
	Gbi.gsSP1Triangle(11, 9, 10, 0),
	Gbi.gsSP1Triangle(12, 13, 11, 0),
	Gbi.gsSP1Triangle(15, 13, 14, 0),
	Gbi.gsSPEndDisplayList(),
]

const luigi_right_hand_closed_shared_dl_vertex = [
	{ pos: [ 30, -37, -7 ], flag: 0, tc: [ 0, 0 ], color: [ 59, 154, 209, 255 ] },
	{ pos: [ 23, -54, -9 ], flag: 0, tc: [ 0, 0 ], color: [ 117, 210, 239, 255 ] },
	{ pos: [ 2, 0, -39 ], flag: 0, tc: [ 0, 0 ], color: [ 72, 35, 157, 255 ] },
	{ pos: [ 11, -36, 35 ], flag: 0, tc: [ 0, 0 ], color: [ 248, 174, 97, 255 ] },
	{ pos: [ 22, -23, 30 ], flag: 0, tc: [ 0, 0 ], color: [ 10, 190, 108, 255 ] },
	{ pos: [ 54, -41, -9 ], flag: 0, tc: [ 0, 0 ], color: [ 7, 139, 206, 255 ] },
	{ pos: [ 33, 11, -42 ], flag: 0, tc: [ 0, 0 ], color: [ 232, 246, 132, 255 ] },
	{ pos: [ 14, 2, -29 ], flag: 0, tc: [ 0, 0 ], color: [ 11, 254, 129, 255 ] },
	{ pos: [ -4, 43, -7 ], flag: 0, tc: [ 0, 0 ], color: [ 218, 112, 209, 255 ] },
	{ pos: [ -21, 49, -9 ], flag: 0, tc: [ 0, 0 ], color: [ 44, 118, 237, 255 ] },
	{ pos: [ -15, 28, 35 ], flag: 0, tc: [ 0, 0 ], color: [ 196, 52, 99, 255 ] },
	{ pos: [ 0, 26, 30 ], flag: 0, tc: [ 0, 0 ], color: [ 242, 60, 111, 255 ] },
	{ pos: [ -17, -9, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 139, 208, 246, 255 ] },
	{ pos: [ -21, 49, -9 ], flag: 0, tc: [ 0, 0 ], color: [ 131, 245, 238, 255 ] },
	{ pos: [ 2, 0, -39 ], flag: 0, tc: [ 0, 0 ], color: [ 153, 213, 196, 255 ] },
	{ pos: [ 23, -54, -9 ], flag: 0, tc: [ 0, 0 ], color: [ 160, 175, 236, 255 ] },
	{ pos: [ 27, 9, 43 ], flag: 0, tc: [ 0, 0 ], color: [ 194, 251, 111, 255 ] },
	{ pos: [ 0, 26, 30 ], flag: 0, tc: [ 0, 0 ], color: [ 242, 60, 111, 255 ] },
	{ pos: [ 22, -23, 30 ], flag: 0, tc: [ 0, 0 ], color: [ 10, 190, 108, 255 ] },
	{ pos: [ 27, 64, 28 ], flag: 0, tc: [ 0, 0 ], color: [ 207, 89, 77, 255 ] },
	{ pos: [ 55, 12, 59 ], flag: 0, tc: [ 0, 0 ], color: [ 243, 19, 125, 255 ] },
	{ pos: [ 73, -30, 59 ], flag: 0, tc: [ 0, 0 ], color: [ 24, 178, 97, 255 ] },
	{ pos: [ 54, -41, -9 ], flag: 0, tc: [ 0, 0 ], color: [ 7, 139, 206, 255 ] },
	{ pos: [ 102, -23, -5 ], flag: 0, tc: [ 0, 0 ], color: [ 101, 191, 215, 255 ] },
	{ pos: [ 33, 11, -42 ], flag: 0, tc: [ 0, 0 ], color: [ 232, 246, 132, 255 ] },
	{ pos: [ 83, 33, -39 ], flag: 0, tc: [ 0, 0 ], color: [ 67, 29, 152, 255 ] },
	{ pos: [ 56, 83, -6 ], flag: 0, tc: [ 0, 0 ], color: [ 23, 122, 228, 255 ] },
	{ pos: [ 8, 63, -9 ], flag: 0, tc: [ 0, 0 ], color: [ 177, 89, 212, 255 ] },
	{ pos: [ -4, 43, -7 ], flag: 0, tc: [ 0, 0 ], color: [ 218, 112, 209, 255 ] },
	{ pos: [ 14, 2, -29 ], flag: 0, tc: [ 0, 0 ], color: [ 11, 254, 129, 255 ] },
	{ pos: [ 52, 56, 38 ], flag: 0, tc: [ 0, 0 ], color: [ 19, 81, 96, 255 ] },
	{ pos: [ 83, 18, 46 ], flag: 0, tc: [ 0, 0 ], color: [ 66, 46, 99, 255 ] },
	{ pos: [ 94, -5, 46 ], flag: 0, tc: [ 0, 0 ], color: [ 103, 250, 75, 255 ] },
	{ pos: [ 83, 18, 46 ], flag: 0, tc: [ 0, 0 ], color: [ 66, 46, 99, 255 ] },
	{ pos: [ 55, 12, 59 ], flag: 0, tc: [ 0, 0 ], color: [ 243, 19, 125, 255 ] },
	{ pos: [ 73, -30, 59 ], flag: 0, tc: [ 0, 0 ], color: [ 24, 178, 97, 255 ] },
	{ pos: [ 102, -23, -5 ], flag: 0, tc: [ 0, 0 ], color: [ 101, 191, 215, 255 ] },
	{ pos: [ 95, 41, 18 ], flag: 0, tc: [ 0, 0 ], color: [ 107, 62, 28, 255 ] },
	{ pos: [ 83, 33, -39 ], flag: 0, tc: [ 0, 0 ], color: [ 67, 29, 152, 255 ] },
	{ pos: [ 56, 83, -6 ], flag: 0, tc: [ 0, 0 ], color: [ 23, 122, 228, 255 ] },
	{ pos: [ 52, 56, 38 ], flag: 0, tc: [ 0, 0 ], color: [ 19, 81, 96, 255 ] },
]

export const luigi_right_hand_closed_dl = [
	Gbi.gsSPVertex(luigi_right_hand_closed_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 0, 0),
	Gbi.gsSP1Triangle(0, 4, 3, 0),
	Gbi.gsSP1Triangle(4, 0, 5, 0),
	Gbi.gsSP1Triangle(6, 5, 0, 0),
	Gbi.gsSP1Triangle(0, 7, 6, 0),
	Gbi.gsSP1Triangle(2, 7, 0, 0),
	Gbi.gsSP1Triangle(8, 7, 2, 0),
	Gbi.gsSP1Triangle(2, 9, 8, 0),
	Gbi.gsSP1Triangle(8, 9, 10, 0),
	Gbi.gsSP1Triangle(10, 11, 8, 0),
	Gbi.gsSP1Triangle(4, 11, 10, 0),
	Gbi.gsSP1Triangle(10, 3, 4, 0),
	Gbi.gsSP1Triangle(10, 12, 3, 0),
	Gbi.gsSP1Triangle(13, 12, 10, 0),
	Gbi.gsSP1Triangle(14, 12, 13, 0),
	Gbi.gsSP1Triangle(15, 12, 14, 0),
	Gbi.gsSP1Triangle(3, 12, 15, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(17, 16, 19, 0),
	Gbi.gsSP1Triangle(19, 16, 20, 0),
	Gbi.gsSP1Triangle(21, 20, 16, 0),
	Gbi.gsSP1Triangle(21, 16, 18, 0),
	Gbi.gsSP1Triangle(22, 21, 18, 0),
	Gbi.gsSP1Triangle(22, 23, 21, 0),
	Gbi.gsSP1Triangle(24, 23, 22, 0),
	Gbi.gsSP1Triangle(24, 25, 23, 0),
	Gbi.gsSP1Triangle(26, 25, 24, 0),
	Gbi.gsSP1Triangle(27, 26, 24, 0),
	Gbi.gsSP1Triangle(27, 24, 28, 0),
	Gbi.gsSP1Triangle(24, 29, 28, 0),
	Gbi.gsSP1Triangle(27, 28, 17, 0),
	Gbi.gsSP1Triangle(19, 27, 17, 0),
	Gbi.gsSP1Triangle(26, 27, 19, 0),
	Gbi.gsSP1Triangle(19, 30, 26, 0),
	Gbi.gsSP1Triangle(30, 19, 20, 0),
	Gbi.gsSP1Triangle(31, 30, 20, 0),
	Gbi.gsSP1Triangle(32, 33, 34, 0),
	Gbi.gsSP1Triangle(35, 32, 34, 0),
	Gbi.gsSP1Triangle(36, 32, 35, 0),
	Gbi.gsSP1Triangle(36, 37, 32, 0),
	Gbi.gsSP1Triangle(38, 37, 36, 0),
	Gbi.gsSP1Triangle(39, 37, 38, 0),
	Gbi.gsSP1Triangle(40, 37, 39, 0),
	Gbi.gsSP1Triangle(37, 40, 33, 0),
	Gbi.gsSP1Triangle(32, 37, 33, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_right_hand_closed = (customData) => {
	return [
	Gbi.gsSPLight(mario_white_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_white_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_right_hand_closed_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_metal_right_hand_closed = (customData) => {
	return [
	Gbi.gsSPDisplayList(luigi_right_hand_closed_dl),
	Gbi.gsSPClearGeometryMode(Gbi.G_TEXTURE_GEN),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADE),
	Gbi.gsSPTexture(0x0F80, 0x07C0, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_left_thigh_dl_vertex = [
	{ pos: [ -16, 2, 1 ], flag: 0, tc: [ 0, 0 ], color: [ 129, 247, 0, 255 ] },
	{ pos: [ -1, -8, -31 ], flag: 0, tc: [ 0, 0 ], color: [ 173, 223, 165, 255 ] },
	{ pos: [ 0, -34, 1 ], flag: 0, tc: [ 0, 0 ], color: [ 171, 161, 1, 255 ] },
	{ pos: [ -4, 34, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 166, 69, 199, 255 ] },
	{ pos: [ -4, 34, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 166, 69, 58, 255 ] },
	{ pos: [ -1, -8, 33 ], flag: 0, tc: [ 0, 0 ], color: [ 176, 223, 93, 255 ] },
	{ pos: [ 19, -10, 41 ], flag: 0, tc: [ 0, 0 ], color: [ 240, 218, 120, 255 ] },
	{ pos: [ 20, -45, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 237, 130, 255, 255 ] },
	{ pos: [ 19, -10, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 238, 220, 135, 255 ] },
	{ pos: [ 15, 43, -24 ], flag: 0, tc: [ 0, 0 ], color: [ 232, 101, 182, 255 ] },
	{ pos: [ 15, 43, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 232, 100, 75, 255 ] },
	{ pos: [ 96, 38, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 56, 92, 67, 255 ] },
	{ pos: [ 99, -5, 33 ], flag: 0, tc: [ 0, 0 ], color: [ 60, 226, 108, 255 ] },
	{ pos: [ 102, -32, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 67, 148, 0, 255 ] },
	{ pos: [ 99, -5, -32 ], flag: 0, tc: [ 0, 0 ], color: [ 59, 228, 147, 255 ] },
	{ pos: [ 96, 38, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 55, 93, 190, 255 ] },
	{ pos: [ 121, 7, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 127, 7, 255, 255 ] },
	{ pos: [ 96, 38, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 55, 93, 190, 255 ] },
	{ pos: [ 96, 38, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 56, 92, 67, 255 ] },
	{ pos: [ 99, -5, 33 ], flag: 0, tc: [ 0, 0 ], color: [ 60, 226, 108, 255 ] },
	{ pos: [ 102, -32, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 67, 148, 0, 255 ] },
	{ pos: [ 99, -5, -32 ], flag: 0, tc: [ 0, 0 ], color: [ 59, 228, 147, 255 ] },
]

export const luigi_left_thigh_dl = [
	Gbi.gsSPVertex(luigi_left_thigh_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 3, 1, 0),
	Gbi.gsSP1Triangle(0, 4, 3, 0),
	Gbi.gsSP1Triangle(0, 5, 4, 0),
	Gbi.gsSP1Triangle(0, 2, 5, 0),
	Gbi.gsSP1Triangle(5, 2, 6, 0),
	Gbi.gsSP1Triangle(2, 7, 6, 0),
	Gbi.gsSP1Triangle(2, 8, 7, 0),
	Gbi.gsSP1Triangle(1, 8, 2, 0),
	Gbi.gsSP1Triangle(3, 8, 1, 0),
	Gbi.gsSP1Triangle(3, 9, 8, 0),
	Gbi.gsSP1Triangle(9, 3, 4, 0),
	Gbi.gsSP1Triangle(4, 10, 9, 0),
	Gbi.gsSP1Triangle(4, 6, 10, 0),
	Gbi.gsSP1Triangle(6, 4, 5, 0),
	Gbi.gsSP1Triangle(6, 11, 10, 0),
	Gbi.gsSP1Triangle(12, 11, 6, 0),
	Gbi.gsSP1Triangle(12, 6, 13, 0),
	Gbi.gsSP1Triangle(7, 13, 6, 0),
	Gbi.gsSP1Triangle(8, 13, 7, 0),
	Gbi.gsSP1Triangle(14, 13, 8, 0),
	Gbi.gsSP1Triangle(14, 8, 15, 0),
	Gbi.gsSP1Triangle(9, 15, 8, 0),
	Gbi.gsSP1Triangle(10, 15, 9, 0),
	Gbi.gsSP1Triangle(11, 15, 10, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(16, 18, 19, 0),
	Gbi.gsSP1Triangle(16, 19, 20, 0),
	Gbi.gsSP1Triangle(16, 20, 21, 0),
	Gbi.gsSP1Triangle(16, 21, 17, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_left_thigh = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPLight(mario_overalls_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_overalls_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_left_thigh_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_metal_left_thigh = (customData) => {
	return [
	Gbi.gsSPSetGeometryMode(Gbi.G_TEXTURE_GEN),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_DECALFADE),
	...Gbi.gsDPLoadTextureBlock(luigi_texture_metal, Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 64, 32, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, 6, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0x0F80, 0x07C0, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsSPLight(mario_white_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_white_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_left_thigh_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_left_leg_shared_dl_vertex = [
	{ pos: [ 66, -52, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 34, 134, 0, 255 ] },
	{ pos: [ 73, -17, 38 ], flag: 0, tc: [ 0, 0 ], color: [ 50, 215, 109, 255 ] },
	{ pos: [ -2, -33, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 177, 156, 0, 255 ] },
	{ pos: [ 93, -6, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 125, 233, 0, 255 ] },
	{ pos: [ 73, -17, -39 ], flag: 0, tc: [ 0, 0 ], color: [ 49, 216, 146, 255 ] },
	{ pos: [ 3, -2, -33 ], flag: 0, tc: [ 0, 0 ], color: [ 194, 241, 146, 255 ] },
	{ pos: [ -18, 14, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 133, 30, 0, 255 ] },
	{ pos: [ 3, -2, 33 ], flag: 0, tc: [ 0, 0 ], color: [ 194, 238, 110, 255 ] },
	{ pos: [ 11, 36, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 214, 98, 69, 255 ] },
	{ pos: [ 83, 35, 24 ], flag: 0, tc: [ 0, 0 ], color: [ 69, 81, 69, 255 ] },
	{ pos: [ 83, 36, -23 ], flag: 0, tc: [ 0, 0 ], color: [ 68, 84, 189, 255 ] },
	{ pos: [ 11, 36, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 215, 100, 189, 255 ] },
]

export const luigi_left_leg_shared_dl = [
	Gbi.gsSPVertex(luigi_left_leg_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 0, 0),
	Gbi.gsSP1Triangle(3, 0, 4, 0),
	Gbi.gsSP1Triangle(4, 0, 2, 0),
	Gbi.gsSP1Triangle(5, 4, 2, 0),
	Gbi.gsSP1Triangle(6, 5, 2, 0),
	Gbi.gsSP1Triangle(6, 2, 7, 0),
	Gbi.gsSP1Triangle(7, 2, 1, 0),
	Gbi.gsSP1Triangle(7, 1, 8, 0),
	Gbi.gsSP1Triangle(1, 9, 8, 0),
	Gbi.gsSP1Triangle(3, 9, 1, 0),
	Gbi.gsSP1Triangle(3, 10, 9, 0),
	Gbi.gsSP1Triangle(3, 4, 10, 0),
	Gbi.gsSP1Triangle(10, 4, 11, 0),
	Gbi.gsSP1Triangle(5, 11, 4, 0),
	Gbi.gsSP1Triangle(6, 11, 5, 0),
	Gbi.gsSP1Triangle(6, 8, 11, 0),
	Gbi.gsSP1Triangle(6, 7, 8, 0),
	Gbi.gsSP1Triangle(11, 8, 10, 0),
	Gbi.gsSP1Triangle(9, 10, 8, 0),
	Gbi.gsSPEndDisplayList(),
]

const luigi_left_foot_shared_dl_vertex = [
	{ pos: [ 124, 9, -29 ], flag: 0, tc: [ 0, 0 ], color: [ 40, 121, 254, 255 ] },
	{ pos: [ 90, 20, -50 ], flag: 0, tc: [ 0, 0 ], color: [ 40, 121, 255, 255 ] },
	{ pos: [ 124, 10, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 38, 121, 255, 255 ] },
	{ pos: [ 92, 20, 51 ], flag: 0, tc: [ 0, 0 ], color: [ 39, 121, 0, 255 ] },
	{ pos: [ 0, 51, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 41, 120, 0, 255 ] },
	{ pos: [ 1, 51, 45 ], flag: 0, tc: [ 0, 0 ], color: [ 40, 121, 0, 255 ] },
	{ pos: [ -26, 60, -16 ], flag: 0, tc: [ 0, 0 ], color: [ 40, 121, 0, 255 ] },
	{ pos: [ -28, 60, 18 ], flag: 0, tc: [ 0, 0 ], color: [ 36, 122, 2, 255 ] },
	{ pos: [ 124, 9, -29 ], flag: 0, tc: [ 0, 0 ], color: [ 75, 171, 198, 255 ] },
	{ pos: [ 124, 10, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 79, 173, 55, 255 ] },
	{ pos: [ 95, -31, -1 ], flag: 0, tc: [ 0, 0 ], color: [ 56, 142, 254, 255 ] },
	{ pos: [ 60, -13, 45 ], flag: 0, tc: [ 0, 0 ], color: [ 3, 181, 103, 255 ] },
	{ pos: [ 92, 20, 51 ], flag: 0, tc: [ 0, 0 ], color: [ 30, 207, 113, 255 ] },
	{ pos: [ 1, 51, 45 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 255, 118, 255 ] },
	{ pos: [ -20, 9, 35 ], flag: 0, tc: [ 0, 0 ], color: [ 180, 204, 88, 255 ] },
	{ pos: [ -28, 60, 18 ], flag: 0, tc: [ 0, 0 ], color: [ 140, 21, 48, 255 ] },
	{ pos: [ -39, 11, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 138, 208, 255, 255 ] },
	{ pos: [ -20, 9, 35 ], flag: 0, tc: [ 0, 0 ], color: [ 180, 204, 88, 255 ] },
	{ pos: [ -28, 60, 18 ], flag: 0, tc: [ 0, 0 ], color: [ 140, 21, 48, 255 ] },
	{ pos: [ -26, 60, -16 ], flag: 0, tc: [ 0, 0 ], color: [ 144, 23, 201, 255 ] },
	{ pos: [ -22, 8, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 179, 204, 169, 255 ] },
	{ pos: [ 0, 51, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 206, 0, 139, 255 ] },
	{ pos: [ 58, -13, -42 ], flag: 0, tc: [ 0, 0 ], color: [ 255, 182, 153, 255 ] },
	{ pos: [ 90, 20, -50 ], flag: 0, tc: [ 0, 0 ], color: [ 20, 209, 140, 255 ] },
	{ pos: [ 124, 9, -29 ], flag: 0, tc: [ 0, 0 ], color: [ 75, 171, 198, 255 ] },
	{ pos: [ 95, -31, -1 ], flag: 0, tc: [ 0, 0 ], color: [ 56, 142, 254, 255 ] },
	{ pos: [ 41, -37, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 233, 131, 255, 255 ] },
	{ pos: [ 60, -13, 45 ], flag: 0, tc: [ 0, 0 ], color: [ 3, 181, 103, 255 ] },
]

export const luigi_left_foot_shared_dl = [
	Gbi.gsSPVertex(luigi_left_foot_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(2, 1, 3, 0),
	Gbi.gsSP1Triangle(1, 4, 3, 0),
	Gbi.gsSP1Triangle(3, 4, 5, 0),
	Gbi.gsSP1Triangle(4, 6, 5, 0),
	Gbi.gsSP1Triangle(6, 7, 5, 0),
	Gbi.gsSP1Triangle(8, 9, 10, 0),
	Gbi.gsSP1Triangle(10, 9, 11, 0),
	Gbi.gsSP1Triangle(12, 11, 9, 0),
	Gbi.gsSP1Triangle(12, 13, 11, 0),
	Gbi.gsSP1Triangle(11, 13, 14, 0),
	Gbi.gsSP1Triangle(13, 15, 14, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(18, 19, 16, 0),
	Gbi.gsSP1Triangle(20, 16, 19, 0),
	Gbi.gsSP1Triangle(21, 20, 19, 0),
	Gbi.gsSP1Triangle(20, 21, 22, 0),
	Gbi.gsSP1Triangle(21, 23, 22, 0),
	Gbi.gsSP1Triangle(23, 24, 22, 0),
	Gbi.gsSP1Triangle(25, 22, 24, 0),
	Gbi.gsSP1Triangle(22, 25, 26, 0),
	Gbi.gsSP1Triangle(27, 26, 25, 0),
	Gbi.gsSP1Triangle(27, 17, 26, 0),
	Gbi.gsSP1Triangle(17, 16, 26, 0),
	Gbi.gsSP1Triangle(20, 26, 16, 0),
	Gbi.gsSP1Triangle(22, 26, 20, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_left_foot = (customData) => {
	return [
	Gbi.gsSPLight(mario_brown1_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_brown1_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_left_foot_shared_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_right_thigh_dl_vertex = [
	{ pos: [ 19, -10, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 238, 220, 121, 255 ] },
	{ pos: [ 20, -45, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 238, 130, 1, 255 ] },
	{ pos: [ 102, -32, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 67, 148, 0, 255 ] },
	{ pos: [ 0, -34, -1 ], flag: 0, tc: [ 0, 0 ], color: [ 172, 160, 255, 255 ] },
	{ pos: [ -1, -8, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 174, 223, 92, 255 ] },
	{ pos: [ -4, 34, 19 ], flag: 0, tc: [ 0, 0 ], color: [ 167, 70, 59, 255 ] },
	{ pos: [ 15, 43, 24 ], flag: 0, tc: [ 0, 0 ], color: [ 233, 100, 74, 255 ] },
	{ pos: [ 96, 38, 19 ], flag: 0, tc: [ 0, 0 ], color: [ 56, 93, 66, 255 ] },
	{ pos: [ 99, -5, 32 ], flag: 0, tc: [ 0, 0 ], color: [ 60, 228, 109, 255 ] },
	{ pos: [ 121, 7, -1 ], flag: 0, tc: [ 0, 0 ], color: [ 127, 7, 255, 255 ] },
	{ pos: [ 98, -5, -33 ], flag: 0, tc: [ 0, 0 ], color: [ 58, 225, 147, 255 ] },
	{ pos: [ 18, -10, -41 ], flag: 0, tc: [ 0, 0 ], color: [ 239, 219, 136, 255 ] },
	{ pos: [ -2, -8, -32 ], flag: 0, tc: [ 0, 0 ], color: [ 174, 222, 166, 255 ] },
	{ pos: [ -17, 2, -1 ], flag: 0, tc: [ 0, 0 ], color: [ 129, 247, 1, 255 ] },
	{ pos: [ -5, 34, -21 ], flag: 0, tc: [ 0, 0 ], color: [ 167, 70, 197, 255 ] },
	{ pos: [ 14, 43, -25 ], flag: 0, tc: [ 0, 0 ], color: [ 233, 101, 183, 255 ] },
	{ pos: [ 96, 38, -21 ], flag: 0, tc: [ 0, 0 ], color: [ 56, 92, 188, 255 ] },
	{ pos: [ 14, 43, -25 ], flag: 0, tc: [ 0, 0 ], color: [ 233, 101, 183, 255 ] },
	{ pos: [ 96, 38, 19 ], flag: 0, tc: [ 0, 0 ], color: [ 56, 93, 66, 255 ] },
	{ pos: [ 121, 7, -1 ], flag: 0, tc: [ 0, 0 ], color: [ 127, 7, 255, 255 ] },
	{ pos: [ 99, -5, 32 ], flag: 0, tc: [ 0, 0 ], color: [ 60, 228, 109, 255 ] },
	{ pos: [ 98, -5, -33 ], flag: 0, tc: [ 0, 0 ], color: [ 58, 225, 147, 255 ] },
	{ pos: [ 18, -10, -41 ], flag: 0, tc: [ 0, 0 ], color: [ 239, 219, 136, 255 ] },
	{ pos: [ -5, 34, -21 ], flag: 0, tc: [ 0, 0 ], color: [ 167, 70, 197, 255 ] },
	{ pos: [ -2, -8, -32 ], flag: 0, tc: [ 0, 0 ], color: [ 174, 222, 166, 255 ] },
	{ pos: [ -17, 2, -1 ], flag: 0, tc: [ 0, 0 ], color: [ 129, 247, 1, 255 ] },
]

export const luigi_right_thigh_shared_dl = [
	Gbi.gsSPVertex(luigi_right_thigh_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 0, 0),
	Gbi.gsSP1Triangle(4, 3, 0, 0),
	Gbi.gsSP1Triangle(4, 0, 5, 0),
	Gbi.gsSP1Triangle(5, 0, 6, 0),
	Gbi.gsSP1Triangle(6, 0, 7, 0),
	Gbi.gsSP1Triangle(8, 7, 0, 0),
	Gbi.gsSP1Triangle(8, 0, 2, 0),
	Gbi.gsSP1Triangle(9, 8, 2, 0),
	Gbi.gsSP1Triangle(9, 2, 10, 0),
	Gbi.gsSP1Triangle(10, 2, 11, 0),
	Gbi.gsSP1Triangle(1, 11, 2, 0),
	Gbi.gsSP1Triangle(3, 11, 1, 0),
	Gbi.gsSP1Triangle(12, 11, 3, 0),
	Gbi.gsSP1Triangle(13, 12, 3, 0),
	Gbi.gsSP1Triangle(13, 3, 4, 0),
	Gbi.gsSP1Triangle(13, 4, 5, 0),
	Gbi.gsSP1Triangle(13, 5, 14, 0),
	Gbi.gsSP1Triangle(5, 6, 14, 0),
	Gbi.gsSP1Triangle(14, 6, 15, 0),
	Gbi.gsSP1Triangle(15, 6, 7, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(19, 16, 18, 0),
	Gbi.gsSP1Triangle(19, 18, 20, 0),
	Gbi.gsSP1Triangle(19, 21, 16, 0),
	Gbi.gsSP1Triangle(21, 22, 16, 0),
	Gbi.gsSP1Triangle(22, 17, 16, 0),
	Gbi.gsSP1Triangle(23, 17, 22, 0),
	Gbi.gsSP1Triangle(24, 23, 22, 0),
	Gbi.gsSP1Triangle(25, 23, 24, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_right_thigh = (customData) => {
	return [
	Gbi.gsSPLight(mario_overalls_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_overalls_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_right_thigh_shared_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_right_leg_shared_dl_vertex = [
	{ pos: [ 72, -17, -38 ], flag: 0, tc: [ 0, 0 ], color: [ 253, 33, 133, 255 ] },
	{ pos: [ 10, 38, -21 ], flag: 0, tc: [ 0, 0 ], color: [ 212, 97, 187, 255 ] },
	{ pos: [ 82, 38, -24 ], flag: 0, tc: [ 0, 0 ], color: [ 251, 32, 133, 255 ] },
	{ pos: [ 2, -2, -33 ], flag: 0, tc: [ 0, 0 ], color: [ 193, 237, 147, 255 ] },
	{ pos: [ -18, 14, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 132, 27, 0, 255 ] },
	{ pos: [ -2, -33, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 179, 155, 0, 255 ] },
	{ pos: [ 72, -17, -38 ], flag: 0, tc: [ 0, 0 ], color: [ 232, 165, 171, 255 ] },
	{ pos: [ 65, -50, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 233, 164, 172, 255 ] },
	{ pos: [ 2, -2, 33 ], flag: 0, tc: [ 0, 0 ], color: [ 193, 238, 109, 255 ] },
	{ pos: [ 73, -17, 38 ], flag: 0, tc: [ 0, 0 ], color: [ 232, 165, 86, 255 ] },
	{ pos: [ 65, -50, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 233, 164, 85, 255 ] },
	{ pos: [ 11, 38, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 214, 98, 70, 255 ] },
	{ pos: [ 73, -17, 38 ], flag: 0, tc: [ 0, 0 ], color: [ 254, 35, 122, 255 ] },
	{ pos: [ 83, 38, 23 ], flag: 0, tc: [ 0, 0 ], color: [ 253, 34, 122, 255 ] },
	{ pos: [ 83, 38, 23 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 127, 0, 255 ] },
	{ pos: [ 82, 38, -24 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 127, 0, 255 ] },
	{ pos: [ 95, -5, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 125, 233, 255, 255 ] },
	{ pos: [ 65, -50, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 106, 186, 255, 255 ] },
	{ pos: [ 72, -17, -38 ], flag: 0, tc: [ 0, 0 ], color: [ 109, 217, 203, 255 ] },
	{ pos: [ 73, -17, 38 ], flag: 0, tc: [ 0, 0 ], color: [ 110, 217, 51, 255 ] },
	{ pos: [ 83, 38, 23 ], flag: 0, tc: [ 0, 0 ], color: [ 123, 19, 27, 255 ] },
	{ pos: [ 82, 38, -24 ], flag: 0, tc: [ 0, 0 ], color: [ 121, 19, 224, 255 ] },
]

export const luigi_right_leg_shared_dl = [
	Gbi.gsSPVertex(luigi_right_leg_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 0, 0),
	Gbi.gsSP1Triangle(4, 1, 3, 0),
	Gbi.gsSP1Triangle(4, 3, 5, 0),
	Gbi.gsSP1Triangle(3, 6, 5, 0),
	Gbi.gsSP1Triangle(7, 5, 6, 0),
	Gbi.gsSP1Triangle(4, 5, 8, 0),
	Gbi.gsSP1Triangle(8, 5, 9, 0),
	Gbi.gsSP1Triangle(9, 5, 10, 0),
	Gbi.gsSP1Triangle(4, 8, 11, 0),
	Gbi.gsSP1Triangle(8, 12, 11, 0),
	Gbi.gsSP1Triangle(13, 11, 12, 0),
	Gbi.gsSP1Triangle(4, 11, 1, 0),
	Gbi.gsSP1Triangle(11, 14, 1, 0),
	Gbi.gsSP1Triangle(15, 1, 14, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(16, 19, 17, 0),
	Gbi.gsSP1Triangle(16, 20, 19, 0),
	Gbi.gsSP1Triangle(16, 21, 20, 0),
	Gbi.gsSP1Triangle(16, 18, 21, 0),
	Gbi.gsSPEndDisplayList(),
]

const luigi_right_foot_shared_dl_vertex = [
	{ pos: [ -26, 60, 15 ], flag: 0, tc: [ 0, 0 ], color: [ 39, 121, 255, 255 ] },
	{ pos: [ 0, 51, -46 ], flag: 0, tc: [ 0, 0 ], color: [ 40, 121, 255, 255 ] },
	{ pos: [ -30, 60, -17 ], flag: 0, tc: [ 0, 0 ], color: [ 33, 123, 252, 255 ] },
	{ pos: [ 1, 51, 39 ], flag: 0, tc: [ 0, 0 ], color: [ 40, 121, 255, 255 ] },
	{ pos: [ 90, 20, -54 ], flag: 0, tc: [ 0, 0 ], color: [ 40, 121, 255, 255 ] },
	{ pos: [ 90, 22, 47 ], flag: 0, tc: [ 0, 0 ], color: [ 40, 121, 254, 255 ] },
	{ pos: [ 122, 10, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 40, 121, 254, 255 ] },
	{ pos: [ 124, 10, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 41, 120, 255, 255 ] },
	{ pos: [ 124, 10, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 77, 174, 59, 255 ] },
	{ pos: [ 94, -31, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 56, 142, 3, 255 ] },
	{ pos: [ 122, 10, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 77, 172, 200, 255 ] },
	{ pos: [ 60, -12, 41 ], flag: 0, tc: [ 0, 0 ], color: [ 1, 185, 105, 255 ] },
	{ pos: [ 90, 22, 47 ], flag: 0, tc: [ 0, 0 ], color: [ 22, 215, 118, 255 ] },
	{ pos: [ 1, 51, 39 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 0, 118, 255 ] },
	{ pos: [ -20, 9, 30 ], flag: 0, tc: [ 0, 0 ], color: [ 183, 205, 91, 255 ] },
	{ pos: [ -26, 60, 15 ], flag: 0, tc: [ 0, 0 ], color: [ 146, 22, 60, 255 ] },
	{ pos: [ -20, 9, 30 ], flag: 0, tc: [ 0, 0 ], color: [ 183, 205, 91, 255 ] },
	{ pos: [ -26, 60, 15 ], flag: 0, tc: [ 0, 0 ], color: [ 146, 22, 60, 255 ] },
	{ pos: [ -40, 11, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 139, 208, 7, 255 ] },
	{ pos: [ -30, 60, -17 ], flag: 0, tc: [ 0, 0 ], color: [ 138, 21, 213, 255 ] },
	{ pos: [ -22, 8, -35 ], flag: 0, tc: [ 0, 0 ], color: [ 179, 202, 171, 255 ] },
	{ pos: [ 0, 51, -46 ], flag: 0, tc: [ 0, 0 ], color: [ 206, 254, 139, 255 ] },
	{ pos: [ 58, -14, -46 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 178, 155, 255 ] },
	{ pos: [ 90, 20, -54 ], flag: 0, tc: [ 0, 0 ], color: [ 26, 205, 143, 255 ] },
	{ pos: [ 122, 10, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 77, 172, 200, 255 ] },
	{ pos: [ 94, -31, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 56, 142, 3, 255 ] },
	{ pos: [ 41, -36, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 232, 131, 5, 255 ] },
	{ pos: [ 60, -12, 41 ], flag: 0, tc: [ 0, 0 ], color: [ 1, 185, 105, 255 ] },
]

export const luigi_right_foot_dl = [
	Gbi.gsSPVertex(luigi_right_foot_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 0, 0),
	Gbi.gsSP1Triangle(4, 1, 3, 0),
	Gbi.gsSP1Triangle(5, 4, 3, 0),
	Gbi.gsSP1Triangle(6, 4, 5, 0),
	Gbi.gsSP1Triangle(7, 6, 5, 0),
	Gbi.gsSP1Triangle(8, 9, 10, 0),
	Gbi.gsSP1Triangle(9, 8, 11, 0),
	Gbi.gsSP1Triangle(12, 11, 8, 0),
	Gbi.gsSP1Triangle(13, 11, 12, 0),
	Gbi.gsSP1Triangle(14, 11, 13, 0),
	Gbi.gsSP1Triangle(13, 15, 14, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(19, 18, 17, 0),
	Gbi.gsSP1Triangle(18, 19, 20, 0),
	Gbi.gsSP1Triangle(21, 20, 19, 0),
	Gbi.gsSP1Triangle(22, 20, 21, 0),
	Gbi.gsSP1Triangle(23, 22, 21, 0),
	Gbi.gsSP1Triangle(23, 24, 22, 0),
	Gbi.gsSP1Triangle(25, 22, 24, 0),
	Gbi.gsSP1Triangle(22, 25, 26, 0),
	Gbi.gsSP1Triangle(27, 26, 25, 0),
	Gbi.gsSP1Triangle(27, 16, 26, 0),
	Gbi.gsSP1Triangle(16, 18, 26, 0),
	Gbi.gsSP1Triangle(20, 26, 18, 0),
	Gbi.gsSP1Triangle(22, 26, 20, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_right_foot = (customData) => {
	return [
	Gbi.gsSPLight(mario_brown1_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_brown1_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_right_foot_dl),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADE),
	Gbi.gsDPSetEnvColor(255, 255, 255, 255),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_metal_right_foot = [
	Gbi.gsSPDisplayList(luigi_right_foot_dl),
	Gbi.gsSPClearGeometryMode(Gbi.G_TEXTURE_GEN),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADE),
	Gbi.gsSPTexture(0x0F80, 0x07C0, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetEnvColor(255, 255, 255, 255),
	Gbi.gsSPEndDisplayList(),
]

const luigi_yellow_button_dl_vertex = [
	{ pos: [ 1, 78, -32 ], flag: 0, tc: [ 799, 971 ], color: [ 16, 118, 212, 255 ] },
	{ pos: [ 18, 74, -23 ], flag: 0, tc: [ 973, 546 ], color: [ 38, 121, 246, 255 ] },
	{ pos: [ 39, 66, -26 ], flag: 0, tc: [ 853, 75 ], color: [ 63, 107, 229, 255 ] },
	{ pos: [ -6, 66, -49 ], flag: 0, tc: [ 323, 1014 ], color: [ 1, 103, 181, 255 ] },
	{ pos: [ 8, 57, -61 ], flag: 0, tc: [ 11, 654 ], color: [ 18, 82, 160, 255 ] },
	{ pos: [ 24, 53, -58 ], flag: 0, tc: [ 28, 302 ], color: [ 36, 77, 162, 255 ] },
	{ pos: [ 39, 56, -47 ], flag: 0, tc: [ 324, -20 ], color: [ 58, 92, 190, 255 ] },
	{ pos: [ 18, 74, 24 ], flag: 0, tc: [ 8, 500 ], color: [ 38, 121, 10, 255 ] },
	{ pos: [ 1, 78, 33 ], flag: 0, tc: [ 175, 930 ], color: [ 16, 117, 46, 255 ] },
	{ pos: [ 39, 66, 27 ], flag: 0, tc: [ 130, 50 ], color: [ 63, 107, 27, 255 ] },
	{ pos: [ -6, 66, 49 ], flag: 0, tc: [ 640, 1014 ], color: [ 3, 103, 75, 255 ] },
	{ pos: [ 8, 57, 61 ], flag: 0, tc: [ 949, 683 ], color: [ 19, 84, 93, 255 ] },
	{ pos: [ 24, 53, 59 ], flag: 0, tc: [ 935, 334 ], color: [ 32, 80, 94, 255 ] },
	{ pos: [ 39, 56, 48 ], flag: 0, tc: [ 647, -8 ], color: [ 58, 93, 65, 255 ] },
]

const luigi_tshirt_shared_dl_vertex = [
	{ pos: [ 39, 66, 27 ], flag: 0, tc: [ 0, 0 ], color: [ 63, 107, 27, 255 ] },
	{ pos: [ 76, 31, 22 ], flag: 0, tc: [ 0, 0 ], color: [ 100, 74, 27, 255 ] },
	{ pos: [ 39, 66, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 63, 107, 229, 255 ] },
	{ pos: [ 76, 31, -21 ], flag: 0, tc: [ 0, 0 ], color: [ 100, 74, 229, 255 ] },
	{ pos: [ 94, -2, 19 ], flag: 0, tc: [ 0, 0 ], color: [ 123, 17, 27, 255 ] },
	{ pos: [ 94, -2, -18 ], flag: 0, tc: [ 0, 0 ], color: [ 123, 16, 230, 255 ] },
	{ pos: [ 86, -35, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 105, 187, 19, 255 ] },
	{ pos: [ 86, -35, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 105, 187, 238, 255 ] },
	{ pos: [ 47, -62, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 44, 137, 0, 255 ] },
	{ pos: [ 39, -34, -66 ], flag: 0, tc: [ 0, 0 ], color: [ 31, 205, 144, 255 ] },
	{ pos: [ 77, -30, -49 ], flag: 0, tc: [ 0, 0 ], color: [ 89, 214, 175, 255 ] },
	{ pos: [ 60, -50, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 56, 153, 207, 255 ] },
	{ pos: [ 39, -1, -71 ], flag: 0, tc: [ 0, 0 ], color: [ 38, 6, 135, 255 ] },
	{ pos: [ -1, -13, -73 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 236, 131, 255 ] },
	{ pos: [ 12, -59, -54 ], flag: 0, tc: [ 0, 0 ], color: [ 8, 155, 179, 255 ] },
	{ pos: [ 4, 26, -72 ], flag: 0, tc: [ 0, 0 ], color: [ 10, 24, 132, 255 ] },
	{ pos: [ 4, 26, -72 ], flag: 0, tc: [ 0, 0 ], color: [ 10, 24, 132, 255 ] },
	{ pos: [ 36, 43, -59 ], flag: 0, tc: [ 0, 0 ], color: [ 52, 51, 152, 255 ] },
	{ pos: [ 39, -1, -71 ], flag: 0, tc: [ 0, 0 ], color: [ 38, 6, 135, 255 ] },
	{ pos: [ 73, 10, -49 ], flag: 0, tc: [ 0, 0 ], color: [ 89, 35, 172, 255 ] },
	{ pos: [ 77, -30, -49 ], flag: 0, tc: [ 0, 0 ], color: [ 89, 214, 175, 255 ] },
	{ pos: [ 39, -34, 67 ], flag: 0, tc: [ 0, 0 ], color: [ 31, 205, 112, 255 ] },
	{ pos: [ -1, -14, 74 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 235, 125, 255 ] },
	{ pos: [ 12, -59, 55 ], flag: 0, tc: [ 0, 0 ], color: [ 8, 154, 76, 255 ] },
	{ pos: [ 39, -1, 72 ], flag: 0, tc: [ 0, 0 ], color: [ 39, 6, 121, 255 ] },
	{ pos: [ 77, -30, 50 ], flag: 0, tc: [ 0, 0 ], color: [ 88, 215, 81, 255 ] },
	{ pos: [ 60, -50, 41 ], flag: 0, tc: [ 0, 0 ], color: [ 55, 153, 49, 255 ] },
	{ pos: [ 73, 10, 49 ], flag: 0, tc: [ 0, 0 ], color: [ 89, 35, 83, 255 ] },
	{ pos: [ 36, 43, 61 ], flag: 0, tc: [ 0, 0 ], color: [ 51, 53, 104, 255 ] },
	{ pos: [ 4, 26, 73 ], flag: 0, tc: [ 0, 0 ], color: [ 10, 24, 124, 255 ] },
]

const luigi_pants_overalls_shared_dl_vertex = [
	{ pos: [ 18, 74, 24 ], flag: 0, tc: [ 0, 0 ], color: [ 38, 121, 10, 255 ] },
	{ pos: [ 1, 78, -32 ], flag: 0, tc: [ 0, 0 ], color: [ 16, 118, 212, 255 ] },
	{ pos: [ 1, 78, 33 ], flag: 0, tc: [ 0, 0 ], color: [ 16, 117, 46, 255 ] },
	{ pos: [ 18, 74, -23 ], flag: 0, tc: [ 0, 0 ], color: [ 38, 121, 246, 255 ] },
	{ pos: [ 39, 66, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 63, 107, 229, 255 ] },
	{ pos: [ 39, 66, 27 ], flag: 0, tc: [ 0, 0 ], color: [ 63, 107, 27, 255 ] },
	{ pos: [ -25, 77, 29 ], flag: 0, tc: [ 0, 0 ], color: [ 239, 121, 34, 255 ] },
	{ pos: [ -25, 77, -27 ], flag: 0, tc: [ 0, 0 ], color: [ 239, 122, 223, 255 ] },
	{ pos: [ -6, 66, -49 ], flag: 0, tc: [ 0, 0 ], color: [ 1, 103, 181, 255 ] },
	{ pos: [ -39, 54, -59 ], flag: 0, tc: [ 0, 0 ], color: [ 211, 69, 159, 255 ] },
	{ pos: [ -14, 49, -65 ], flag: 0, tc: [ 0, 0 ], color: [ 250, 61, 145, 255 ] },
	{ pos: [ 8, 57, -61 ], flag: 0, tc: [ 0, 0 ], color: [ 18, 82, 160, 255 ] },
	{ pos: [ 4, 26, -72 ], flag: 0, tc: [ 0, 0 ], color: [ 10, 24, 132, 255 ] },
	{ pos: [ 24, 53, -58 ], flag: 0, tc: [ 0, 0 ], color: [ 36, 77, 162, 255 ] },
	{ pos: [ 36, 43, -59 ], flag: 0, tc: [ 0, 0 ], color: [ 52, 51, 152, 255 ] },
	{ pos: [ 39, 56, -47 ], flag: 0, tc: [ 0, 0 ], color: [ 58, 92, 190, 255 ] },
	{ pos: [ 36, 43, -59 ], flag: 0, tc: [ 0, 0 ], color: [ 52, 51, 152, 255 ] },
	{ pos: [ 39, 56, -47 ], flag: 0, tc: [ 0, 0 ], color: [ 58, 92, 190, 255 ] },
	{ pos: [ 73, 10, -49 ], flag: 0, tc: [ 0, 0 ], color: [ 89, 35, 172, 255 ] },
	{ pos: [ 76, 31, -21 ], flag: 0, tc: [ 0, 0 ], color: [ 100, 74, 229, 255 ] },
	{ pos: [ 39, 66, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 63, 107, 229, 255 ] },
	{ pos: [ 94, -2, -18 ], flag: 0, tc: [ 0, 0 ], color: [ 123, 16, 230, 255 ] },
	{ pos: [ 77, -30, -49 ], flag: 0, tc: [ 0, 0 ], color: [ 89, 214, 175, 255 ] },
	{ pos: [ 86, -35, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 105, 187, 238, 255 ] },
	{ pos: [ 60, -50, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 56, 153, 207, 255 ] },
	{ pos: [ 47, -62, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 44, 137, 0, 255 ] },
	{ pos: [ 12, -59, -54 ], flag: 0, tc: [ 0, 0 ], color: [ 8, 155, 179, 255 ] },
	{ pos: [ 0, -71, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 129, 0, 255 ] },
	{ pos: [ 12, -59, 55 ], flag: 0, tc: [ 0, 0 ], color: [ 8, 154, 76, 255 ] },
	{ pos: [ 60, -50, 41 ], flag: 0, tc: [ 0, 0 ], color: [ 55, 153, 49, 255 ] },
	{ pos: [ 86, -35, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 105, 187, 19, 255 ] },
	{ pos: [ 77, -30, 50 ], flag: 0, tc: [ 0, 0 ], color: [ 88, 215, 81, 255 ] },
	{ pos: [ 86, -35, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 105, 187, 19, 255 ] },
	{ pos: [ 94, -2, 19 ], flag: 0, tc: [ 0, 0 ], color: [ 123, 17, 27, 255 ] },
	{ pos: [ 77, -30, 50 ], flag: 0, tc: [ 0, 0 ], color: [ 88, 215, 81, 255 ] },
	{ pos: [ 73, 10, 49 ], flag: 0, tc: [ 0, 0 ], color: [ 89, 35, 83, 255 ] },
	{ pos: [ 76, 31, 22 ], flag: 0, tc: [ 0, 0 ], color: [ 100, 74, 27, 255 ] },
	{ pos: [ 39, 56, 48 ], flag: 0, tc: [ 0, 0 ], color: [ 58, 93, 65, 255 ] },
	{ pos: [ 39, 66, 27 ], flag: 0, tc: [ 0, 0 ], color: [ 63, 107, 27, 255 ] },
	{ pos: [ 36, 43, 61 ], flag: 0, tc: [ 0, 0 ], color: [ 51, 53, 104, 255 ] },
	{ pos: [ 24, 53, 59 ], flag: 0, tc: [ 0, 0 ], color: [ 32, 80, 94, 255 ] },
	{ pos: [ 4, 26, 73 ], flag: 0, tc: [ 0, 0 ], color: [ 10, 24, 124, 255 ] },
	{ pos: [ 8, 57, 61 ], flag: 0, tc: [ 0, 0 ], color: [ 19, 84, 93, 255 ] },
	{ pos: [ -14, 49, 67 ], flag: 0, tc: [ 0, 0 ], color: [ 253, 62, 111, 255 ] },
	{ pos: [ -6, 66, 49 ], flag: 0, tc: [ 0, 0 ], color: [ 3, 103, 75, 255 ] },
	{ pos: [ -39, 54, 61 ], flag: 0, tc: [ 0, 0 ], color: [ 211, 69, 97, 255 ] },
	{ pos: [ -25, 77, 29 ], flag: 0, tc: [ 0, 0 ], color: [ 239, 121, 34, 255 ] },
	{ pos: [ 1, 78, 33 ], flag: 0, tc: [ 0, 0 ], color: [ 16, 117, 46, 255 ] },
	{ pos: [ -51, 63, 43 ], flag: 0, tc: [ 0, 0 ], color: [ 198, 91, 67, 255 ] },
	{ pos: [ -39, 54, 61 ], flag: 0, tc: [ 0, 0 ], color: [ 211, 69, 97, 255 ] },
	{ pos: [ -25, 77, 29 ], flag: 0, tc: [ 0, 0 ], color: [ 239, 121, 34, 255 ] },
	{ pos: [ -82, 45, 25 ], flag: 0, tc: [ 0, 0 ], color: [ 141, 37, 40, 255 ] },
	{ pos: [ -54, 72, 19 ], flag: 0, tc: [ 0, 0 ], color: [ 198, 112, 19, 255 ] },
	{ pos: [ -54, 72, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 199, 112, 235, 255 ] },
	{ pos: [ -25, 77, -27 ], flag: 0, tc: [ 0, 0 ], color: [ 239, 122, 223, 255 ] },
	{ pos: [ -51, 62, -43 ], flag: 0, tc: [ 0, 0 ], color: [ 197, 87, 185, 255 ] },
	{ pos: [ -39, 54, -59 ], flag: 0, tc: [ 0, 0 ], color: [ 211, 69, 159, 255 ] },
	{ pos: [ -82, 45, -23 ], flag: 0, tc: [ 0, 0 ], color: [ 141, 37, 216, 255 ] },
	{ pos: [ -36, 21, -72 ], flag: 0, tc: [ 0, 0 ], color: [ 206, 12, 140, 255 ] },
	{ pos: [ -14, 49, -65 ], flag: 0, tc: [ 0, 0 ], color: [ 250, 61, 145, 255 ] },
	{ pos: [ 4, 26, -72 ], flag: 0, tc: [ 0, 0 ], color: [ 10, 24, 132, 255 ] },
	{ pos: [ -1, -13, -73 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 236, 131, 255 ] },
	{ pos: [ -36, -26, -69 ], flag: 0, tc: [ 0, 0 ], color: [ 205, 221, 145, 255 ] },
	{ pos: [ 12, -59, -54 ], flag: 0, tc: [ 0, 0 ], color: [ 8, 155, 179, 255 ] },
	{ pos: [ -39, -56, -47 ], flag: 0, tc: [ 0, 0 ], color: [ 202, 159, 193, 255 ] },
	{ pos: [ -36, -26, -69 ], flag: 0, tc: [ 0, 0 ], color: [ 205, 221, 145, 255 ] },
	{ pos: [ 12, -59, -54 ], flag: 0, tc: [ 0, 0 ], color: [ 8, 155, 179, 255 ] },
	{ pos: [ 0, -71, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 129, 0, 255 ] },
	{ pos: [ -40, -64, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 198, 143, 0, 255 ] },
	{ pos: [ -39, -56, 48 ], flag: 0, tc: [ 0, 0 ], color: [ 202, 159, 62, 255 ] },
	{ pos: [ 12, -59, 55 ], flag: 0, tc: [ 0, 0 ], color: [ 8, 154, 76, 255 ] },
	{ pos: [ -36, -26, 70 ], flag: 0, tc: [ 0, 0 ], color: [ 205, 221, 111, 255 ] },
	{ pos: [ -1, -14, 74 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 235, 125, 255 ] },
	{ pos: [ -36, 21, 73 ], flag: 0, tc: [ 0, 0 ], color: [ 206, 11, 116, 255 ] },
	{ pos: [ 4, 26, 73 ], flag: 0, tc: [ 0, 0 ], color: [ 10, 24, 124, 255 ] },
	{ pos: [ -14, 49, 67 ], flag: 0, tc: [ 0, 0 ], color: [ 253, 62, 111, 255 ] },
	{ pos: [ -39, 54, 61 ], flag: 0, tc: [ 0, 0 ], color: [ 211, 69, 97, 255 ] },
	{ pos: [ -82, 45, 25 ], flag: 0, tc: [ 0, 0 ], color: [ 141, 37, 40, 255 ] },
	{ pos: [ -70, -30, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 145, 209, 41, 255 ] },
	{ pos: [ -82, 45, -23 ], flag: 0, tc: [ 0, 0 ], color: [ 141, 37, 216, 255 ] },
	{ pos: [ -82, 45, -23 ], flag: 0, tc: [ 0, 0 ], color: [ 141, 37, 216, 255 ] },
	{ pos: [ -82, 45, 25 ], flag: 0, tc: [ 0, 0 ], color: [ 141, 37, 40, 255 ] },
	{ pos: [ -54, 72, 19 ], flag: 0, tc: [ 0, 0 ], color: [ 198, 112, 19, 255 ] },
	{ pos: [ -54, 72, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 199, 112, 235, 255 ] },
	{ pos: [ -51, 62, -43 ], flag: 0, tc: [ 0, 0 ], color: [ 197, 87, 185, 255 ] },
	{ pos: [ -70, -30, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 145, 209, 215, 255 ] },
	{ pos: [ -70, -30, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 145, 209, 41, 255 ] },
	{ pos: [ -40, -64, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 198, 143, 0, 255 ] },
	{ pos: [ -39, -56, -47 ], flag: 0, tc: [ 0, 0 ], color: [ 202, 159, 193, 255 ] },
	{ pos: [ -36, -26, -69 ], flag: 0, tc: [ 0, 0 ], color: [ 205, 221, 145, 255 ] },
	{ pos: [ -36, 21, -72 ], flag: 0, tc: [ 0, 0 ], color: [ 206, 12, 140, 255 ] },
	{ pos: [ -39, -56, 48 ], flag: 0, tc: [ 0, 0 ], color: [ 202, 159, 62, 255 ] },
	{ pos: [ -36, -26, 70 ], flag: 0, tc: [ 0, 0 ], color: [ 205, 221, 111, 255 ] },
	{ pos: [ -36, 21, 73 ], flag: 0, tc: [ 0, 0 ], color: [ 206, 11, 116, 255 ] },
]

export const luigi_yellow_button_dl = [
	Gbi.gsSPVertex(luigi_yellow_button_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 2, 3, 0),
	Gbi.gsSP1Triangle(3, 2, 4, 0),
	Gbi.gsSP1Triangle(4, 2, 5, 0),
	Gbi.gsSP1Triangle(6, 5, 2, 0),
	Gbi.gsSP1Triangle(7, 8, 9, 0),
	Gbi.gsSP1Triangle(10, 9, 8, 0),
	Gbi.gsSP1Triangle(11, 9, 10, 0),
	Gbi.gsSP1Triangle(12, 9, 11, 0),
	Gbi.gsSP1Triangle(13, 9, 12, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_pants_overalls_shared_dl = [
	Gbi.gsSPVertex(luigi_pants_overalls_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 0, 0),
	Gbi.gsSP1Triangle(3, 0, 4, 0),
	Gbi.gsSP1Triangle(0, 5, 4, 0),
	Gbi.gsSP1Triangle(1, 6, 2, 0),
	Gbi.gsSP1Triangle(7, 6, 1, 0),
	Gbi.gsSP1Triangle(8, 7, 1, 0),
	Gbi.gsSP1Triangle(8, 9, 7, 0),
	Gbi.gsSP1Triangle(8, 10, 9, 0),
	Gbi.gsSP1Triangle(8, 11, 10, 0),
	Gbi.gsSP1Triangle(10, 11, 12, 0),
	Gbi.gsSP1Triangle(11, 13, 12, 0),
	Gbi.gsSP1Triangle(13, 14, 12, 0),
	Gbi.gsSP1Triangle(14, 13, 15, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(18, 17, 19, 0),
	Gbi.gsSP1Triangle(20, 19, 17, 0),
	Gbi.gsSP1Triangle(19, 21, 18, 0),
	Gbi.gsSP1Triangle(21, 22, 18, 0),
	Gbi.gsSP1Triangle(23, 22, 21, 0),
	Gbi.gsSP1Triangle(23, 24, 22, 0),
	Gbi.gsSP1Triangle(24, 23, 25, 0),
	Gbi.gsSP1Triangle(25, 26, 24, 0),
	Gbi.gsSP1Triangle(27, 26, 25, 0),
	Gbi.gsSP1Triangle(25, 28, 27, 0),
	Gbi.gsSP1Triangle(29, 28, 25, 0),
	Gbi.gsSP1Triangle(29, 25, 30, 0),
	Gbi.gsSP1Triangle(30, 31, 29, 0),
	Gbi.gsSP1Triangle(32, 33, 34, 0),
	Gbi.gsSP1Triangle(34, 33, 35, 0),
	Gbi.gsSP1Triangle(36, 35, 33, 0),
	Gbi.gsSP1Triangle(36, 37, 35, 0),
	Gbi.gsSP1Triangle(37, 36, 38, 0),
	Gbi.gsSP1Triangle(39, 35, 37, 0),
	Gbi.gsSP1Triangle(39, 37, 40, 0),
	Gbi.gsSP1Triangle(39, 40, 41, 0),
	Gbi.gsSP1Triangle(42, 41, 40, 0),
	Gbi.gsSP1Triangle(43, 41, 42, 0),
	Gbi.gsSP1Triangle(43, 42, 44, 0),
	Gbi.gsSP1Triangle(43, 44, 45, 0),
	Gbi.gsSP1Triangle(45, 44, 46, 0),
	Gbi.gsSP1Triangle(47, 46, 44, 0),
	Gbi.gsSP1Triangle(48, 49, 50, 0),
	Gbi.gsSP1Triangle(49, 48, 51, 0),
	Gbi.gsSP1Triangle(52, 51, 48, 0),
	Gbi.gsSP1Triangle(50, 52, 48, 0),
	Gbi.gsSP1Triangle(52, 50, 53, 0),
	Gbi.gsSP1Triangle(54, 53, 50, 0),
	Gbi.gsSP1Triangle(54, 55, 53, 0),
	Gbi.gsSP1Triangle(55, 54, 56, 0),
	Gbi.gsSP1Triangle(56, 57, 55, 0),
	Gbi.gsSP1Triangle(58, 57, 56, 0),
	Gbi.gsSP1Triangle(56, 59, 58, 0),
	Gbi.gsSP1Triangle(59, 60, 58, 0),
	Gbi.gsSP1Triangle(58, 60, 61, 0),
	Gbi.gsSP1Triangle(58, 61, 62, 0),
	Gbi.gsSP1Triangle(62, 61, 63, 0),
	Gbi.gsSP1Triangle(64, 65, 66, 0),
	Gbi.gsSP1Triangle(66, 67, 64, 0),
	Gbi.gsSP1Triangle(68, 64, 67, 0),
	Gbi.gsSP1Triangle(68, 67, 69, 0),
	Gbi.gsSP1Triangle(69, 67, 70, 0),
	Gbi.gsSP1Triangle(71, 69, 70, 0),
	Gbi.gsSP1Triangle(71, 70, 72, 0),
	Gbi.gsSP1Triangle(73, 71, 72, 0),
	Gbi.gsSP1Triangle(74, 73, 72, 0),
	Gbi.gsSP1Triangle(74, 75, 73, 0),
	Gbi.gsSP1Triangle(73, 75, 76, 0),
	Gbi.gsSP1Triangle(73, 76, 77, 0),
	Gbi.gsSP1Triangle(77, 78, 73, 0),
	Gbi.gsSP1Triangle(78, 77, 79, 0),
	Gbi.gsSP1Triangle(80, 81, 82, 0),
	Gbi.gsSP1Triangle(83, 80, 82, 0),
	Gbi.gsSP1Triangle(83, 84, 80, 0),
	Gbi.gsSP1Triangle(85, 86, 80, 0),
	Gbi.gsSP1Triangle(85, 87, 86, 0),
	Gbi.gsSP1Triangle(85, 88, 87, 0),
	Gbi.gsSP1Triangle(88, 85, 89, 0),
	Gbi.gsSP1Triangle(89, 85, 90, 0),
	Gbi.gsSP1Triangle(80, 90, 85, 0),
	Gbi.gsSP1Triangle(91, 86, 87, 0),
	Gbi.gsSP1Triangle(92, 86, 91, 0),
	Gbi.gsSP1Triangle(92, 93, 86, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_tshirt_shared_dl = [
	Gbi.gsSPVertex(luigi_tshirt_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(1, 3, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 4, 0),
	Gbi.gsSP1Triangle(5, 3, 4, 0),
	Gbi.gsSP1Triangle(4, 6, 5, 0),
	Gbi.gsSP1Triangle(6, 7, 5, 0),
	Gbi.gsSP1Triangle(7, 6, 8, 0),
	Gbi.gsSP1Triangle(9, 10, 11, 0),
	Gbi.gsSP1Triangle(9, 12, 10, 0),
	Gbi.gsSP1Triangle(12, 9, 13, 0),
	Gbi.gsSP1Triangle(9, 14, 13, 0),
	Gbi.gsSP1Triangle(11, 14, 9, 0),
	Gbi.gsSP1Triangle(15, 12, 13, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(18, 17, 19, 0),
	Gbi.gsSP1Triangle(18, 19, 20, 0),
	Gbi.gsSP1Triangle(21, 22, 23, 0),
	Gbi.gsSP1Triangle(24, 22, 21, 0),
	Gbi.gsSP1Triangle(21, 25, 24, 0),
	Gbi.gsSP1Triangle(21, 26, 25, 0),
	Gbi.gsSP1Triangle(26, 21, 23, 0),
	Gbi.gsSP1Triangle(24, 25, 27, 0),
	Gbi.gsSP1Triangle(24, 27, 28, 0),
	Gbi.gsSP1Triangle(24, 28, 29, 0),
	Gbi.gsSP1Triangle(22, 24, 29, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_torso_dl = (customData) => {
    return [
	Gbi.gsSPDisplayList(luigi_pants_overalls_shared_dl),
	Gbi.gsSPLight(mario_shirt_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_shirt_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_tshirt_shared_dl),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_torso = (customData) => {
    return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_yellow_button),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_yellow_button_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_torso_dl(customData)),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_metal_torso_shared_dl = [
	Gbi.gsSPDisplayList(luigi_yellow_button_dl),
	Gbi.gsSPDisplayList(luigi_pants_overalls_shared_dl),
	Gbi.gsSPDisplayList(luigi_tshirt_shared_dl),
	Gbi.gsSPEndDisplayList(),
]

const luigi_l_logo_dl_vertex = [
	{ pos: [ 186, 82, 26 ], flag: 0, tc: [ 732, 864 ], color: [ 77, 85, 56, 255 ] },
	{ pos: [ 147, 30, 77 ], flag: 0, tc: [ 1214, 1190 ], color: [ 253, 69, 107, 255 ] },
	{ pos: [ 246, 59, 57 ], flag: 0, tc: [ 998, 194 ], color: [ 63, 72, 84, 255 ] },
	{ pos: [ 272, 72, 0 ], flag: 0, tc: [ 466, -50 ], color: [ 96, 83, 0, 255 ] },
	{ pos: [ 186, 82, -25 ], flag: 0, tc: [ 248, 876 ], color: [ 77, 84, 200, 255 ] },
	{ pos: [ 246, 59, -56 ], flag: 0, tc: [ -52, 224 ], color: [ 63, 72, 172, 255 ] },
	{ pos: [ 147, 30, -75 ], flag: 0, tc: [ -212, 1230 ], color: [ 254, 69, 149, 255 ] },
]

const luigi_eyes_cap_on_dl_vertex = [
	{ pos: [ 166, 83, -26 ], flag: 0, tc: [ 194, 72 ], color: [ 162, 84, 243, 255 ] },
	{ pos: [ 147, 30, -75 ], flag: 0, tc: [ -334, 216 ], color: [ 254, 69, 149, 255 ] },
	{ pos: [ 135, 73, -54 ], flag: 0, tc: [ -94, 378 ], color: [ 26, 90, 170, 255 ] },
	{ pos: [ 78, 89, -19 ], flag: 0, tc: [ 272, 992 ], color: [ 68, 66, 171, 255 ] },
	{ pos: [ 94, 75, -56 ], flag: 0, tc: [ -108, 832 ], color: [ 20, 99, 178, 255 ] },
	{ pos: [ 135, 93, 0 ], flag: 0, tc: [ 480, 426 ], color: [ 11, 127, 0, 255 ] },
	{ pos: [ 166, 83, 26 ], flag: 0, tc: [ 754, 64 ], color: [ 162, 85, 13, 255 ] },
	{ pos: [ 78, 89, 19 ], flag: 0, tc: [ 704, 984 ], color: [ 71, 65, 83, 255 ] },
	{ pos: [ 88, 91, 0 ], flag: 0, tc: [ 488, 928 ], color: [ 90, 90, 0, 255 ] },
	{ pos: [ 135, 73, 55 ], flag: 0, tc: [ 1054, 362 ], color: [ 27, 91, 84, 255 ] },
	{ pos: [ 94, 75, 57 ], flag: 0, tc: [ 1084, 812 ], color: [ 20, 100, 76, 255 ] },
	{ pos: [ 147, 30, 77 ], flag: 0, tc: [ 1290, 192 ], color: [ 253, 69, 107, 255 ] },
]

const luigi_hair_sideburn_cap_on_dl_vertex = [
	{ pos: [ 88, 42, -75 ], flag: 0, tc: [ -20, 677 ], color: [ 7, 41, 136, 255 ] },
	{ pos: [ 147, 30, -75 ], flag: 0, tc: [ 146, -91 ], color: [ 254, 69, 149, 255 ] },
	{ pos: [ 122, -10, -90 ], flag: 0, tc: [ 903, 197 ], color: [ 234, 36, 136, 255 ] },
	{ pos: [ 78, -26, -90 ], flag: 0, tc: [ 1236, 633 ], color: [ 2, 89, 165, 255 ] },
	{ pos: [ 35, -5, -82 ], flag: 0, tc: [ 873, 1170 ], color: [ 190, 250, 148, 255 ] },
	{ pos: [ 35, 34, -78 ], flag: 0, tc: [ 177, 1280 ], color: [ 214, 26, 139, 255 ] },
	{ pos: [ 88, 42, 77 ], flag: 0, tc: [ -49, 678 ], color: [ 6, 41, 120, 255 ] },
	{ pos: [ 122, -10, 91 ], flag: 0, tc: [ 890, 135 ], color: [ 233, 35, 120, 255 ] },
	{ pos: [ 147, 30, 77 ], flag: 0, tc: [ 93, -96 ], color: [ 253, 69, 107, 255 ] },
	{ pos: [ 78, -26, 91 ], flag: 0, tc: [ 1308, 629 ], color: [ 2, 88, 92, 255 ] },
	{ pos: [ 35, -5, 83 ], flag: 0, tc: [ 935, 1165 ], color: [ 189, 249, 108, 255 ] },
	{ pos: [ 35, 34, 79 ], flag: 0, tc: [ 185, 1281 ], color: [ 212, 27, 116, 255 ] },
]

const luigi_mustache_cap_on_dl_vertex = [
	{ pos: [ 78, 89, 19 ], flag: 0, tc: [ 287, -37 ], color: [ 71, 65, 83, 255 ] },
	{ pos: [ 58, 93, 27 ], flag: 0, tc: [ 392, 376 ], color: [ 19, 33, 121, 255 ] },
	{ pos: [ 67, 77, 67 ], flag: 0, tc: [ 910, 14 ], color: [ 8, 88, 92, 255 ] },
	{ pos: [ 36, 79, 57 ], flag: 0, tc: [ 776, 534 ], color: [ 209, 87, 80, 255 ] },
	{ pos: [ 36, 94, 26 ], flag: 0, tc: [ 339, 690 ], color: [ 182, 41, 95, 255 ] },
	{ pos: [ 14, 82, 24 ], flag: 0, tc: [ 376, 1000 ], color: [ 172, 90, 32, 255 ] },
	{ pos: [ 24, 90, 0 ], flag: 0, tc: [ 42, 934 ], color: [ 140, 51, 0, 255 ] },
	{ pos: [ -6, 40, 42 ], flag: 0, tc: [ 825, 1115 ], color: [ 147, 20, 63, 255 ] },
	{ pos: [ 35, 34, 79 ], flag: 0, tc: [ 1273, 323 ], color: [ 212, 27, 116, 255 ] },
	{ pos: [ 36, 94, -26 ], flag: 0, tc: [ 324, 713 ], color: [ 187, 44, 159, 255 ] },
	{ pos: [ 14, 82, -24 ], flag: 0, tc: [ 347, 1008 ], color: [ 172, 90, 224, 255 ] },
	{ pos: [ 24, 90, 0 ], flag: 0, tc: [ 29, 971 ], color: [ 140, 51, 0, 255 ] },
	{ pos: [ 36, 79, -57 ], flag: 0, tc: [ 749, 534 ], color: [ 211, 87, 175, 255 ] },
	{ pos: [ 58, 93, -26 ], flag: 0, tc: [ 388, 378 ], color: [ 19, 34, 135, 255 ] },
	{ pos: [ 67, 77, -66 ], flag: 0, tc: [ 900, 22 ], color: [ 9, 87, 163, 255 ] },
	{ pos: [ 78, 89, -19 ], flag: 0, tc: [ 302, 17 ], color: [ 68, 66, 171, 255 ] },
	{ pos: [ 35, 34, -78 ], flag: 0, tc: [ 1236, 294 ], color: [ 214, 26, 139, 255 ] },
	{ pos: [ 36, 79, -57 ], flag: 0, tc: [ 749, 534 ], color: [ 211, 87, 175, 255 ] },
	{ pos: [ 67, 77, -66 ], flag: 0, tc: [ 900, 22 ], color: [ 9, 87, 163, 255 ] },
	{ pos: [ -6, 40, -42 ], flag: 0, tc: [ 774, 1088 ], color: [ 148, 20, 193, 255 ] },
	{ pos: [ 14, 82, -24 ], flag: 0, tc: [ 347, 1008 ], color: [ 172, 90, 224, 255 ] },
]

const luigi_face_cap_dl_vertex = [
	{ pos: [ 246, 59, 57 ], flag: 0, tc: [ 0, 0 ], color: [ 63, 72, 84, 255 ] },
	{ pos: [ 147, 30, 77 ], flag: 0, tc: [ 0, 0 ], color: [ 253, 69, 107, 255 ] },
	{ pos: [ 184, -5, 117 ], flag: 0, tc: [ 0, 0 ], color: [ 28, 10, 123, 255 ] },
	{ pos: [ 122, -10, 91 ], flag: 0, tc: [ 0, 0 ], color: [ 233, 35, 120, 255 ] },
	{ pos: [ 130, -56, 107 ], flag: 0, tc: [ 0, 0 ], color: [ 232, 221, 120, 255 ] },
	{ pos: [ 92, -58, 73 ], flag: 0, tc: [ 0, 0 ], color: [ 203, 194, 97, 255 ] },
	{ pos: [ 66, -98, 42 ], flag: 0, tc: [ 0, 0 ], color: [ 213, 158, 68, 255 ] },
	{ pos: [ 77, -134, 42 ], flag: 0, tc: [ 0, 0 ], color: [ 187, 163, 52, 255 ] },
	{ pos: [ 77, -134, -41 ], flag: 0, tc: [ 0, 0 ], color: [ 187, 162, 205, 255 ] },
	{ pos: [ 66, -98, -42 ], flag: 0, tc: [ 0, 0 ], color: [ 212, 160, 185, 255 ] },
	{ pos: [ 130, -56, -106 ], flag: 0, tc: [ 0, 0 ], color: [ 233, 222, 136, 255 ] },
	{ pos: [ 92, -58, -72 ], flag: 0, tc: [ 0, 0 ], color: [ 203, 194, 158, 255 ] },
	{ pos: [ 122, -10, -90 ], flag: 0, tc: [ 0, 0 ], color: [ 234, 36, 136, 255 ] },
	{ pos: [ 184, -5, -115 ], flag: 0, tc: [ 0, 0 ], color: [ 28, 11, 133, 255 ] },
	{ pos: [ 147, 30, -75 ], flag: 0, tc: [ 0, 0 ], color: [ 254, 69, 149, 255 ] },
	{ pos: [ 246, 59, -56 ], flag: 0, tc: [ 0, 0 ], color: [ 63, 72, 172, 255 ] },
	{ pos: [ 246, 59, -56 ], flag: 0, tc: [ 0, 0 ], color: [ 63, 72, 172, 255 ] },
	{ pos: [ 269, -2, -33 ], flag: 0, tc: [ 0, 0 ], color: [ 112, 213, 213, 255 ] },
	{ pos: [ 184, -5, -115 ], flag: 0, tc: [ 0, 0 ], color: [ 28, 11, 133, 255 ] },
	{ pos: [ 272, 72, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 96, 83, 0, 255 ] },
	{ pos: [ 269, -2, 34 ], flag: 0, tc: [ 0, 0 ], color: [ 112, 213, 43, 255 ] },
	{ pos: [ 246, 59, 57 ], flag: 0, tc: [ 0, 0 ], color: [ 63, 72, 84, 255 ] },
	{ pos: [ 184, -5, 117 ], flag: 0, tc: [ 0, 0 ], color: [ 28, 10, 123, 255 ] },
	{ pos: [ 168, -88, 62 ], flag: 0, tc: [ 0, 0 ], color: [ 73, 167, 55, 255 ] },
	{ pos: [ 130, -56, 107 ], flag: 0, tc: [ 0, 0 ], color: [ 232, 221, 120, 255 ] },
	{ pos: [ 123, -135, 41 ], flag: 0, tc: [ 0, 0 ], color: [ 40, 144, 44, 255 ] },
	{ pos: [ 77, -134, 42 ], flag: 0, tc: [ 0, 0 ], color: [ 187, 163, 52, 255 ] },
	{ pos: [ 77, -134, -41 ], flag: 0, tc: [ 0, 0 ], color: [ 187, 162, 205, 255 ] },
	{ pos: [ 123, -135, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 40, 144, 212, 255 ] },
	{ pos: [ 130, -56, -106 ], flag: 0, tc: [ 0, 0 ], color: [ 233, 222, 136, 255 ] },
	{ pos: [ 168, -88, -61 ], flag: 0, tc: [ 0, 0 ], color: [ 73, 168, 201, 255 ] },
	{ pos: [ 163, 118, 54 ], flag: 0, tc: [ 0, 0 ], color: [ 228, 82, 93, 255 ] },
	{ pos: [ 147, 30, 77 ], flag: 0, tc: [ 0, 0 ], color: [ 253, 69, 107, 255 ] },
	{ pos: [ 186, 82, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 77, 85, 56, 255 ] },
	{ pos: [ 166, 83, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 162, 85, 13, 255 ] },
	{ pos: [ 170, 147, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 249, 127, 255, 255 ] },
	{ pos: [ 186, 82, -25 ], flag: 0, tc: [ 0, 0 ], color: [ 77, 84, 200, 255 ] },
	{ pos: [ 163, 117, -53 ], flag: 0, tc: [ 0, 0 ], color: [ 227, 81, 162, 255 ] },
	{ pos: [ 147, 30, -75 ], flag: 0, tc: [ 0, 0 ], color: [ 254, 69, 149, 255 ] },
	{ pos: [ 166, 83, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 162, 84, 243, 255 ] },
]

const luigi_face_part_cap_on_dl_vertex = [
	{ pos: [ 88, 42, -75 ], flag: 0, tc: [ 0, 0 ], color: [ 7, 41, 136, 255 ] },
	{ pos: [ 135, 73, -54 ], flag: 0, tc: [ 0, 0 ], color: [ 26, 90, 170, 255 ] },
	{ pos: [ 147, 30, -75 ], flag: 0, tc: [ 0, 0 ], color: [ 254, 69, 149, 255 ] },
	{ pos: [ 94, 75, -56 ], flag: 0, tc: [ 0, 0 ], color: [ 20, 99, 178, 255 ] },
	{ pos: [ 67, 77, -66 ], flag: 0, tc: [ 0, 0 ], color: [ 9, 87, 163, 255 ] },
	{ pos: [ 35, 34, -78 ], flag: 0, tc: [ 0, 0 ], color: [ 214, 26, 139, 255 ] },
	{ pos: [ 78, 89, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 68, 66, 171, 255 ] },
	{ pos: [ 67, 77, 67 ], flag: 0, tc: [ 0, 0 ], color: [ 8, 88, 92, 255 ] },
	{ pos: [ 94, 75, 57 ], flag: 0, tc: [ 0, 0 ], color: [ 20, 100, 76, 255 ] },
	{ pos: [ 78, 89, 19 ], flag: 0, tc: [ 0, 0 ], color: [ 71, 65, 83, 255 ] },
	{ pos: [ 88, 42, 77 ], flag: 0, tc: [ 0, 0 ], color: [ 6, 41, 120, 255 ] },
	{ pos: [ 35, 34, 79 ], flag: 0, tc: [ 0, 0 ], color: [ 212, 27, 116, 255 ] },
	{ pos: [ 135, 73, 55 ], flag: 0, tc: [ 0, 0 ], color: [ 27, 91, 84, 255 ] },
	{ pos: [ 147, 30, 77 ], flag: 0, tc: [ 0, 0 ], color: [ 253, 69, 107, 255 ] },
	{ pos: [ -6, 40, -42 ], flag: 0, tc: [ 0, 0 ], color: [ 148, 20, 193, 255 ] },
	{ pos: [ 35, -5, -82 ], flag: 0, tc: [ 0, 0 ], color: [ 190, 250, 148, 255 ] },
	{ pos: [ -6, 40, -42 ], flag: 0, tc: [ 0, 0 ], color: [ 148, 20, 193, 255 ] },
	{ pos: [ 35, -5, -82 ], flag: 0, tc: [ 0, 0 ], color: [ 190, 250, 148, 255 ] },
	{ pos: [ 12, -57, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 133, 251, 226, 255 ] },
	{ pos: [ 58, -49, -64 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 193, 156, 255 ] },
	{ pos: [ 56, -29, -115 ], flag: 0, tc: [ 0, 0 ], color: [ 206, 6, 139, 255 ] },
	{ pos: [ 78, -26, -90 ], flag: 0, tc: [ 0, 0 ], color: [ 2, 89, 165, 255 ] },
	{ pos: [ 95, -37, -115 ], flag: 0, tc: [ 0, 0 ], color: [ 37, 237, 136, 255 ] },
	{ pos: [ 122, -10, -90 ], flag: 0, tc: [ 0, 0 ], color: [ 234, 36, 136, 255 ] },
	{ pos: [ 92, -58, -72 ], flag: 0, tc: [ 0, 0 ], color: [ 203, 194, 158, 255 ] },
	{ pos: [ -18, 46, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 132, 27, 0, 255 ] },
	{ pos: [ 12, -57, 34 ], flag: 0, tc: [ 0, 0 ], color: [ 132, 251, 29, 255 ] },
	{ pos: [ 28, -80, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 168, 164, 0, 255 ] },
	{ pos: [ -6, 40, 42 ], flag: 0, tc: [ 0, 0 ], color: [ 147, 20, 63, 255 ] },
	{ pos: [ 35, -5, 83 ], flag: 0, tc: [ 0, 0 ], color: [ 189, 249, 108, 255 ] },
	{ pos: [ 58, -49, 65 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 194, 100, 255 ] },
	{ pos: [ 56, -29, 115 ], flag: 0, tc: [ 0, 0 ], color: [ 206, 5, 117, 255 ] },
	{ pos: [ 58, -49, 65 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 194, 100, 255 ] },
	{ pos: [ 92, -58, 73 ], flag: 0, tc: [ 0, 0 ], color: [ 203, 194, 97, 255 ] },
	{ pos: [ 56, -29, 115 ], flag: 0, tc: [ 0, 0 ], color: [ 206, 5, 117, 255 ] },
	{ pos: [ 95, -37, 115 ], flag: 0, tc: [ 0, 0 ], color: [ 37, 236, 120, 255 ] },
	{ pos: [ 122, -10, 91 ], flag: 0, tc: [ 0, 0 ], color: [ 233, 35, 120, 255 ] },
	{ pos: [ 78, -26, 91 ], flag: 0, tc: [ 0, 0 ], color: [ 2, 88, 92, 255 ] },
	{ pos: [ 35, -5, 83 ], flag: 0, tc: [ 0, 0 ], color: [ 189, 249, 108, 255 ] },
	{ pos: [ 35, 34, 79 ], flag: 0, tc: [ 0, 0 ], color: [ 212, 27, 116, 255 ] },
	{ pos: [ -6, 40, 42 ], flag: 0, tc: [ 0, 0 ], color: [ 147, 20, 63, 255 ] },
	{ pos: [ 14, 82, 24 ], flag: 0, tc: [ 0, 0 ], color: [ 172, 90, 32, 255 ] },
	{ pos: [ -18, 46, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 132, 27, 0, 255 ] },
	{ pos: [ 14, 82, -24 ], flag: 0, tc: [ 0, 0 ], color: [ 172, 90, 224, 255 ] },
	{ pos: [ 24, 90, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 140, 51, 0, 255 ] },
	{ pos: [ -6, 40, -42 ], flag: 0, tc: [ 0, 0 ], color: [ 148, 20, 193, 255 ] },
	{ pos: [ 36, 94, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 182, 41, 95, 255 ] },
	{ pos: [ 15, 111, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 132, 230, 255, 255 ] },
	{ pos: [ 15, 111, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 132, 230, 255, 255 ] },
	{ pos: [ 36, 94, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 182, 41, 95, 255 ] },
	{ pos: [ 29, 111, 35 ], flag: 0, tc: [ 0, 0 ], color: [ 178, 223, 95, 255 ] },
	{ pos: [ 58, 93, 27 ], flag: 0, tc: [ 0, 0 ], color: [ 19, 33, 121, 255 ] },
	{ pos: [ 58, 111, 41 ], flag: 0, tc: [ 0, 0 ], color: [ 1, 217, 121, 255 ] },
	{ pos: [ 82, 111, 35 ], flag: 0, tc: [ 0, 0 ], color: [ 77, 220, 94, 255 ] },
	{ pos: [ 78, 89, 19 ], flag: 0, tc: [ 0, 0 ], color: [ 71, 65, 83, 255 ] },
	{ pos: [ 96, 112, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 125, 232, 255, 255 ] },
	{ pos: [ 88, 91, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 90, 90, 0, 255 ] },
	{ pos: [ 78, 89, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 68, 66, 171, 255 ] },
	{ pos: [ 82, 111, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 77, 221, 161, 255 ] },
	{ pos: [ 58, 93, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 19, 34, 135, 255 ] },
	{ pos: [ 58, 111, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 1, 217, 135, 255 ] },
	{ pos: [ 29, 111, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 177, 226, 161, 255 ] },
	{ pos: [ 36, 94, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 187, 44, 159, 255 ] },
	{ pos: [ 24, 90, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 140, 51, 0, 255 ] },
	{ pos: [ 29, 111, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 177, 226, 161, 255 ] },
	{ pos: [ 15, 111, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 132, 230, 255, 255 ] },
	{ pos: [ 32, 141, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 191, 63, 167, 255 ] },
	{ pos: [ 15, 141, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 141, 55, 254, 255 ] },
	{ pos: [ 29, 111, 35 ], flag: 0, tc: [ 0, 0 ], color: [ 178, 223, 95, 255 ] },
	{ pos: [ 32, 141, 35 ], flag: 0, tc: [ 0, 0 ], color: [ 192, 65, 89, 255 ] },
	{ pos: [ 58, 111, 41 ], flag: 0, tc: [ 0, 0 ], color: [ 1, 217, 121, 255 ] },
	{ pos: [ 58, 141, 41 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 67, 108, 255 ] },
	{ pos: [ 83, 141, 35 ], flag: 0, tc: [ 0, 0 ], color: [ 73, 58, 87, 255 ] },
	{ pos: [ 82, 111, 35 ], flag: 0, tc: [ 0, 0 ], color: [ 77, 220, 94, 255 ] },
	{ pos: [ 96, 112, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 125, 232, 255, 255 ] },
	{ pos: [ 96, 141, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 117, 49, 255, 255 ] },
	{ pos: [ 82, 111, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 77, 221, 161, 255 ] },
	{ pos: [ 83, 141, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 73, 58, 169, 255 ] },
	{ pos: [ 58, 111, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 1, 217, 135, 255 ] },
	{ pos: [ 58, 141, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 66, 147, 255 ] },
	{ pos: [ 58, 141, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 66, 147, 255 ] },
	{ pos: [ 32, 141, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 191, 63, 167, 255 ] },
	{ pos: [ 36, 155, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 220, 122, 0, 255 ] },
	{ pos: [ 15, 141, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 141, 55, 254, 255 ] },
	{ pos: [ 32, 141, 35 ], flag: 0, tc: [ 0, 0 ], color: [ 192, 65, 89, 255 ] },
	{ pos: [ 58, 141, 41 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 67, 108, 255 ] },
	{ pos: [ 77, 157, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 36, 122, 0, 255 ] },
	{ pos: [ 83, 141, 35 ], flag: 0, tc: [ 0, 0 ], color: [ 73, 58, 87, 255 ] },
	{ pos: [ 96, 141, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 117, 49, 255, 255 ] },
	{ pos: [ 83, 141, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 73, 58, 169, 255 ] },
]

const luigi_face_back_hair_cap_on_dl_vertex = [
	{ pos: [ 92, -58, -72 ], flag: 0, tc: [ 0, 0 ], color: [ 203, 194, 158, 255 ] },
	{ pos: [ 66, -98, -42 ], flag: 0, tc: [ 0, 0 ], color: [ 212, 160, 185, 255 ] },
	{ pos: [ 58, -49, -64 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 193, 156, 255 ] },
	{ pos: [ 52, -110, -51 ], flag: 0, tc: [ 0, 0 ], color: [ 66, 155, 217, 255 ] },
	{ pos: [ 20, -111, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 213, 156, 66, 255 ] },
	{ pos: [ 28, -80, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 168, 164, 0, 255 ] },
	{ pos: [ 66, -98, 42 ], flag: 0, tc: [ 0, 0 ], color: [ 213, 158, 68, 255 ] },
	{ pos: [ 20, -111, 30 ], flag: 0, tc: [ 0, 0 ], color: [ 212, 157, 190, 255 ] },
	{ pos: [ 52, -110, 53 ], flag: 0, tc: [ 0, 0 ], color: [ 66, 156, 43, 255 ] },
	{ pos: [ 58, -49, 65 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 194, 100, 255 ] },
	{ pos: [ 92, -58, 73 ], flag: 0, tc: [ 0, 0 ], color: [ 203, 194, 97, 255 ] },
	{ pos: [ 24, -80, 74 ], flag: 0, tc: [ 0, 0 ], color: [ 225, 19, 122, 255 ] },
	{ pos: [ 12, -57, 34 ], flag: 0, tc: [ 0, 0 ], color: [ 132, 251, 29, 255 ] },
	{ pos: [ 3, -83, 48 ], flag: 0, tc: [ 0, 0 ], color: [ 130, 12, 11, 255 ] },
	{ pos: [ 11, -115, 63 ], flag: 0, tc: [ 0, 0 ], color: [ 191, 165, 61, 255 ] },
	{ pos: [ 11, -115, -62 ], flag: 0, tc: [ 0, 0 ], color: [ 192, 165, 195, 255 ] },
	{ pos: [ 11, -115, -62 ], flag: 0, tc: [ 0, 0 ], color: [ 192, 165, 195, 255 ] },
	{ pos: [ 24, -80, -73 ], flag: 0, tc: [ 0, 0 ], color: [ 226, 18, 134, 255 ] },
	{ pos: [ 52, -110, -51 ], flag: 0, tc: [ 0, 0 ], color: [ 66, 155, 217, 255 ] },
	{ pos: [ 3, -83, -47 ], flag: 0, tc: [ 0, 0 ], color: [ 130, 12, 246, 255 ] },
	{ pos: [ 20, -111, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 213, 156, 66, 255 ] },
	{ pos: [ 28, -80, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 168, 164, 0, 255 ] },
	{ pos: [ 12, -57, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 133, 251, 226, 255 ] },
	{ pos: [ 58, -49, -64 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 193, 156, 255 ] },
]

export const luigi_l_logo_dl = [
	Gbi.gsSPVertex(luigi_l_logo_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 0, 2, 0),
	Gbi.gsSP1Triangle(4, 0, 3, 0),
	Gbi.gsSP1Triangle(5, 4, 3, 0),
	Gbi.gsSP1Triangle(6, 4, 5, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_eyes_cap_on_dl = [
	Gbi.gsSPVertex(luigi_eyes_cap_on_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 2, 3, 0),
	Gbi.gsSP1Triangle(3, 2, 4, 0),
	Gbi.gsSP1Triangle(5, 0, 3, 0),
	Gbi.gsSP1Triangle(5, 6, 0, 0),
	Gbi.gsSP1Triangle(5, 7, 6, 0),
	Gbi.gsSP1Triangle(8, 7, 5, 0),
	Gbi.gsSP1Triangle(8, 5, 3, 0),
	Gbi.gsSP1Triangle(6, 7, 9, 0),
	Gbi.gsSP1Triangle(10, 9, 7, 0),
	Gbi.gsSP1Triangle(6, 9, 11, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_hair_sideburn_cap_on_dl = [
	Gbi.gsSPVertex(luigi_hair_sideburn_cap_on_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 0, 2, 0),
	Gbi.gsSP1Triangle(3, 4, 0, 0),
	Gbi.gsSP1Triangle(4, 5, 0, 0),
	Gbi.gsSP1Triangle(6, 7, 8, 0),
	Gbi.gsSP1Triangle(6, 9, 7, 0),
	Gbi.gsSP1Triangle(10, 9, 6, 0),
	Gbi.gsSP1Triangle(11, 10, 6, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_mustache_cap_on_dl = [
	Gbi.gsSPVertex(luigi_mustache_cap_on_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(1, 3, 2, 0),
	Gbi.gsSP1Triangle(4, 3, 1, 0),
	Gbi.gsSP1Triangle(3, 4, 5, 0),
	Gbi.gsSP1Triangle(4, 6, 5, 0),
	Gbi.gsSP1Triangle(3, 5, 7, 0),
	Gbi.gsSP1Triangle(3, 7, 8, 0),
	Gbi.gsSP1Triangle(8, 2, 3, 0),
	Gbi.gsSP1Triangle(9, 10, 11, 0),
	Gbi.gsSP1Triangle(12, 10, 9, 0),
	Gbi.gsSP1Triangle(9, 13, 12, 0),
	Gbi.gsSP1Triangle(13, 14, 12, 0),
	Gbi.gsSP1Triangle(15, 14, 13, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(17, 16, 19, 0),
	Gbi.gsSP1Triangle(17, 19, 20, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_face_part_cap_on_dl = [
	Gbi.gsSPVertex(luigi_face_part_cap_on_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(1, 0, 3, 0),
	Gbi.gsSP1Triangle(3, 0, 4, 0),
	Gbi.gsSP1Triangle(5, 4, 0, 0),
	Gbi.gsSP1Triangle(6, 3, 4, 0),
	Gbi.gsSP1Triangle(7, 8, 9, 0),
	Gbi.gsSP1Triangle(10, 8, 7, 0),
	Gbi.gsSP1Triangle(7, 11, 10, 0),
	Gbi.gsSP1Triangle(10, 12, 8, 0),
	Gbi.gsSP1Triangle(13, 12, 10, 0),
	Gbi.gsSP1Triangle(14, 5, 15, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(18, 17, 19, 0),
	Gbi.gsSP1Triangle(19, 17, 20, 0),
	Gbi.gsSP1Triangle(20, 17, 21, 0),
	Gbi.gsSP1Triangle(22, 20, 21, 0),
	Gbi.gsSP1Triangle(23, 22, 21, 0),
	Gbi.gsSP1Triangle(23, 24, 22, 0),
	Gbi.gsSP1Triangle(20, 22, 24, 0),
	Gbi.gsSP1Triangle(19, 20, 24, 0),
	Gbi.gsSP1Triangle(16, 18, 25, 0),
	Gbi.gsSP1Triangle(25, 18, 26, 0),
	Gbi.gsSP1Triangle(26, 18, 27, 0),
	Gbi.gsSP1Triangle(25, 26, 28, 0),
	Gbi.gsSP1Triangle(29, 28, 26, 0),
	Gbi.gsSP1Triangle(29, 26, 30, 0),
	Gbi.gsSP1Triangle(30, 31, 29, 0),
	Gbi.gsSP1Triangle(32, 33, 34, 0),
	Gbi.gsSP1Triangle(33, 35, 34, 0),
	Gbi.gsSP1Triangle(36, 35, 33, 0),
	Gbi.gsSP1Triangle(35, 36, 37, 0),
	Gbi.gsSP1Triangle(37, 34, 35, 0),
	Gbi.gsSP1Triangle(34, 37, 38, 0),
	Gbi.gsSP1Triangle(38, 39, 40, 0),
	Gbi.gsSP1Triangle(41, 42, 40, 0),
	Gbi.gsSP1Triangle(43, 42, 41, 0),
	Gbi.gsSP1Triangle(43, 41, 44, 0),
	Gbi.gsSP1Triangle(45, 42, 43, 0),
	Gbi.gsSP1Triangle(46, 47, 44, 0),
	Gbi.gsSP1Triangle(48, 49, 50, 0),
	Gbi.gsSP1Triangle(49, 51, 50, 0),
	Gbi.gsSP1Triangle(50, 51, 52, 0),
	Gbi.gsSP1Triangle(51, 53, 52, 0),
	Gbi.gsSP1Triangle(53, 51, 54, 0),
	Gbi.gsSP1Triangle(54, 55, 53, 0),
	Gbi.gsSP1Triangle(56, 55, 54, 0),
	Gbi.gsSP1Triangle(57, 55, 56, 0),
	Gbi.gsSP1Triangle(55, 57, 58, 0),
	Gbi.gsSP1Triangle(57, 59, 58, 0),
	Gbi.gsSP1Triangle(58, 59, 60, 0),
	Gbi.gsSP1Triangle(59, 61, 60, 0),
	Gbi.gsSP1Triangle(61, 59, 62, 0),
	Gbi.gsSP1Triangle(62, 48, 61, 0),
	Gbi.gsSP1Triangle(63, 48, 62, 0),
	Gbi.gsSP1Triangle(64, 65, 66, 0),
	Gbi.gsSP1Triangle(65, 67, 66, 0),
	Gbi.gsSP1Triangle(68, 67, 65, 0),
	Gbi.gsSP1Triangle(69, 67, 68, 0),
	Gbi.gsSP1Triangle(69, 68, 70, 0),
	Gbi.gsSP1Triangle(69, 70, 71, 0),
	Gbi.gsSP1Triangle(72, 71, 70, 0),
	Gbi.gsSP1Triangle(73, 72, 70, 0),
	Gbi.gsSP1Triangle(73, 74, 72, 0),
	Gbi.gsSP1Triangle(74, 75, 72, 0),
	Gbi.gsSP1Triangle(75, 74, 76, 0),
	Gbi.gsSP1Triangle(77, 75, 76, 0),
	Gbi.gsSP1Triangle(77, 76, 78, 0),
	Gbi.gsSP1Triangle(79, 77, 78, 0),
	Gbi.gsSP1Triangle(78, 66, 79, 0),
	Gbi.gsSP1Triangle(78, 64, 66, 0),
	Gbi.gsSP1Triangle(80, 81, 82, 0),
	Gbi.gsSP1Triangle(82, 81, 83, 0),
	Gbi.gsSP1Triangle(82, 83, 84, 0),
	Gbi.gsSP1Triangle(82, 84, 85, 0),
	Gbi.gsSP1Triangle(86, 82, 85, 0),
	Gbi.gsSP1Triangle(87, 86, 85, 0),
	Gbi.gsSP1Triangle(87, 88, 86, 0),
	Gbi.gsSP1Triangle(89, 86, 88, 0),
	Gbi.gsSP1Triangle(89, 80, 86, 0),
	Gbi.gsSP1Triangle(86, 80, 82, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_face_cap_dl = [
	Gbi.gsSPVertex(luigi_face_cap_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(1, 3, 2, 0),
	Gbi.gsSP1Triangle(4, 2, 3, 0),
	Gbi.gsSP1Triangle(4, 3, 5, 0),
	Gbi.gsSP1Triangle(5, 6, 4, 0),
	Gbi.gsSP1Triangle(4, 6, 7, 0),
	Gbi.gsSP1Triangle(6, 8, 7, 0),
	Gbi.gsSP1Triangle(6, 9, 8, 0),
	Gbi.gsSP1Triangle(9, 10, 8, 0),
	Gbi.gsSP1Triangle(9, 11, 10, 0),
	Gbi.gsSP1Triangle(10, 11, 12, 0),
	Gbi.gsSP1Triangle(10, 12, 13, 0),
	Gbi.gsSP1Triangle(12, 14, 13, 0),
	Gbi.gsSP1Triangle(13, 14, 15, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(17, 16, 19, 0),
	Gbi.gsSP1Triangle(19, 20, 17, 0),
	Gbi.gsSP1Triangle(19, 21, 20, 0),
	Gbi.gsSP1Triangle(22, 20, 21, 0),
	Gbi.gsSP1Triangle(22, 23, 20, 0),
	Gbi.gsSP1Triangle(23, 22, 24, 0),
	Gbi.gsSP1Triangle(25, 23, 24, 0),
	Gbi.gsSP1Triangle(25, 24, 26, 0),
	Gbi.gsSP1Triangle(25, 26, 27, 0),
	Gbi.gsSP1Triangle(28, 25, 27, 0),
	Gbi.gsSP1Triangle(29, 28, 27, 0),
	Gbi.gsSP1Triangle(28, 29, 30, 0),
	Gbi.gsSP1Triangle(30, 29, 18, 0),
	Gbi.gsSP1Triangle(18, 17, 30, 0),
	Gbi.gsSP1Triangle(17, 23, 30, 0),
	Gbi.gsSP1Triangle(20, 23, 17, 0),
	Gbi.gsSP1Triangle(23, 25, 30, 0),
	Gbi.gsSP1Triangle(28, 30, 25, 0),
	Gbi.gsSP1Triangle(31, 32, 33, 0),
	Gbi.gsSP1Triangle(31, 34, 32, 0),
	Gbi.gsSP1Triangle(35, 34, 31, 0),
	Gbi.gsSP1Triangle(35, 31, 33, 0),
	Gbi.gsSP1Triangle(35, 33, 36, 0),
	Gbi.gsSP1Triangle(35, 36, 37, 0),
	Gbi.gsSP1Triangle(38, 37, 36, 0),
	Gbi.gsSP1Triangle(37, 38, 39, 0),
	Gbi.gsSP1Triangle(35, 37, 39, 0),
	Gbi.gsSP1Triangle(34, 35, 39, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_face_back_hair_cap_on_dl = [
	Gbi.gsSPVertex(luigi_face_back_hair_cap_on_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(2, 1, 3, 0),
	Gbi.gsSP1Triangle(1, 4, 3, 0),
	Gbi.gsSP1Triangle(1, 5, 4, 0),
	Gbi.gsSP1Triangle(6, 5, 1, 0),
	Gbi.gsSP1Triangle(6, 7, 5, 0),
	Gbi.gsSP1Triangle(6, 8, 7, 0),
	Gbi.gsSP1Triangle(9, 8, 6, 0),
	Gbi.gsSP1Triangle(9, 6, 10, 0),
	Gbi.gsSP1Triangle(9, 11, 8, 0),
	Gbi.gsSP1Triangle(12, 11, 9, 0),
	Gbi.gsSP1Triangle(12, 13, 11, 0),
	Gbi.gsSP1Triangle(13, 12, 5, 0),
	Gbi.gsSP1Triangle(7, 13, 5, 0),
	Gbi.gsSP1Triangle(13, 7, 14, 0),
	Gbi.gsSP1Triangle(7, 8, 14, 0),
	Gbi.gsSP1Triangle(8, 11, 14, 0),
	Gbi.gsSP1Triangle(11, 13, 14, 0),
	Gbi.gsSP1Triangle(15, 3, 4, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(16, 19, 17, 0),
	Gbi.gsSP1Triangle(16, 20, 19, 0),
	Gbi.gsSP1Triangle(19, 20, 21, 0),
	Gbi.gsSP1Triangle(22, 19, 21, 0),
	Gbi.gsSP1Triangle(22, 17, 19, 0),
	Gbi.gsSP1Triangle(22, 23, 17, 0),
	Gbi.gsSP1Triangle(23, 18, 17, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_face_cap_on_dl = (customData) => {
    return [
    Gbi.gsSPDisplayList(luigi_face_part_cap_on_dl),
    Gbi.gsSPLight(mario_hat_lights_group(customData).l[0], 1),
    Gbi.gsSPLight(mario_hat_lights_group(customData).a, 2),
    Gbi.gsSPDisplayList(luigi_face_cap_dl),
    Gbi.gsSPLight(mario_brown2_lights_group(customData).l[0], 1),
    Gbi.gsSPLight(mario_brown2_lights_group(customData).a, 2),
    Gbi.gsSPDisplayList(luigi_face_back_hair_cap_on_dl),
    Gbi.gsSPEndDisplayList(),
    ]
}


export const luigi_cap_on_eyes_front = (customData) => {
    return [
    Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsSPLight(mario_hat_lights_group(customData).l[0], 1),
    Gbi.gsSPLight(mario_hat_lights_group(customData).a, 2),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_l_logo_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_front),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_eyes_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_hair_sideburn),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_mustache_cap_on_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_face_cap_on_dl(customData)),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_cap_on_eyes_half_closed = (customData) => {
    return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsSPLight(mario_hat_lights_group(customData).l[0], 1),
    Gbi.gsSPLight(mario_hat_lights_group(customData).a, 2),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_l_logo_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_half_closed),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_eyes_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_hair_sideburn),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_mustache_cap_on_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_face_cap_on_dl(customData)),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_cap_on_eyes_closed = (customData) => {
    return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsSPLight(mario_hat_lights_group(customData).l[0], 1),
    Gbi.gsSPLight(mario_hat_lights_group(customData).a, 2),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_l_logo_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_closed),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_eyes_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_hair_sideburn),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_mustache_cap_on_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_face_cap_on_dl(customData)),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_cap_on_eyes_right = (customData) => {
    return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsSPLight(mario_hat_lights_group(customData).l[0], 1),
    Gbi.gsSPLight(mario_hat_lights_group(customData).a, 2),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_l_logo_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_right),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_eyes_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_hair_sideburn),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_mustache_cap_on_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_face_cap_on_dl(customData)),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_cap_on_eyes_left = (customData) => {
    return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsSPLight(mario_hat_lights_group(customData).l[0], 1),
    Gbi.gsSPLight(mario_hat_lights_group(customData).a, 2),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_l_logo_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_left),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_eyes_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_hair_sideburn),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_mustache_cap_on_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_face_cap_on_dl(customData)),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_cap_on_eyes_up = (customData) => {
    return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsSPLight(mario_hat_lights_group(customData).l[0], 1),
    Gbi.gsSPLight(mario_hat_lights_group(customData).a, 2),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_l_logo_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_up),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_eyes_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_hair_sideburn),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_mustache_cap_on_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_face_cap_on_dl(customData)),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_cap_on_eyes_down = (customData) => {
    return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsSPLight(mario_hat_lights_group(customData).l[0], 1),
    Gbi.gsSPLight(mario_hat_lights_group(customData).a, 2),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_l_logo_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_down),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_eyes_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_hair_sideburn),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_mustache_cap_on_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_face_cap_on_dl(customData)),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_cap_on_eyes_dead = (customData) => {
    return [
    Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsSPLight(mario_hat_lights_group(customData).l[0], 1),
    Gbi.gsSPLight(mario_hat_lights_group(customData).a, 2),
    Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
    Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
    Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
    Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
    Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
    Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
    Gbi.gsSPDisplayList(luigi_l_logo_dl),
    Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_dead),
    Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
    Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
    Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
    Gbi.gsSPDisplayList(luigi_eyes_cap_on_dl),
    Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_hair_sideburn),
    Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
    Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_on_dl),
    Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
    Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
    Gbi.gsSPDisplayList(luigi_mustache_cap_on_dl),
    Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
    Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
    Gbi.gsSPDisplayList(luigi_face_cap_on_dl(customData)),
    Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_metal_cap_on_shared_dl = [
	Gbi.gsSPDisplayList(luigi_l_logo_dl),
	Gbi.gsSPDisplayList(luigi_eyes_cap_on_dl),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_on_dl),
	Gbi.gsSPDisplayList(luigi_mustache_cap_on_dl),
	Gbi.gsSPDisplayList(luigi_face_part_cap_on_dl),
	Gbi.gsSPDisplayList(luigi_face_cap_dl),
	Gbi.gsSPDisplayList(luigi_face_back_hair_cap_on_dl),
	Gbi.gsSPEndDisplayList(),
]

const luigi_eyes_cap_off_dl_vertex = [
	{ pos: [ 167, 84, 26 ], flag: 0, tc: [ 754, 64 ], color: [ 28, 116, 44, 255 ] },
	{ pos: [ 136, 74, 55 ], flag: 0, tc: [ 1054, 362 ], color: [ 27, 90, 85, 255 ] },
	{ pos: [ 147, 30, 77 ], flag: 0, tc: [ 1290, 192 ], color: [ 0, 51, 116, 255 ] },
	{ pos: [ 78, 90, 20 ], flag: 0, tc: [ 704, 984 ], color: [ 70, 65, 84, 255 ] },
	{ pos: [ 136, 93, 0 ], flag: 0, tc: [ 480, 426 ], color: [ 11, 127, 0, 255 ] },
	{ pos: [ 167, 84, -26 ], flag: 0, tc: [ 194, 72 ], color: [ 28, 116, 211, 255 ] },
	{ pos: [ 78, 90, -20 ], flag: 0, tc: [ 272, 992 ], color: [ 67, 66, 170, 255 ] },
	{ pos: [ 136, 74, -54 ], flag: 0, tc: [ -94, 378 ], color: [ 26, 90, 170, 255 ] },
	{ pos: [ 147, 30, -76 ], flag: 0, tc: [ -334, 216 ], color: [ 249, 49, 139, 255 ] },
	{ pos: [ 94, 76, -56 ], flag: 0, tc: [ -108, 832 ], color: [ 19, 99, 179, 255 ] },
	{ pos: [ 94, 76, 57 ], flag: 0, tc: [ 1084, 812 ], color: [ 19, 100, 77, 255 ] },
	{ pos: [ 89, 92, 0 ], flag: 0, tc: [ 488, 928 ], color: [ 92, 88, 0, 255 ] },
]

const luigi_hair_sideburn_cap_off_dl_vertex = [
	{ pos: [ 89, 43, 77 ], flag: 0, tc: [ -49, 678 ], color: [ 7, 41, 120, 255 ] },
	{ pos: [ 122, -10, 92 ], flag: 0, tc: [ 890, 135 ], color: [ 4, 15, 126, 255 ] },
	{ pos: [ 147, 30, 77 ], flag: 0, tc: [ 93, -96 ], color: [ 0, 51, 116, 255 ] },
	{ pos: [ 78, -26, 92 ], flag: 0, tc: [ 1308, 629 ], color: [ 3, 89, 90, 255 ] },
	{ pos: [ 34, -5, 84 ], flag: 0, tc: [ 935, 1165 ], color: [ 189, 250, 108, 255 ] },
	{ pos: [ 34, 35, 79 ], flag: 0, tc: [ 185, 1281 ], color: [ 212, 28, 116, 255 ] },
	{ pos: [ 89, 43, -76 ], flag: 0, tc: [ -20, 677 ], color: [ 7, 41, 136, 255 ] },
	{ pos: [ 147, 30, -76 ], flag: 0, tc: [ 146, -91 ], color: [ 249, 49, 139, 255 ] },
	{ pos: [ 122, -10, -91 ], flag: 0, tc: [ 903, 197 ], color: [ 4, 15, 130, 255 ] },
	{ pos: [ 78, -26, -91 ], flag: 0, tc: [ 1236, 633 ], color: [ 3, 90, 166, 255 ] },
	{ pos: [ 34, -5, -83 ], flag: 0, tc: [ 873, 1170 ], color: [ 190, 250, 147, 255 ] },
	{ pos: [ 34, 34, -78 ], flag: 0, tc: [ 177, 1280 ], color: [ 213, 27, 139, 255 ] },
]

const luigi_mustache_cap_off_dl_vertex = [
	{ pos: [ 78, 90, -20 ], flag: 0, tc: [ 340, 44 ], color: [ 67, 66, 170, 255 ] },
	{ pos: [ 67, 77, -67 ], flag: 0, tc: [ 920, -16 ], color: [ 8, 86, 163, 255 ] },
	{ pos: [ 58, 93, -26 ], flag: 0, tc: [ 400, 416 ], color: [ 17, 36, 135, 255 ] },
	{ pos: [ 36, 79, -58 ], flag: 0, tc: [ 768, 512 ], color: [ 211, 87, 175, 255 ] },
	{ pos: [ 34, 34, -78 ], flag: 0, tc: [ 1224, 264 ], color: [ 213, 27, 139, 255 ] },
	{ pos: [ -7, 40, -43 ], flag: 0, tc: [ 724, 1084 ], color: [ 148, 21, 193, 255 ] },
	{ pos: [ 14, 83, -24 ], flag: 0, tc: [ 316, 1000 ], color: [ 173, 91, 225, 255 ] },
	{ pos: [ 36, 94, -26 ], flag: 0, tc: [ 316, 696 ], color: [ 187, 46, 159, 255 ] },
	{ pos: [ 24, 91, 0 ], flag: 0, tc: [ 28, 980 ], color: [ 139, 50, 0, 255 ] },
	{ pos: [ 78, 90, 20 ], flag: 0, tc: [ 332, -12 ], color: [ 70, 65, 84, 255 ] },
	{ pos: [ 58, 93, 28 ], flag: 0, tc: [ 404, 416 ], color: [ 18, 35, 121, 255 ] },
	{ pos: [ 67, 77, 68 ], flag: 0, tc: [ 932, -28 ], color: [ 7, 87, 93, 255 ] },
	{ pos: [ 36, 79, 57 ], flag: 0, tc: [ 764, 512 ], color: [ 210, 87, 80, 255 ] },
	{ pos: [ 36, 94, 26 ], flag: 0, tc: [ 332, 672 ], color: [ 182, 41, 95, 255 ] },
	{ pos: [ 14, 83, 24 ], flag: 0, tc: [ 344, 992 ], color: [ 173, 91, 31, 255 ] },
	{ pos: [ 24, 91, 0 ], flag: 0, tc: [ 40, 940 ], color: [ 139, 50, 0, 255 ] },
	{ pos: [ 36, 79, 57 ], flag: 0, tc: [ 764, 512 ], color: [ 210, 87, 80, 255 ] },
	{ pos: [ 14, 83, 24 ], flag: 0, tc: [ 344, 992 ], color: [ 173, 91, 31, 255 ] },
	{ pos: [ -7, 40, 43 ], flag: 0, tc: [ 768, 1112 ], color: [ 147, 21, 62, 255 ] },
	{ pos: [ 34, 35, 79 ], flag: 0, tc: [ 1260, 292 ], color: [ 212, 28, 116, 255 ] },
	{ pos: [ 67, 77, 68 ], flag: 0, tc: [ 932, -28 ], color: [ 7, 87, 93, 255 ] },
]

const luigi_face_part_cap_off_dl_vertex = [
	{ pos: [ 34, 34, -78 ], flag: 0, tc: [ 0, 0 ], color: [ 213, 27, 139, 255 ] },
	{ pos: [ 67, 77, -67 ], flag: 0, tc: [ 0, 0 ], color: [ 8, 86, 163, 255 ] },
	{ pos: [ 89, 43, -76 ], flag: 0, tc: [ 0, 0 ], color: [ 7, 41, 136, 255 ] },
	{ pos: [ 94, 76, -56 ], flag: 0, tc: [ 0, 0 ], color: [ 19, 99, 179, 255 ] },
	{ pos: [ 78, 90, -20 ], flag: 0, tc: [ 0, 0 ], color: [ 67, 66, 170, 255 ] },
	{ pos: [ 136, 74, -54 ], flag: 0, tc: [ 0, 0 ], color: [ 26, 90, 170, 255 ] },
	{ pos: [ 147, 30, -76 ], flag: 0, tc: [ 0, 0 ], color: [ 249, 49, 139, 255 ] },
	{ pos: [ 14, 83, -24 ], flag: 0, tc: [ 0, 0 ], color: [ 173, 91, 225, 255 ] },
	{ pos: [ 14, 83, 24 ], flag: 0, tc: [ 0, 0 ], color: [ 173, 91, 31, 255 ] },
	{ pos: [ 24, 91, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 139, 50, 0, 255 ] },
	{ pos: [ -18, 46, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 132, 27, 0, 255 ] },
	{ pos: [ -7, 40, -43 ], flag: 0, tc: [ 0, 0 ], color: [ 148, 21, 193, 255 ] },
	{ pos: [ 12, -58, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 133, 251, 225, 255 ] },
	{ pos: [ 34, -5, -83 ], flag: 0, tc: [ 0, 0 ], color: [ 190, 250, 147, 255 ] },
	{ pos: [ 58, -49, -64 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 194, 156, 255 ] },
	{ pos: [ 56, -29, -116 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 7, 139, 255 ] },
	{ pos: [ 56, -29, -116 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 7, 139, 255 ] },
	{ pos: [ 34, -5, -83 ], flag: 0, tc: [ 0, 0 ], color: [ 190, 250, 147, 255 ] },
	{ pos: [ 78, -26, -91 ], flag: 0, tc: [ 0, 0 ], color: [ 3, 90, 166, 255 ] },
	{ pos: [ 95, -37, -116 ], flag: 0, tc: [ 0, 0 ], color: [ 38, 239, 136, 255 ] },
	{ pos: [ 122, -10, -91 ], flag: 0, tc: [ 0, 0 ], color: [ 4, 15, 130, 255 ] },
	{ pos: [ 92, -59, -72 ], flag: 0, tc: [ 0, 0 ], color: [ 231, 182, 156, 255 ] },
	{ pos: [ 58, -49, -64 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 194, 156, 255 ] },
	{ pos: [ 67, 77, 68 ], flag: 0, tc: [ 0, 0 ], color: [ 7, 87, 93, 255 ] },
	{ pos: [ 94, 76, 57 ], flag: 0, tc: [ 0, 0 ], color: [ 19, 100, 77, 255 ] },
	{ pos: [ 78, 90, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 70, 65, 84, 255 ] },
	{ pos: [ 89, 43, 77 ], flag: 0, tc: [ 0, 0 ], color: [ 7, 41, 120, 255 ] },
	{ pos: [ 34, 35, 79 ], flag: 0, tc: [ 0, 0 ], color: [ 212, 28, 116, 255 ] },
	{ pos: [ 136, 74, 55 ], flag: 0, tc: [ 0, 0 ], color: [ 27, 90, 85, 255 ] },
	{ pos: [ 147, 30, 77 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 51, 116, 255 ] },
	{ pos: [ 14, 83, 24 ], flag: 0, tc: [ 0, 0 ], color: [ 173, 91, 31, 255 ] },
	{ pos: [ -18, 46, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 132, 27, 0, 255 ] },
	{ pos: [ -7, 40, 43 ], flag: 0, tc: [ 0, 0 ], color: [ 147, 21, 62, 255 ] },
	{ pos: [ 12, -58, 35 ], flag: 0, tc: [ 0, 0 ], color: [ 132, 251, 29, 255 ] },
	{ pos: [ 12, -58, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 133, 251, 225, 255 ] },
	{ pos: [ 28, -80, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 168, 164, 0, 255 ] },
	{ pos: [ 34, -5, 84 ], flag: 0, tc: [ 0, 0 ], color: [ 189, 250, 108, 255 ] },
	{ pos: [ 34, 35, 79 ], flag: 0, tc: [ 0, 0 ], color: [ 212, 28, 116, 255 ] },
	{ pos: [ 58, -49, 66 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 194, 100, 255 ] },
	{ pos: [ 56, -29, 116 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 6, 118, 255 ] },
	{ pos: [ 92, -59, 74 ], flag: 0, tc: [ 0, 0 ], color: [ 231, 181, 100, 255 ] },
	{ pos: [ 95, -37, 116 ], flag: 0, tc: [ 0, 0 ], color: [ 37, 238, 120, 255 ] },
	{ pos: [ 122, -10, 92 ], flag: 0, tc: [ 0, 0 ], color: [ 4, 15, 126, 255 ] },
	{ pos: [ 78, -26, 92 ], flag: 0, tc: [ 0, 0 ], color: [ 3, 89, 90, 255 ] },
	{ pos: [ 78, 90, -20 ], flag: 0, tc: [ 0, 0 ], color: [ 67, 66, 170, 255 ] },
	{ pos: [ 97, 113, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 125, 232, 255, 255 ] },
	{ pos: [ 89, 92, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 92, 88, 0, 255 ] },
	{ pos: [ 82, 112, -35 ], flag: 0, tc: [ 0, 0 ], color: [ 76, 221, 160, 255 ] },
	{ pos: [ 58, 93, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 17, 36, 135, 255 ] },
	{ pos: [ 58, 112, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 1, 218, 135, 255 ] },
	{ pos: [ 29, 112, -35 ], flag: 0, tc: [ 0, 0 ], color: [ 177, 227, 161, 255 ] },
	{ pos: [ 36, 94, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 187, 46, 159, 255 ] },
	{ pos: [ 15, 112, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 132, 230, 254, 255 ] },
	{ pos: [ 24, 91, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 139, 50, 0, 255 ] },
	{ pos: [ 36, 94, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 182, 41, 95, 255 ] },
	{ pos: [ 29, 112, 36 ], flag: 0, tc: [ 0, 0 ], color: [ 178, 224, 95, 255 ] },
	{ pos: [ 58, 93, 28 ], flag: 0, tc: [ 0, 0 ], color: [ 18, 35, 121, 255 ] },
	{ pos: [ 58, 112, 41 ], flag: 0, tc: [ 0, 0 ], color: [ 1, 218, 121, 255 ] },
	{ pos: [ 82, 112, 36 ], flag: 0, tc: [ 0, 0 ], color: [ 76, 220, 95, 255 ] },
	{ pos: [ 78, 90, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 70, 65, 84, 255 ] },
	{ pos: [ 82, 112, 36 ], flag: 0, tc: [ 0, 0 ], color: [ 76, 220, 95, 255 ] },
	{ pos: [ 97, 113, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 125, 232, 255, 255 ] },
	{ pos: [ 83, 141, 36 ], flag: 0, tc: [ 0, 0 ], color: [ 71, 59, 87, 255 ] },
	{ pos: [ 97, 141, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 117, 49, 255, 255 ] },
	{ pos: [ 82, 112, -35 ], flag: 0, tc: [ 0, 0 ], color: [ 76, 221, 160, 255 ] },
	{ pos: [ 83, 141, -35 ], flag: 0, tc: [ 0, 0 ], color: [ 72, 58, 168, 255 ] },
	{ pos: [ 58, 112, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 1, 218, 135, 255 ] },
	{ pos: [ 58, 141, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 66, 147, 255 ] },
	{ pos: [ 32, 141, -35 ], flag: 0, tc: [ 0, 0 ], color: [ 191, 63, 167, 255 ] },
	{ pos: [ 29, 112, -35 ], flag: 0, tc: [ 0, 0 ], color: [ 177, 227, 161, 255 ] },
	{ pos: [ 15, 112, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 132, 230, 254, 255 ] },
	{ pos: [ 15, 141, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 141, 53, 254, 255 ] },
	{ pos: [ 29, 112, 36 ], flag: 0, tc: [ 0, 0 ], color: [ 178, 224, 95, 255 ] },
	{ pos: [ 32, 141, 36 ], flag: 0, tc: [ 0, 0 ], color: [ 192, 64, 89, 255 ] },
	{ pos: [ 58, 112, 41 ], flag: 0, tc: [ 0, 0 ], color: [ 1, 218, 121, 255 ] },
	{ pos: [ 58, 141, 41 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 67, 108, 255 ] },
	{ pos: [ 83, 141, 36 ], flag: 0, tc: [ 0, 0 ], color: [ 71, 59, 87, 255 ] },
	{ pos: [ 77, 158, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 37, 122, 0, 255 ] },
	{ pos: [ 58, 141, 41 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 67, 108, 255 ] },
	{ pos: [ 97, 141, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 117, 49, 255, 255 ] },
	{ pos: [ 83, 141, -35 ], flag: 0, tc: [ 0, 0 ], color: [ 72, 58, 168, 255 ] },
	{ pos: [ 58, 141, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 66, 147, 255 ] },
	{ pos: [ 36, 156, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 219, 122, 0, 255 ] },
	{ pos: [ 32, 141, -35 ], flag: 0, tc: [ 0, 0 ], color: [ 191, 63, 167, 255 ] },
	{ pos: [ 15, 141, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 141, 53, 254, 255 ] },
	{ pos: [ 32, 141, 36 ], flag: 0, tc: [ 0, 0 ], color: [ 192, 64, 89, 255 ] },
]

const luigi_face_hair_cap_off_dl_vertex = [
	{ pos: [ 167, 84, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 216, 106, 57, 255 ] },
	{ pos: [ 146, 66, 53 ], flag: 0, tc: [ 0, 0 ], color: [ 221, 90, 83, 255 ] },
	{ pos: [ 193, 71, 67 ], flag: 0, tc: [ 0, 0 ], color: [ 28, 80, 95, 255 ] },
	{ pos: [ 147, 30, 77 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 51, 116, 255 ] },
	{ pos: [ 176, -9, 93 ], flag: 0, tc: [ 0, 0 ], color: [ 42, 0, 120, 255 ] },
	{ pos: [ 122, -10, 92 ], flag: 0, tc: [ 0, 0 ], color: [ 4, 15, 126, 255 ] },
	{ pos: [ 140, -79, 84 ], flag: 0, tc: [ 0, 0 ], color: [ 3, 205, 116, 255 ] },
	{ pos: [ 92, -59, 74 ], flag: 0, tc: [ 0, 0 ], color: [ 231, 181, 100, 255 ] },
	{ pos: [ 66, -99, 43 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 140, 51, 255 ] },
	{ pos: [ 58, -49, 66 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 194, 100, 255 ] },
	{ pos: [ 52, -110, 53 ], flag: 0, tc: [ 0, 0 ], color: [ 66, 156, 42, 255 ] },
	{ pos: [ 24, -80, 75 ], flag: 0, tc: [ 0, 0 ], color: [ 226, 18, 122, 255 ] },
	{ pos: [ 12, -58, 35 ], flag: 0, tc: [ 0, 0 ], color: [ 132, 251, 29, 255 ] },
	{ pos: [ 2, -84, 48 ], flag: 0, tc: [ 0, 0 ], color: [ 130, 12, 11, 255 ] },
	{ pos: [ 28, -80, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 168, 164, 0, 255 ] },
	{ pos: [ 20, -112, 30 ], flag: 0, tc: [ 0, 0 ], color: [ 213, 157, 189, 255 ] },
	{ pos: [ 66, -99, 43 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 140, 51, 255 ] },
	{ pos: [ 28, -80, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 168, 164, 0, 255 ] },
	{ pos: [ 66, -99, -43 ], flag: 0, tc: [ 0, 0 ], color: [ 255, 140, 203, 255 ] },
	{ pos: [ 20, -112, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 214, 157, 67, 255 ] },
	{ pos: [ 2, -84, -47 ], flag: 0, tc: [ 0, 0 ], color: [ 130, 11, 246, 255 ] },
	{ pos: [ 12, -58, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 133, 251, 225, 255 ] },
	{ pos: [ 24, -81, -74 ], flag: 0, tc: [ 0, 0 ], color: [ 227, 18, 134, 255 ] },
	{ pos: [ 58, -49, -64 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 194, 156, 255 ] },
	{ pos: [ 52, -110, -52 ], flag: 0, tc: [ 0, 0 ], color: [ 66, 155, 215, 255 ] },
	{ pos: [ 92, -59, -72 ], flag: 0, tc: [ 0, 0 ], color: [ 231, 182, 156, 255 ] },
	{ pos: [ 140, -81, -83 ], flag: 0, tc: [ 0, 0 ], color: [ 2, 205, 140, 255 ] },
	{ pos: [ 122, -10, -91 ], flag: 0, tc: [ 0, 0 ], color: [ 4, 15, 130, 255 ] },
	{ pos: [ 176, -9, -92 ], flag: 0, tc: [ 0, 0 ], color: [ 42, 254, 136, 255 ] },
	{ pos: [ 147, 30, -76 ], flag: 0, tc: [ 0, 0 ], color: [ 249, 49, 139, 255 ] },
	{ pos: [ 193, 66, -78 ], flag: 0, tc: [ 0, 0 ], color: [ 27, 60, 147, 255 ] },
	{ pos: [ 146, 66, -52 ], flag: 0, tc: [ 0, 0 ], color: [ 213, 91, 179, 255 ] },
	{ pos: [ 167, 84, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 194, 94, 197, 255 ] },
	{ pos: [ 193, 66, -78 ], flag: 0, tc: [ 0, 0 ], color: [ 27, 60, 147, 255 ] },
	{ pos: [ 146, 66, -52 ], flag: 0, tc: [ 0, 0 ], color: [ 213, 91, 179, 255 ] },
	{ pos: [ 204, 86, -58 ], flag: 0, tc: [ 0, 0 ], color: [ 27, 75, 157, 255 ] },
	{ pos: [ 194, 118, -10 ], flag: 0, tc: [ 0, 0 ], color: [ 246, 127, 0, 255 ] },
	{ pos: [ 155, 87, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 178, 100, 4, 255 ] },
	{ pos: [ 167, 84, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 216, 106, 57, 255 ] },
	{ pos: [ 201, 81, 48 ], flag: 0, tc: [ 0, 0 ], color: [ 43, 96, 71, 255 ] },
	{ pos: [ 193, 71, 67 ], flag: 0, tc: [ 0, 0 ], color: [ 28, 80, 95, 255 ] },
	{ pos: [ 218, 33, 60 ], flag: 0, tc: [ 0, 0 ], color: [ 104, 10, 72, 255 ] },
	{ pos: [ 176, -9, 93 ], flag: 0, tc: [ 0, 0 ], color: [ 42, 0, 120, 255 ] },
	{ pos: [ 218, -14, 47 ], flag: 0, tc: [ 0, 0 ], color: [ 111, 236, 59, 255 ] },
	{ pos: [ 183, -97, 58 ], flag: 0, tc: [ 0, 0 ], color: [ 71, 179, 71, 255 ] },
	{ pos: [ 140, -79, 84 ], flag: 0, tc: [ 0, 0 ], color: [ 3, 205, 116, 255 ] },
	{ pos: [ 114, -120, 54 ], flag: 0, tc: [ 0, 0 ], color: [ 237, 150, 68, 255 ] },
	{ pos: [ 66, -99, 43 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 140, 51, 255 ] },
	{ pos: [ 66, -99, 43 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 140, 51, 255 ] },
	{ pos: [ 116, -128, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 242, 130, 255, 255 ] },
	{ pos: [ 114, -120, 54 ], flag: 0, tc: [ 0, 0 ], color: [ 237, 150, 68, 255 ] },
	{ pos: [ 66, -99, -43 ], flag: 0, tc: [ 0, 0 ], color: [ 255, 140, 203, 255 ] },
	{ pos: [ 114, -118, -54 ], flag: 0, tc: [ 0, 0 ], color: [ 238, 151, 187, 255 ] },
	{ pos: [ 140, -81, -83 ], flag: 0, tc: [ 0, 0 ], color: [ 2, 205, 140, 255 ] },
	{ pos: [ 183, -97, -57 ], flag: 0, tc: [ 0, 0 ], color: [ 71, 179, 184, 255 ] },
	{ pos: [ 176, -9, -92 ], flag: 0, tc: [ 0, 0 ], color: [ 42, 254, 136, 255 ] },
	{ pos: [ 218, -14, -46 ], flag: 0, tc: [ 0, 0 ], color: [ 110, 240, 195, 255 ] },
	{ pos: [ 214, 33, -58 ], flag: 0, tc: [ 0, 0 ], color: [ 109, 2, 190, 255 ] },
	{ pos: [ 193, 66, -78 ], flag: 0, tc: [ 0, 0 ], color: [ 27, 60, 147, 255 ] },
	{ pos: [ 204, 86, -58 ], flag: 0, tc: [ 0, 0 ], color: [ 27, 75, 157, 255 ] },
	{ pos: [ 223, 66, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 115, 231, 208, 255 ] },
	{ pos: [ 238, 99, -35 ], flag: 0, tc: [ 0, 0 ], color: [ 106, 52, 208, 255 ] },
	{ pos: [ 194, 118, -10 ], flag: 0, tc: [ 0, 0 ], color: [ 246, 127, 0, 255 ] },
	{ pos: [ 201, 81, 48 ], flag: 0, tc: [ 0, 0 ], color: [ 43, 96, 71, 255 ] },
	{ pos: [ 201, 81, 48 ], flag: 0, tc: [ 0, 0 ], color: [ 43, 96, 71, 255 ] },
	{ pos: [ 222, 77, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 104, 53, 50, 255 ] },
	{ pos: [ 238, 99, -35 ], flag: 0, tc: [ 0, 0 ], color: [ 106, 52, 208, 255 ] },
	{ pos: [ 218, 33, 60 ], flag: 0, tc: [ 0, 0 ], color: [ 104, 10, 72, 255 ] },
	{ pos: [ 229, 61, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 127, 251, 5, 255 ] },
	{ pos: [ 218, -14, 47 ], flag: 0, tc: [ 0, 0 ], color: [ 111, 236, 59, 255 ] },
	{ pos: [ 232, -33, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 124, 228, 0, 255 ] },
	{ pos: [ 183, -97, 58 ], flag: 0, tc: [ 0, 0 ], color: [ 71, 179, 71, 255 ] },
	{ pos: [ 193, -112, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 80, 157, 0, 255 ] },
	{ pos: [ 114, -120, 54 ], flag: 0, tc: [ 0, 0 ], color: [ 237, 150, 68, 255 ] },
	{ pos: [ 116, -128, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 242, 130, 255, 255 ] },
	{ pos: [ 114, -118, -54 ], flag: 0, tc: [ 0, 0 ], color: [ 238, 151, 187, 255 ] },
	{ pos: [ 183, -97, -57 ], flag: 0, tc: [ 0, 0 ], color: [ 71, 179, 184, 255 ] },
	{ pos: [ 218, -14, -46 ], flag: 0, tc: [ 0, 0 ], color: [ 110, 240, 195, 255 ] },
	{ pos: [ 214, 33, -58 ], flag: 0, tc: [ 0, 0 ], color: [ 109, 2, 190, 255 ] },
	{ pos: [ 223, 66, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 115, 231, 208, 255 ] },
	{ pos: [ 66, -99, -43 ], flag: 0, tc: [ 0, 0 ], color: [ 255, 140, 203, 255 ] },
	{ pos: [ 20, -112, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 214, 157, 67, 255 ] },
	{ pos: [ 52, -110, -52 ], flag: 0, tc: [ 0, 0 ], color: [ 66, 155, 215, 255 ] },
	{ pos: [ 10, -116, -62 ], flag: 0, tc: [ 0, 0 ], color: [ 192, 164, 196, 255 ] },
	{ pos: [ 2, -84, -47 ], flag: 0, tc: [ 0, 0 ], color: [ 130, 11, 246, 255 ] },
	{ pos: [ 24, -81, -74 ], flag: 0, tc: [ 0, 0 ], color: [ 227, 18, 134, 255 ] },
	{ pos: [ 66, -99, 43 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 140, 51, 255 ] },
	{ pos: [ 52, -110, 53 ], flag: 0, tc: [ 0, 0 ], color: [ 66, 156, 42, 255 ] },
	{ pos: [ 20, -112, 30 ], flag: 0, tc: [ 0, 0 ], color: [ 213, 157, 189, 255 ] },
	{ pos: [ 10, -116, 63 ], flag: 0, tc: [ 0, 0 ], color: [ 192, 164, 60, 255 ] },
	{ pos: [ 24, -80, 75 ], flag: 0, tc: [ 0, 0 ], color: [ 226, 18, 122, 255 ] },
	{ pos: [ 2, -84, 48 ], flag: 0, tc: [ 0, 0 ], color: [ 130, 12, 11, 255 ] },
]

export const luigi_eyes_cap_off_dl = [
	Gbi.gsSPVertex(luigi_eyes_cap_off_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 3, 1, 0),
	Gbi.gsSP1Triangle(4, 3, 0, 0),
	Gbi.gsSP1Triangle(4, 0, 5, 0),
	Gbi.gsSP1Triangle(4, 5, 6, 0),
	Gbi.gsSP1Triangle(5, 7, 6, 0),
	Gbi.gsSP1Triangle(5, 8, 7, 0),
	Gbi.gsSP1Triangle(6, 7, 9, 0),
	Gbi.gsSP1Triangle(10, 1, 3, 0),
	Gbi.gsSP1Triangle(11, 4, 6, 0),
	Gbi.gsSP1Triangle(11, 3, 4, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_mustache_cap_off_dl = [
	Gbi.gsSPVertex(luigi_mustache_cap_off_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(2, 1, 3, 0),
	Gbi.gsSP1Triangle(4, 3, 1, 0),
	Gbi.gsSP1Triangle(3, 4, 5, 0),
	Gbi.gsSP1Triangle(3, 5, 6, 0),
	Gbi.gsSP1Triangle(3, 6, 7, 0),
	Gbi.gsSP1Triangle(7, 6, 8, 0),
	Gbi.gsSP1Triangle(7, 2, 3, 0),
	Gbi.gsSP1Triangle(9, 10, 11, 0),
	Gbi.gsSP1Triangle(10, 12, 11, 0),
	Gbi.gsSP1Triangle(13, 12, 10, 0),
	Gbi.gsSP1Triangle(12, 13, 14, 0),
	Gbi.gsSP1Triangle(13, 15, 14, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(16, 18, 19, 0),
	Gbi.gsSP1Triangle(19, 20, 16, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_hair_sideburn_cap_off_dl = [
	Gbi.gsSPVertex(luigi_hair_sideburn_cap_off_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 3, 1, 0),
	Gbi.gsSP1Triangle(4, 3, 0, 0),
	Gbi.gsSP1Triangle(5, 4, 0, 0),
	Gbi.gsSP1Triangle(6, 7, 8, 0),
	Gbi.gsSP1Triangle(9, 6, 8, 0),
	Gbi.gsSP1Triangle(9, 10, 6, 0),
	Gbi.gsSP1Triangle(10, 11, 6, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_face_part_cap_off_dl = [
	Gbi.gsSPVertex(luigi_face_part_cap_off_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 2, 1, 0),
	Gbi.gsSP1Triangle(4, 3, 1, 0),
	Gbi.gsSP1Triangle(5, 2, 3, 0),
	Gbi.gsSP1Triangle(2, 5, 6, 0),
	Gbi.gsSP1Triangle(7, 8, 9, 0),
	Gbi.gsSP1Triangle(7, 10, 8, 0),
	Gbi.gsSP1Triangle(11, 10, 7, 0),
	Gbi.gsSP1Triangle(11, 12, 10, 0),
	Gbi.gsSP1Triangle(11, 13, 12, 0),
	Gbi.gsSP1Triangle(11, 0, 13, 0),
	Gbi.gsSP1Triangle(12, 13, 14, 0),
	Gbi.gsSP1Triangle(14, 13, 15, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(19, 16, 18, 0),
	Gbi.gsSP1Triangle(20, 19, 18, 0),
	Gbi.gsSP1Triangle(20, 21, 19, 0),
	Gbi.gsSP1Triangle(16, 19, 21, 0),
	Gbi.gsSP1Triangle(22, 16, 21, 0),
	Gbi.gsSP1Triangle(23, 24, 25, 0),
	Gbi.gsSP1Triangle(26, 24, 23, 0),
	Gbi.gsSP1Triangle(23, 27, 26, 0),
	Gbi.gsSP1Triangle(26, 28, 24, 0),
	Gbi.gsSP1Triangle(29, 28, 26, 0),
	Gbi.gsSP1Triangle(30, 31, 32, 0),
	Gbi.gsSP1Triangle(31, 33, 32, 0),
	Gbi.gsSP1Triangle(31, 34, 33, 0),
	Gbi.gsSP1Triangle(33, 34, 35, 0),
	Gbi.gsSP1Triangle(36, 32, 33, 0),
	Gbi.gsSP1Triangle(36, 37, 32, 0),
	Gbi.gsSP1Triangle(36, 33, 38, 0),
	Gbi.gsSP1Triangle(38, 39, 36, 0),
	Gbi.gsSP1Triangle(38, 40, 39, 0),
	Gbi.gsSP1Triangle(40, 41, 39, 0),
	Gbi.gsSP1Triangle(42, 41, 40, 0),
	Gbi.gsSP1Triangle(41, 42, 43, 0),
	Gbi.gsSP1Triangle(43, 39, 41, 0),
	Gbi.gsSP1Triangle(39, 43, 36, 0),
	Gbi.gsSP1Triangle(44, 45, 46, 0),
	Gbi.gsSP1Triangle(45, 44, 47, 0),
	Gbi.gsSP1Triangle(44, 48, 47, 0),
	Gbi.gsSP1Triangle(47, 48, 49, 0),
	Gbi.gsSP1Triangle(48, 50, 49, 0),
	Gbi.gsSP1Triangle(50, 48, 51, 0),
	Gbi.gsSP1Triangle(51, 52, 50, 0),
	Gbi.gsSP1Triangle(53, 52, 51, 0),
	Gbi.gsSP1Triangle(54, 52, 53, 0),
	Gbi.gsSP1Triangle(52, 54, 55, 0),
	Gbi.gsSP1Triangle(54, 56, 55, 0),
	Gbi.gsSP1Triangle(55, 56, 57, 0),
	Gbi.gsSP1Triangle(56, 58, 57, 0),
	Gbi.gsSP1Triangle(58, 56, 59, 0),
	Gbi.gsSP1Triangle(59, 45, 58, 0),
	Gbi.gsSP1Triangle(46, 45, 59, 0),
	Gbi.gsSP1Triangle(60, 61, 62, 0),
	Gbi.gsSP1Triangle(61, 63, 62, 0),
	Gbi.gsSP1Triangle(63, 61, 64, 0),
	Gbi.gsSP1Triangle(65, 63, 64, 0),
	Gbi.gsSP1Triangle(65, 64, 66, 0),
	Gbi.gsSP1Triangle(67, 65, 66, 0),
	Gbi.gsSP1Triangle(66, 68, 67, 0),
	Gbi.gsSP1Triangle(66, 69, 68, 0),
	Gbi.gsSP1Triangle(69, 70, 68, 0),
	Gbi.gsSP1Triangle(70, 71, 68, 0),
	Gbi.gsSP1Triangle(72, 71, 70, 0),
	Gbi.gsSP1Triangle(73, 71, 72, 0),
	Gbi.gsSP1Triangle(73, 72, 74, 0),
	Gbi.gsSP1Triangle(73, 74, 75, 0),
	Gbi.gsSP1Triangle(62, 75, 74, 0),
	Gbi.gsSP1Triangle(60, 62, 74, 0),
	Gbi.gsSP1Triangle(76, 77, 78, 0),
	Gbi.gsSP1Triangle(76, 79, 77, 0),
	Gbi.gsSP1Triangle(80, 77, 79, 0),
	Gbi.gsSP1Triangle(80, 81, 77, 0),
	Gbi.gsSP1Triangle(77, 81, 82, 0),
	Gbi.gsSP1Triangle(81, 83, 82, 0),
	Gbi.gsSP1Triangle(82, 83, 84, 0),
	Gbi.gsSP1Triangle(82, 84, 85, 0),
	Gbi.gsSP1Triangle(82, 85, 78, 0),
	Gbi.gsSP1Triangle(77, 82, 78, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_face_hair_cap_off_dl = [
	Gbi.gsSPVertex(luigi_face_hair_cap_off_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 2, 1, 0),
	Gbi.gsSP1Triangle(3, 4, 2, 0),
	Gbi.gsSP1Triangle(3, 5, 4, 0),
	Gbi.gsSP1Triangle(6, 4, 5, 0),
	Gbi.gsSP1Triangle(7, 6, 5, 0),
	Gbi.gsSP1Triangle(8, 6, 7, 0),
	Gbi.gsSP1Triangle(9, 8, 7, 0),
	Gbi.gsSP1Triangle(9, 10, 8, 0),
	Gbi.gsSP1Triangle(9, 11, 10, 0),
	Gbi.gsSP1Triangle(12, 11, 9, 0),
	Gbi.gsSP1Triangle(12, 13, 11, 0),
	Gbi.gsSP1Triangle(13, 12, 14, 0),
	Gbi.gsSP1Triangle(15, 13, 14, 0),
	Gbi.gsSP1Triangle(8, 15, 14, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(18, 17, 19, 0),
	Gbi.gsSP1Triangle(20, 19, 17, 0),
	Gbi.gsSP1Triangle(21, 20, 17, 0),
	Gbi.gsSP1Triangle(21, 22, 20, 0),
	Gbi.gsSP1Triangle(21, 23, 22, 0),
	Gbi.gsSP1Triangle(23, 24, 22, 0),
	Gbi.gsSP1Triangle(23, 18, 24, 0),
	Gbi.gsSP1Triangle(25, 18, 23, 0),
	Gbi.gsSP1Triangle(25, 26, 18, 0),
	Gbi.gsSP1Triangle(26, 25, 27, 0),
	Gbi.gsSP1Triangle(28, 26, 27, 0),
	Gbi.gsSP1Triangle(27, 29, 28, 0),
	Gbi.gsSP1Triangle(29, 30, 28, 0),
	Gbi.gsSP1Triangle(30, 29, 31, 0),
	Gbi.gsSP1Triangle(32, 33, 34, 0),
	Gbi.gsSP1Triangle(33, 32, 35, 0),
	Gbi.gsSP1Triangle(35, 32, 36, 0),
	Gbi.gsSP1Triangle(32, 37, 36, 0),
	Gbi.gsSP1Triangle(36, 37, 38, 0),
	Gbi.gsSP1Triangle(39, 36, 38, 0),
	Gbi.gsSP1Triangle(38, 40, 39, 0),
	Gbi.gsSP1Triangle(40, 41, 39, 0),
	Gbi.gsSP1Triangle(42, 41, 40, 0),
	Gbi.gsSP1Triangle(41, 42, 43, 0),
	Gbi.gsSP1Triangle(43, 42, 44, 0),
	Gbi.gsSP1Triangle(45, 44, 42, 0),
	Gbi.gsSP1Triangle(45, 46, 44, 0),
	Gbi.gsSP1Triangle(47, 46, 45, 0),
	Gbi.gsSP1Triangle(48, 49, 50, 0),
	Gbi.gsSP1Triangle(48, 51, 49, 0),
	Gbi.gsSP1Triangle(51, 52, 49, 0),
	Gbi.gsSP1Triangle(53, 52, 51, 0),
	Gbi.gsSP1Triangle(54, 52, 53, 0),
	Gbi.gsSP1Triangle(55, 54, 53, 0),
	Gbi.gsSP1Triangle(54, 55, 56, 0),
	Gbi.gsSP1Triangle(56, 55, 57, 0),
	Gbi.gsSP1Triangle(58, 57, 55, 0),
	Gbi.gsSP1Triangle(57, 58, 59, 0),
	Gbi.gsSP1Triangle(57, 59, 60, 0),
	Gbi.gsSP1Triangle(60, 59, 61, 0),
	Gbi.gsSP1Triangle(59, 62, 61, 0),
	Gbi.gsSP1Triangle(62, 63, 61, 0),
	Gbi.gsSP1Triangle(64, 65, 66, 0),
	Gbi.gsSP1Triangle(67, 65, 64, 0),
	Gbi.gsSP1Triangle(67, 68, 65, 0),
	Gbi.gsSP1Triangle(68, 67, 69, 0),
	Gbi.gsSP1Triangle(69, 70, 68, 0),
	Gbi.gsSP1Triangle(70, 69, 71, 0),
	Gbi.gsSP1Triangle(72, 70, 71, 0),
	Gbi.gsSP1Triangle(72, 71, 73, 0),
	Gbi.gsSP1Triangle(74, 72, 73, 0),
	Gbi.gsSP1Triangle(74, 75, 72, 0),
	Gbi.gsSP1Triangle(75, 76, 72, 0),
	Gbi.gsSP1Triangle(72, 76, 70, 0),
	Gbi.gsSP1Triangle(76, 77, 70, 0),
	Gbi.gsSP1Triangle(77, 68, 70, 0),
	Gbi.gsSP1Triangle(77, 78, 68, 0),
	Gbi.gsSP1Triangle(78, 79, 68, 0),
	Gbi.gsSP1Triangle(68, 79, 66, 0),
	Gbi.gsSP1Triangle(68, 66, 65, 0),
	Gbi.gsSP1Triangle(80, 81, 82, 0),
	Gbi.gsSP1Triangle(83, 82, 81, 0),
	Gbi.gsSP1Triangle(83, 81, 84, 0),
	Gbi.gsSP1Triangle(83, 84, 85, 0),
	Gbi.gsSP1Triangle(83, 85, 82, 0),
	Gbi.gsSP1Triangle(86, 87, 88, 0),
	Gbi.gsSP1Triangle(88, 87, 89, 0),
	Gbi.gsSP1Triangle(87, 90, 89, 0),
	Gbi.gsSP1Triangle(90, 91, 89, 0),
	Gbi.gsSP1Triangle(91, 88, 89, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_face_cap_off_dl = (customData) => {
    return [
	Gbi.gsSPDisplayList(luigi_face_part_cap_off_dl),
	Gbi.gsSPLight(mario_brown2_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_brown2_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_face_hair_cap_off_dl),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_cap_off_eyes_front = (customData) => {
    return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_front),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_eyes_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_mustache_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_hair_sideburn),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_off_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_face_cap_off_dl(customData)),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_cap_off_eyes_half_closed = (customData) => {
    return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_half_closed),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_eyes_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_mustache_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_hair_sideburn),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_off_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_face_cap_off_dl(customData)),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_cap_off_eyes_closed = (customData) => {
    return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_closed),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_eyes_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_mustache_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_hair_sideburn),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_off_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_face_cap_off_dl(customData)),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_cap_off_eyes_right = (customData) => {
    return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_right),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_eyes_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_mustache_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_hair_sideburn),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_off_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_face_cap_off_dl(customData)),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_cap_off_eyes_left = (customData) => {
    return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_left),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_eyes_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_mustache_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_hair_sideburn),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_off_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_face_cap_off_dl(customData)),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_cap_off_eyes_up = (customData) => {
    return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_up),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_eyes_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_mustache_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_hair_sideburn),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_off_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_face_cap_off_dl(customData)),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_cap_off_eyes_down = (customData) => {
    return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_down),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_eyes_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_mustache_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_hair_sideburn),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_off_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_face_cap_off_dl(customData)),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_cap_off_eyes_dead = (customData) => {
    return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_dead),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_eyes_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_mustache_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_hair_sideburn),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_off_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_face_cap_off_dl(customData)),
	Gbi.gsSPEndDisplayList(),
    ]
}

export const luigi_metal_cap_off_shared_dl = [
	Gbi.gsSPDisplayList(luigi_eyes_cap_off_dl),
	Gbi.gsSPDisplayList(luigi_mustache_cap_off_dl),
	Gbi.gsSPDisplayList(luigi_hair_sideburn_cap_off_dl),
	Gbi.gsSPDisplayList(luigi_face_part_cap_off_dl),
	Gbi.gsSPDisplayList(luigi_face_hair_cap_off_dl),
	Gbi.gsSPEndDisplayList(),
]

const luigi_low_poly_butt_dl_vertex = [
	{ pos: [ -37, -27, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 132, 229, 0, 255 ] },
	{ pos: [ -2, 38, 66 ], flag: 0, tc: [ 0, 0 ], color: [ 199, 63, 94, 255 ] },
	{ pos: [ -35, 40, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 149, 68, 0, 255 ] },
	{ pos: [ -7, -62, 61 ], flag: 0, tc: [ 0, 0 ], color: [ 203, 170, 77, 255 ] },
	{ pos: [ -7, -62, -61 ], flag: 0, tc: [ 0, 0 ], color: [ 203, 169, 180, 255 ] },
	{ pos: [ -2, 38, -66 ], flag: 0, tc: [ 0, 0 ], color: [ 198, 64, 163, 255 ] },
	{ pos: [ 49, 69, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 69, 107, 0, 255 ] },
	{ pos: [ 49, 33, 69 ], flag: 0, tc: [ 0, 0 ], color: [ 78, 46, 90, 255 ] },
	{ pos: [ 46, -51, 64 ], flag: 0, tc: [ 0, 0 ], color: [ 77, 188, 75, 255 ] },
	{ pos: [ 46, -51, -64 ], flag: 0, tc: [ 0, 0 ], color: [ 77, 187, 182, 255 ] },
	{ pos: [ 48, 32, -71 ], flag: 0, tc: [ 0, 0 ], color: [ 76, 45, 164, 255 ] },
]

export const luigi_low_poly_butt_dl = [
	Gbi.gsSPVertex(luigi_low_poly_butt_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 3, 1, 0),
	Gbi.gsSP1Triangle(3, 0, 4, 0),
	Gbi.gsSP1Triangle(5, 4, 0, 0),
	Gbi.gsSP1Triangle(0, 2, 5, 0),
	Gbi.gsSP1Triangle(5, 2, 6, 0),
	Gbi.gsSP1Triangle(2, 1, 6, 0),
	Gbi.gsSP1Triangle(1, 7, 6, 0),
	Gbi.gsSP1Triangle(1, 3, 7, 0),
	Gbi.gsSP1Triangle(3, 8, 7, 0),
	Gbi.gsSP1Triangle(4, 8, 3, 0),
	Gbi.gsSP1Triangle(4, 9, 8, 0),
	Gbi.gsSP1Triangle(10, 9, 4, 0),
	Gbi.gsSP1Triangle(4, 5, 10, 0),
	Gbi.gsSP1Triangle(6, 10, 5, 0),
	Gbi.gsSP1Triangle(9, 10, 6, 0),
	Gbi.gsSP1Triangle(6, 7, 9, 0),
	Gbi.gsSP1Triangle(7, 8, 9, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_butt = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPLight(mario_overalls_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_overalls_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_butt_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_metal_low_poly_butt = (customData) => {
	return [
	Gbi.gsSPSetGeometryMode(Gbi.G_TEXTURE_GEN),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_DECALFADE),
	...Gbi.gsDPLoadTextureBlock(luigi_texture_metal, Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 64, 32, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, 6, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0x0F80, 0x07C0, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsSPLight(mario_white_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_white_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_butt_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_low_poly_left_arm_shared_dl_vertex = [
	{ pos: [ -7, -8, -37 ], flag: 0, tc: [ 0, 0 ], color: [ 12, 104, 184, 255 ] },
	{ pos: [ -5, 23, 8 ], flag: 0, tc: [ 0, 0 ], color: [ 10, 103, 182, 255 ] },
	{ pos: [ 63, -12, -31 ], flag: 0, tc: [ 0, 0 ], color: [ 72, 84, 193, 255 ] },
	{ pos: [ 64, 17, 7 ], flag: 0, tc: [ 0, 0 ], color: [ 78, 96, 31, 255 ] },
	{ pos: [ 63, -29, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 73, 26, 101, 255 ] },
	{ pos: [ -7, -29, 27 ], flag: 0, tc: [ 0, 0 ], color: [ 8, 40, 120, 255 ] },
	{ pos: [ -5, 23, 8 ], flag: 0, tc: [ 0, 0 ], color: [ 5, 43, 119, 255 ] },
	{ pos: [ -7, -29, 27 ], flag: 0, tc: [ 0, 0 ], color: [ 186, 155, 223, 255 ] },
	{ pos: [ 63, -12, -31 ], flag: 0, tc: [ 0, 0 ], color: [ 253, 135, 216, 255 ] },
	{ pos: [ 63, -29, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 252, 135, 216, 255 ] },
	{ pos: [ -7, -8, -37 ], flag: 0, tc: [ 0, 0 ], color: [ 185, 156, 223, 255 ] },
	{ pos: [ -5, 23, 8 ], flag: 0, tc: [ 0, 0 ], color: [ 129, 5, 1, 255 ] },
]

export const luigi_low_poly_left_arm_shared_dl = [
	Gbi.gsSPVertex(luigi_low_poly_left_arm_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(1, 3, 2, 0),
	Gbi.gsSP1Triangle(2, 3, 4, 0),
	Gbi.gsSP1Triangle(5, 4, 3, 0),
	Gbi.gsSP1Triangle(6, 5, 3, 0),
	Gbi.gsSP1Triangle(7, 8, 9, 0),
	Gbi.gsSP1Triangle(7, 10, 8, 0),
	Gbi.gsSP1Triangle(7, 11, 10, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_left_arm = (customData) => {
	return [
	Gbi.gsSPLight(mario_shirt_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_shirt_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_left_arm_shared_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_low_poly_left_forearm_shared_dl_vertex = [
	{ pos: [ 67, -29, 15 ], flag: 0, tc: [ 0, 0 ], color: [ 255, 135, 217, 255 ] },
	{ pos: [ -2, -13, -32 ], flag: 0, tc: [ 0, 0 ], color: [ 186, 155, 224, 255 ] },
	{ pos: [ 67, -15, -28 ], flag: 0, tc: [ 0, 0 ], color: [ 255, 135, 217, 255 ] },
	{ pos: [ -2, -29, 18 ], flag: 0, tc: [ 0, 0 ], color: [ 186, 155, 224, 255 ] },
	{ pos: [ -2, 16, 5 ], flag: 0, tc: [ 0, 0 ], color: [ 129, 0, 0, 255 ] },
	{ pos: [ -2, 16, 5 ], flag: 0, tc: [ 0, 0 ], color: [ 3, 35, 122, 255 ] },
	{ pos: [ -2, -29, 18 ], flag: 0, tc: [ 0, 0 ], color: [ 4, 34, 122, 255 ] },
	{ pos: [ 67, 12, 4 ], flag: 0, tc: [ 0, 0 ], color: [ 74, 99, 30, 255 ] },
	{ pos: [ 67, -29, 15 ], flag: 0, tc: [ 0, 0 ], color: [ 71, 27, 102, 255 ] },
	{ pos: [ 67, -15, -28 ], flag: 0, tc: [ 0, 0 ], color: [ 72, 81, 189, 255 ] },
	{ pos: [ -2, 16, 5 ], flag: 0, tc: [ 0, 0 ], color: [ 6, 99, 176, 255 ] },
	{ pos: [ -2, -13, -32 ], flag: 0, tc: [ 0, 0 ], color: [ 7, 100, 178, 255 ] },
]

export const luigi_low_poly_left_forearm_shared_dl = [
	Gbi.gsSPVertex(luigi_low_poly_left_forearm_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 3, 1, 0),
	Gbi.gsSP1Triangle(3, 4, 1, 0),
	Gbi.gsSP1Triangle(5, 6, 7, 0),
	Gbi.gsSP1Triangle(6, 8, 7, 0),
	Gbi.gsSP1Triangle(9, 7, 8, 0),
	Gbi.gsSP1Triangle(10, 7, 9, 0),
	Gbi.gsSP1Triangle(11, 10, 9, 0),
	Gbi.gsSPEndDisplayList(),
]

const luigi_low_poly_left_hand_closed_shared_dl_vertex = [
	{ pos: [ -5, 28, -23 ], flag: 0, tc: [ 0, 0 ], color: [ 155, 39, 189, 255 ] },
	{ pos: [ -7, 33, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 162, 48, 71, 255 ] },
	{ pos: [ 82, 69, -31 ], flag: 0, tc: [ 0, 0 ], color: [ 43, 109, 207, 255 ] },
	{ pos: [ 18, -32, 18 ], flag: 0, tc: [ 0, 0 ], color: [ 218, 156, 69, 255 ] },
	{ pos: [ 18, -29, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 211, 174, 170, 255 ] },
	{ pos: [ 109, 2, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 103, 215, 194, 255 ] },
	{ pos: [ 81, 29, 29 ], flag: 0, tc: [ 0, 0 ], color: [ 67, 21, 106, 255 ] },
]

export const luigi_low_poly_left_hand_closed_shared_dl = [
	Gbi.gsSPVertex(luigi_low_poly_left_hand_closed_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 0, 0),
	Gbi.gsSP1Triangle(0, 4, 3, 0),
	Gbi.gsSP1Triangle(0, 5, 4, 0),
	Gbi.gsSP1Triangle(0, 2, 5, 0),
	Gbi.gsSP1Triangle(2, 6, 5, 0),
	Gbi.gsSP1Triangle(1, 6, 2, 0),
	Gbi.gsSP1Triangle(6, 1, 3, 0),
	Gbi.gsSP1Triangle(3, 5, 6, 0),
	Gbi.gsSP1Triangle(3, 4, 5, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_left_hand_closed = (customData) => {
	return [
	Gbi.gsSPLight(mario_white_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_white_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_left_hand_closed_shared_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_low_poly_right_arm_shared_dl_vertex = [
	{ pos: [ -9, 25, 27 ], flag: 0, tc: [ 0, 0 ], color: [ 186, 101, 223, 255 ] },
	{ pos: [ 58, 25, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 253, 121, 216, 255 ] },
	{ pos: [ 58, 8, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 253, 121, 216, 255 ] },
	{ pos: [ -9, 4, -36 ], flag: 0, tc: [ 0, 0 ], color: [ 185, 100, 223, 255 ] },
	{ pos: [ -8, -27, 9 ], flag: 0, tc: [ 0, 0 ], color: [ 129, 254, 0, 255 ] },
	{ pos: [ 59, -21, 8 ], flag: 0, tc: [ 0, 0 ], color: [ 78, 160, 31, 255 ] },
	{ pos: [ -9, 25, 27 ], flag: 0, tc: [ 0, 0 ], color: [ 7, 218, 121, 255 ] },
	{ pos: [ -8, -27, 9 ], flag: 0, tc: [ 0, 0 ], color: [ 5, 215, 120, 255 ] },
	{ pos: [ 58, 25, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 73, 229, 101, 255 ] },
	{ pos: [ 58, 8, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 72, 172, 193, 255 ] },
	{ pos: [ -8, -27, 9 ], flag: 0, tc: [ 0, 0 ], color: [ 10, 153, 182, 255 ] },
	{ pos: [ -9, 4, -36 ], flag: 0, tc: [ 0, 0 ], color: [ 12, 152, 184, 255 ] },
]

export const luigi_low_poly_right_arm_shared_dl = [
	Gbi.gsSPVertex(luigi_low_poly_right_arm_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 2, 3, 0),
	Gbi.gsSP1Triangle(3, 4, 0, 0),
	Gbi.gsSP1Triangle(5, 6, 7, 0),
	Gbi.gsSP1Triangle(5, 8, 6, 0),
	Gbi.gsSP1Triangle(8, 5, 9, 0),
	Gbi.gsSP1Triangle(9, 5, 10, 0),
	Gbi.gsSP1Triangle(9, 10, 11, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_right_arm = (customData) => {
	return [
	Gbi.gsSPLight(mario_shirt_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_shirt_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_right_arm_shared_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_low_poly_right_forearm_shared_dl_vertex = [
	{ pos: [ -7, 25, 19 ], flag: 0, tc: [ 0, 0 ], color: [ 187, 102, 223, 255 ] },
	{ pos: [ 58, 25, 16 ], flag: 0, tc: [ 0, 0 ], color: [ 255, 120, 214, 255 ] },
	{ pos: [ 58, 10, -27 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 121, 216, 255 ] },
	{ pos: [ -7, 9, -31 ], flag: 0, tc: [ 0, 0 ], color: [ 187, 102, 224, 255 ] },
	{ pos: [ -7, -20, 6 ], flag: 0, tc: [ 0, 0 ], color: [ 129, 0, 0, 255 ] },
	{ pos: [ 59, -16, 5 ], flag: 0, tc: [ 0, 0 ], color: [ 76, 159, 31, 255 ] },
	{ pos: [ -7, 25, 19 ], flag: 0, tc: [ 0, 0 ], color: [ 4, 222, 122, 255 ] },
	{ pos: [ -7, -20, 6 ], flag: 0, tc: [ 0, 0 ], color: [ 4, 221, 122, 255 ] },
	{ pos: [ 58, 25, 16 ], flag: 0, tc: [ 0, 0 ], color: [ 70, 230, 103, 255 ] },
	{ pos: [ 58, 10, -27 ], flag: 0, tc: [ 0, 0 ], color: [ 71, 175, 189, 255 ] },
	{ pos: [ -7, -20, 6 ], flag: 0, tc: [ 0, 0 ], color: [ 5, 156, 177, 255 ] },
	{ pos: [ -7, 9, -31 ], flag: 0, tc: [ 0, 0 ], color: [ 6, 156, 178, 255 ] },
]

export const luigi_low_poly_right_forearm_shared_dl = [
	Gbi.gsSPVertex(luigi_low_poly_right_forearm_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 2, 3, 0),
	Gbi.gsSP1Triangle(3, 4, 0, 0),
	Gbi.gsSP1Triangle(5, 6, 7, 0),
	Gbi.gsSP1Triangle(5, 8, 6, 0),
	Gbi.gsSP1Triangle(8, 5, 9, 0),
	Gbi.gsSP1Triangle(9, 5, 10, 0),
	Gbi.gsSP1Triangle(9, 10, 11, 0),
	Gbi.gsSPEndDisplayList(),
]

const luigi_low_poly_right_hand_closed_shared_dl_vertex = [
	{ pos: [ 72, -77, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 41, 152, 61, 255 ] },
	{ pos: [ 102, -11, 32 ], flag: 0, tc: [ 0, 0 ], color: [ 109, 42, 51, 255 ] },
	{ pos: [ 11, 25, 24 ], flag: 0, tc: [ 0, 0 ], color: [ 213, 98, 68, 255 ] },
	{ pos: [ 74, -36, -28 ], flag: 0, tc: [ 0, 0 ], color: [ 64, 226, 150, 255 ] },
	{ pos: [ -15, -33, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 160, 216, 183, 255 ] },
	{ pos: [ -15, -33, 39 ], flag: 0, tc: [ 0, 0 ], color: [ 163, 229, 82, 255 ] },
	{ pos: [ 14, 31, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 226, 103, 188, 255 ] },
]

export const luigi_low_poly_right_hand_closed_dl = [
	Gbi.gsSPVertex(luigi_low_poly_right_hand_closed_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 3, 1, 0),
	Gbi.gsSP1Triangle(3, 0, 4, 0),
	Gbi.gsSP1Triangle(0, 5, 4, 0),
	Gbi.gsSP1Triangle(5, 0, 2, 0),
	Gbi.gsSP1Triangle(4, 5, 2, 0),
	Gbi.gsSP1Triangle(2, 6, 4, 0),
	Gbi.gsSP1Triangle(1, 6, 2, 0),
	Gbi.gsSP1Triangle(3, 6, 1, 0),
	Gbi.gsSP1Triangle(3, 4, 6, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_right_hand_closed = (customData) => {
	return [
	Gbi.gsSPLight(mario_white_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_white_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_right_hand_closed_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_metal_low_poly_right_hand_closed = [
	Gbi.gsSPDisplayList(luigi_low_poly_right_hand_closed_dl),
	Gbi.gsSPClearGeometryMode(Gbi.G_TEXTURE_GEN),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADE),
	Gbi.gsSPTexture(0x0F80, 0x07C0, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsSPEndDisplayList(),
]

const luigi_low_poly_left_thigh_dl_vertex = [
	{ pos: [ 16, -34, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 20, 131, 0, 255 ] },
	{ pos: [ 94, -21, 33 ], flag: 0, tc: [ 0, 0 ], color: [ 83, 197, 76, 255 ] },
	{ pos: [ 15, -34, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 20, 131, 0, 255 ] },
	{ pos: [ 95, -21, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 85, 197, 182, 255 ] },
	{ pos: [ 89, 38, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 74, 80, 191, 255 ] },
	{ pos: [ 16, -34, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 11, 15, 130, 255 ] },
	{ pos: [ 10, 40, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 9, 96, 173, 255 ] },
	{ pos: [ 9, 40, 30 ], flag: 0, tc: [ 0, 0 ], color: [ 7, 96, 83, 255 ] },
	{ pos: [ 89, 38, 25 ], flag: 0, tc: [ 0, 0 ], color: [ 74, 80, 66, 255 ] },
	{ pos: [ 15, -34, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 8, 17, 126, 255 ] },
	{ pos: [ 15, -34, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 129, 246, 255, 255 ] },
	{ pos: [ 9, 40, 30 ], flag: 0, tc: [ 0, 0 ], color: [ 129, 246, 254, 255 ] },
	{ pos: [ 16, -34, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 129, 246, 255, 255 ] },
	{ pos: [ 10, 40, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 129, 246, 254, 255 ] },
]

export const luigi_low_poly_left_thigh_dl = [
	Gbi.gsSPVertex(luigi_low_poly_left_thigh_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 3, 1, 0),
	Gbi.gsSP1Triangle(3, 4, 1, 0),
	Gbi.gsSP1Triangle(4, 3, 5, 0),
	Gbi.gsSP1Triangle(5, 6, 4, 0),
	Gbi.gsSP1Triangle(6, 7, 4, 0),
	Gbi.gsSP1Triangle(7, 8, 4, 0),
	Gbi.gsSP1Triangle(7, 9, 8, 0),
	Gbi.gsSP1Triangle(9, 1, 8, 0),
	Gbi.gsSP1Triangle(4, 8, 1, 0),
	Gbi.gsSP1Triangle(10, 11, 12, 0),
	Gbi.gsSP1Triangle(11, 13, 12, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_left_thigh = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPLight(mario_overalls_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_overalls_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_left_thigh_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_metal_low_poly_left_thigh = (customData) => {
	return [
	Gbi.gsSPSetGeometryMode(Gbi.G_TEXTURE_GEN),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_DECALFADE),
	...Gbi.gsDPLoadTextureBlock(luigi_texture_metal, Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 64, 32, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, 6, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0x0F80, 0x07C0, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsSPLight(mario_white_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_white_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_left_thigh_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_low_poly_left_leg_shared_dl_vertex = [
	{ pos: [ 68, -30, -31 ], flag: 0, tc: [ 0, 0 ], color: [ 127, 249, 1, 255 ] },
	{ pos: [ 72, 41, -23 ], flag: 0, tc: [ 0, 0 ], color: [ 127, 248, 0, 255 ] },
	{ pos: [ 67, -30, 37 ], flag: 0, tc: [ 0, 0 ], color: [ 127, 248, 1, 255 ] },
	{ pos: [ 72, 41, 28 ], flag: 0, tc: [ 0, 0 ], color: [ 127, 248, 0, 255 ] },
	{ pos: [ 3, -22, -27 ], flag: 0, tc: [ 0, 0 ], color: [ 176, 193, 179, 255 ] },
	{ pos: [ 68, -30, -31 ], flag: 0, tc: [ 0, 0 ], color: [ 241, 130, 0, 255 ] },
	{ pos: [ 67, -30, 37 ], flag: 0, tc: [ 0, 0 ], color: [ 241, 130, 0, 255 ] },
	{ pos: [ 2, -22, 33 ], flag: 0, tc: [ 0, 0 ], color: [ 175, 194, 76, 255 ] },
	{ pos: [ 6, 37, -20 ], flag: 0, tc: [ 0, 0 ], color: [ 181, 77, 188, 255 ] },
	{ pos: [ 6, 37, 25 ], flag: 0, tc: [ 0, 0 ], color: [ 181, 78, 67, 255 ] },
	{ pos: [ 67, -30, 37 ], flag: 0, tc: [ 0, 0 ], color: [ 250, 17, 126, 255 ] },
	{ pos: [ 72, 41, 28 ], flag: 0, tc: [ 0, 0 ], color: [ 247, 97, 81, 255 ] },
	{ pos: [ 72, 41, -23 ], flag: 0, tc: [ 0, 0 ], color: [ 247, 96, 173, 255 ] },
	{ pos: [ 68, -30, -31 ], flag: 0, tc: [ 0, 0 ], color: [ 250, 15, 130, 255 ] },
]

export const luigi_low_poly_left_leg_shared_dl = [
	Gbi.gsSPVertex(luigi_low_poly_left_leg_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(1, 3, 2, 0),
	Gbi.gsSP1Triangle(4, 5, 6, 0),
	Gbi.gsSP1Triangle(6, 7, 4, 0),
	Gbi.gsSP1Triangle(7, 8, 4, 0),
	Gbi.gsSP1Triangle(7, 9, 8, 0),
	Gbi.gsSP1Triangle(9, 7, 10, 0),
	Gbi.gsSP1Triangle(9, 10, 11, 0),
	Gbi.gsSP1Triangle(9, 11, 12, 0),
	Gbi.gsSP1Triangle(12, 8, 9, 0),
	Gbi.gsSP1Triangle(8, 12, 13, 0),
	Gbi.gsSP1Triangle(13, 4, 8, 0),
	Gbi.gsSPEndDisplayList(),
]

const luigi_low_poly_left_foot_shared_dl_vertex = [
	{ pos: [ -38, 59, -43 ], flag: 0, tc: [ 0, 0 ], color: [ 130, 13, 2, 255 ] },
	{ pos: [ -41, 15, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 168, 201, 74, 255 ] },
	{ pos: [ -37, 60, 45 ], flag: 0, tc: [ 0, 0 ], color: [ 129, 11, 1, 255 ] },
	{ pos: [ -43, 15, -38 ], flag: 0, tc: [ 0, 0 ], color: [ 165, 202, 185, 255 ] },
	{ pos: [ 72, -38, -33 ], flag: 0, tc: [ 0, 0 ], color: [ 25, 151, 189, 255 ] },
	{ pos: [ -38, 59, -43 ], flag: 0, tc: [ 0, 0 ], color: [ 255, 241, 130, 255 ] },
	{ pos: [ 104, 6, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 72, 191, 174, 255 ] },
	{ pos: [ 105, 7, 39 ], flag: 0, tc: [ 0, 0 ], color: [ 74, 193, 81, 255 ] },
	{ pos: [ 73, -37, 34 ], flag: 0, tc: [ 0, 0 ], color: [ 27, 153, 69, 255 ] },
	{ pos: [ -37, 60, 45 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 242, 126, 255 ] },
	{ pos: [ 105, 7, 39 ], flag: 0, tc: [ 0, 0 ], color: [ 44, 119, 254, 255 ] },
	{ pos: [ 104, 6, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 44, 119, 254, 255 ] },
	{ pos: [ -38, 59, -43 ], flag: 0, tc: [ 0, 0 ], color: [ 44, 119, 255, 255 ] },
	{ pos: [ -37, 60, 45 ], flag: 0, tc: [ 0, 0 ], color: [ 44, 119, 255, 255 ] },
]

export const luigi_low_poly_left_foot_shared_dl = [
	Gbi.gsSPVertex(luigi_low_poly_left_foot_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 3, 1, 0),
	Gbi.gsSP1Triangle(4, 1, 3, 0),
	Gbi.gsSP1Triangle(4, 3, 5, 0),
	Gbi.gsSP1Triangle(4, 5, 6, 0),
	Gbi.gsSP1Triangle(4, 6, 7, 0),
	Gbi.gsSP1Triangle(7, 8, 4, 0),
	Gbi.gsSP1Triangle(8, 7, 9, 0),
	Gbi.gsSP1Triangle(1, 8, 9, 0),
	Gbi.gsSP1Triangle(4, 8, 1, 0),
	Gbi.gsSP1Triangle(10, 11, 12, 0),
	Gbi.gsSP1Triangle(13, 10, 12, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_left_foot = (customData) => {
	return [
	Gbi.gsSPLight(mario_brown1_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_brown1_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_left_foot_shared_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_low_poly_right_thigh_shared_dl_vertex = [
	{ pos: [ 21, -32, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 22, 131, 253, 255 ] },
	{ pos: [ 96, -19, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 84, 201, 178, 255 ] },
	{ pos: [ 22, -34, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 22, 131, 253, 255 ] },
	{ pos: [ 97, -20, 23 ], flag: 0, tc: [ 0, 0 ], color: [ 87, 197, 72, 255 ] },
	{ pos: [ 90, 39, 18 ], flag: 0, tc: [ 0, 0 ], color: [ 74, 79, 66, 255 ] },
	{ pos: [ 89, 39, -24 ], flag: 0, tc: [ 0, 0 ], color: [ 72, 82, 190, 255 ] },
	{ pos: [ 21, -32, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 7, 20, 131, 255 ] },
	{ pos: [ 13, 42, -29 ], flag: 0, tc: [ 0, 0 ], color: [ 8, 98, 176, 255 ] },
	{ pos: [ 15, 40, 25 ], flag: 0, tc: [ 0, 0 ], color: [ 9, 93, 86, 255 ] },
	{ pos: [ 22, -34, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 11, 11, 126, 255 ] },
	{ pos: [ 22, -34, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 130, 243, 2, 255 ] },
	{ pos: [ 13, 42, -29 ], flag: 0, tc: [ 0, 0 ], color: [ 130, 244, 2, 255 ] },
	{ pos: [ 21, -32, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 130, 243, 1, 255 ] },
	{ pos: [ 15, 40, 25 ], flag: 0, tc: [ 0, 0 ], color: [ 130, 245, 4, 255 ] },
]

export const luigi_low_poly_right_thigh_shared_dl = [
	Gbi.gsSPVertex(luigi_low_poly_right_thigh_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(1, 3, 2, 0),
	Gbi.gsSP1Triangle(1, 4, 3, 0),
	Gbi.gsSP1Triangle(1, 5, 4, 0),
	Gbi.gsSP1Triangle(5, 1, 6, 0),
	Gbi.gsSP1Triangle(5, 6, 7, 0),
	Gbi.gsSP1Triangle(4, 5, 7, 0),
	Gbi.gsSP1Triangle(4, 7, 8, 0),
	Gbi.gsSP1Triangle(4, 8, 9, 0),
	Gbi.gsSP1Triangle(9, 3, 4, 0),
	Gbi.gsSP1Triangle(10, 11, 12, 0),
	Gbi.gsSP1Triangle(10, 13, 11, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_right_thigh = (customData) => {
	return [
	Gbi.gsSPLight(mario_overalls_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_overalls_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_right_thigh_shared_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_low_poly_right_leg_shared_dl_vertex = [
	{ pos: [ 66, -28, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 127, 248, 254, 255 ] },
	{ pos: [ 71, 43, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 127, 248, 254, 255 ] },
	{ pos: [ 72, 41, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 127, 248, 254, 255 ] },
	{ pos: [ 67, -31, 27 ], flag: 0, tc: [ 0, 0 ], color: [ 127, 247, 254, 255 ] },
	{ pos: [ 66, -28, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 240, 130, 252, 255 ] },
	{ pos: [ 67, -31, 27 ], flag: 0, tc: [ 0, 0 ], color: [ 239, 130, 251, 255 ] },
	{ pos: [ 2, -22, 25 ], flag: 0, tc: [ 0, 0 ], color: [ 177, 193, 77, 255 ] },
	{ pos: [ 1, -20, -35 ], flag: 0, tc: [ 0, 0 ], color: [ 174, 197, 179, 255 ] },
	{ pos: [ 6, 37, 18 ], flag: 0, tc: [ 0, 0 ], color: [ 182, 76, 70, 255 ] },
	{ pos: [ 67, -31, 27 ], flag: 0, tc: [ 0, 0 ], color: [ 253, 13, 126, 255 ] },
	{ pos: [ 72, 41, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 248, 94, 85, 255 ] },
	{ pos: [ 6, 39, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 181, 81, 192, 255 ] },
	{ pos: [ 71, 43, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 245, 99, 178, 255 ] },
	{ pos: [ 66, -28, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 248, 19, 131, 255 ] },
]

export const luigi_low_poly_right_leg_shared_dl = [
	Gbi.gsSPVertex(luigi_low_poly_right_leg_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 2, 3, 0),
	Gbi.gsSP1Triangle(4, 5, 6, 0),
	Gbi.gsSP1Triangle(6, 7, 4, 0),
	Gbi.gsSP1Triangle(6, 8, 7, 0),
	Gbi.gsSP1Triangle(8, 6, 9, 0),
	Gbi.gsSP1Triangle(9, 10, 8, 0),
	Gbi.gsSP1Triangle(11, 8, 10, 0),
	Gbi.gsSP1Triangle(10, 12, 11, 0),
	Gbi.gsSP1Triangle(12, 13, 11, 0),
	Gbi.gsSP1Triangle(13, 7, 11, 0),
	Gbi.gsSP1Triangle(8, 11, 7, 0),
	Gbi.gsSPEndDisplayList(),
]

const luigi_low_poly_right_foot_dl_vertex = [
	{ pos: [ -38, 58, -48 ], flag: 0, tc: [ 0, 0 ], color: [ 129, 11, 255, 255 ] },
	{ pos: [ -42, 14, -42 ], flag: 0, tc: [ 0, 0 ], color: [ 169, 199, 183, 255 ] },
	{ pos: [ -39, 59, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 130, 13, 254, 255 ] },
	{ pos: [ -44, 15, 35 ], flag: 0, tc: [ 0, 0 ], color: [ 165, 202, 71, 255 ] },
	{ pos: [ 70, -35, 32 ], flag: 0, tc: [ 0, 0 ], color: [ 25, 152, 69, 255 ] },
	{ pos: [ 72, -36, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 29, 152, 190, 255 ] },
	{ pos: [ -38, 58, -48 ], flag: 0, tc: [ 0, 0 ], color: [ 1, 239, 130, 255 ] },
	{ pos: [ 103, 8, -39 ], flag: 0, tc: [ 0, 0 ], color: [ 77, 192, 178, 255 ] },
	{ pos: [ 101, 9, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 70, 192, 85, 255 ] },
	{ pos: [ -39, 59, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 253, 241, 126, 255 ] },
	{ pos: [ -39, 59, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 42, 120, 0, 255 ] },
	{ pos: [ 103, 8, -39 ], flag: 0, tc: [ 0, 0 ], color: [ 42, 120, 0, 255 ] },
	{ pos: [ -38, 58, -48 ], flag: 0, tc: [ 0, 0 ], color: [ 42, 120, 0, 255 ] },
	{ pos: [ 101, 9, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 43, 120, 0, 255 ] },
]

export const luigi_low_poly_right_foot_dl = [
	Gbi.gsSPVertex(luigi_low_poly_right_foot_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(1, 3, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 4, 0),
	Gbi.gsSP1Triangle(1, 5, 4, 0),
	Gbi.gsSP1Triangle(6, 5, 1, 0),
	Gbi.gsSP1Triangle(6, 7, 5, 0),
	Gbi.gsSP1Triangle(4, 5, 7, 0),
	Gbi.gsSP1Triangle(7, 8, 4, 0),
	Gbi.gsSP1Triangle(8, 9, 4, 0),
	Gbi.gsSP1Triangle(9, 3, 4, 0),
	Gbi.gsSP1Triangle(10, 11, 12, 0),
	Gbi.gsSP1Triangle(10, 13, 11, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_right_foot = (customData) => {
	return [
	Gbi.gsSPLight(mario_brown1_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_brown1_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_right_foot_dl),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADE),
	Gbi.gsDPSetEnvColor(255, 255, 255, 255),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_metal_low_poly_right_foot = [
	Gbi.gsSPDisplayList(luigi_low_poly_right_foot_dl),
	Gbi.gsSPClearGeometryMode(Gbi.G_TEXTURE_GEN),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADE),
	Gbi.gsSPTexture(0x0F80, 0x07C0, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetEnvColor(255, 255, 255, 255),
	Gbi.gsSPEndDisplayList(),
]

const luigi_low_poly_yellow_button_dl_vertex = [
	{ pos: [ -28, 30, -64 ], flag: 0, tc: [ -282, 1646 ], color: [ 178, 40, 164, 255 ] },
	{ pos: [ 0, 71, 0 ], flag: 0, tc: [ 1786, 722 ], color: [ 245, 127, 0, 255 ] },
	{ pos: [ 35, 46, -59 ], flag: 0, tc: [ -277, 132 ], color: [ 34, 73, 157, 255 ] },
	{ pos: [ 39, 65, 0 ], flag: 0, tc: [ 1550, -280 ], color: [ 49, 117, 0, 255 ] },
	{ pos: [ -28, 30, 64 ], flag: 0, tc: [ 1473, 1512 ], color: [ 177, 40, 91, 255 ] },
	{ pos: [ 35, 46, 60 ], flag: 0, tc: [ 1000, -68 ], color: [ 34, 72, 99, 255 ] },
	{ pos: [ 0, 71, 0 ], flag: 0, tc: [ -867, 968 ], color: [ 245, 127, 0, 255 ] },
	{ pos: [ 39, 65, 0 ], flag: 0, tc: [ -939, -124 ], color: [ 49, 117, 0, 255 ] },
]

const luigi_low_poly_pants_overalls_shared_dl_vertex = [
	{ pos: [ 35, 46, 60 ], flag: 0, tc: [ 0, 0 ], color: [ 34, 72, 99, 255 ] },
	{ pos: [ -28, 30, 64 ], flag: 0, tc: [ 0, 0 ], color: [ 177, 40, 91, 255 ] },
	{ pos: [ 39, -57, 53 ], flag: 0, tc: [ 0, 0 ], color: [ 31, 163, 81, 255 ] },
	{ pos: [ -28, -51, 58 ], flag: 0, tc: [ 0, 0 ], color: [ 182, 184, 74, 255 ] },
	{ pos: [ -28, 64, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 166, 90, 0, 255 ] },
	{ pos: [ 0, 71, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 245, 127, 0, 255 ] },
	{ pos: [ -28, 30, -64 ], flag: 0, tc: [ 0, 0 ], color: [ 178, 40, 164, 255 ] },
	{ pos: [ -28, -51, -58 ], flag: 0, tc: [ 0, 0 ], color: [ 182, 184, 182, 255 ] },
	{ pos: [ 39, -57, -53 ], flag: 0, tc: [ 0, 0 ], color: [ 32, 163, 175, 255 ] },
	{ pos: [ 35, 46, -59 ], flag: 0, tc: [ 0, 0 ], color: [ 34, 73, 157, 255 ] },
	{ pos: [ 89, -32, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 104, 204, 205, 255 ] },
	{ pos: [ 89, -33, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 103, 202, 52, 255 ] },
	{ pos: [ 74, 19, -43 ], flag: 0, tc: [ 0, 0 ], color: [ 87, 39, 172, 255 ] },
	{ pos: [ 39, 65, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 49, 117, 0, 255 ] },
	{ pos: [ 74, 19, 43 ], flag: 0, tc: [ 0, 0 ], color: [ 87, 40, 84, 255 ] },
]

const luigi_low_poly_tshirt_shared_dl_vertex = [
	{ pos: [ 39, -57, -53 ], flag: 0, tc: [ 0, 0 ], color: [ 32, 163, 175, 255 ] },
	{ pos: [ 35, 46, -59 ], flag: 0, tc: [ 0, 0 ], color: [ 34, 73, 157, 255 ] },
	{ pos: [ 74, 19, -43 ], flag: 0, tc: [ 0, 0 ], color: [ 87, 39, 172, 255 ] },
	{ pos: [ 89, -32, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 104, 204, 205, 255 ] },
	{ pos: [ 87, 30, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 108, 67, 0, 255 ] },
	{ pos: [ 39, 65, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 49, 117, 0, 255 ] },
	{ pos: [ 74, 19, 43 ], flag: 0, tc: [ 0, 0 ], color: [ 87, 40, 84, 255 ] },
	{ pos: [ 89, -33, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 103, 202, 52, 255 ] },
	{ pos: [ 39, -57, 53 ], flag: 0, tc: [ 0, 0 ], color: [ 31, 163, 81, 255 ] },
	{ pos: [ 35, 46, 60 ], flag: 0, tc: [ 0, 0 ], color: [ 34, 72, 99, 255 ] },
]

export const luigi_low_poly_yellow_button_dl = [
	Gbi.gsSPVertex(luigi_low_poly_yellow_button_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 2, 1, 0),
	Gbi.gsSP1Triangle(4, 5, 6, 0),
	Gbi.gsSP1Triangle(6, 5, 7, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_pants_overalls_shared_dl = [
	Gbi.gsSPVertex(luigi_low_poly_pants_overalls_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(1, 3, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 4, 0),
	Gbi.gsSP1Triangle(4, 1, 5, 0),
	Gbi.gsSP1Triangle(5, 6, 4, 0),
	Gbi.gsSP1Triangle(3, 4, 6, 0),
	Gbi.gsSP1Triangle(3, 6, 7, 0),
	Gbi.gsSP1Triangle(8, 7, 6, 0),
	Gbi.gsSP1Triangle(8, 6, 9, 0),
	Gbi.gsSP1Triangle(7, 8, 3, 0),
	Gbi.gsSP1Triangle(8, 2, 3, 0),
	Gbi.gsSP1Triangle(2, 8, 10, 0),
	Gbi.gsSP1Triangle(10, 11, 2, 0),
	Gbi.gsSP1Triangle(12, 9, 13, 0),
	Gbi.gsSP1Triangle(13, 0, 14, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_tshirt_shared_dl = [
	Gbi.gsSPVertex(luigi_low_poly_tshirt_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(2, 3, 0, 0),
	Gbi.gsSP1Triangle(3, 2, 4, 0),
	Gbi.gsSP1Triangle(5, 4, 2, 0),
	Gbi.gsSP1Triangle(6, 4, 5, 0),
	Gbi.gsSP1Triangle(4, 6, 7, 0),
	Gbi.gsSP1Triangle(8, 7, 6, 0),
	Gbi.gsSP1Triangle(8, 6, 9, 0),
	Gbi.gsSP1Triangle(7, 3, 4, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_torso_dl = (customData) => {
	return [
	Gbi.gsSPDisplayList(luigi_low_poly_pants_overalls_shared_dl),
	Gbi.gsSPLight(mario_shirt_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_shirt_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_tshirt_shared_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_torso = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_yellow_button),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_yellow_button_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_torso_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_metal_low_poly_torso = [
	Gbi.gsSPDisplayList(luigi_low_poly_yellow_button_dl),
	Gbi.gsSPDisplayList(luigi_low_poly_pants_overalls_shared_dl),
	Gbi.gsSPDisplayList(luigi_low_poly_tshirt_shared_dl),
	Gbi.gsSPEndDisplayList(),
]

const luigi_low_poly_l_logo_dl_vertex = [
	{ pos: [ 240, 43, 41 ], flag: 0, tc: [ 904, -128 ], color: [ 108, 35, 58, 255 ] },
	{ pos: [ 153, 70, -7 ], flag: 0, tc: [ 452, 892 ], color: [ 103, 73, 244, 255 ] },
	{ pos: [ 128, 24, 72 ], flag: 0, tc: [ 1238, 1074 ], color: [ 5, 62, 111, 255 ] },
	{ pos: [ 240, 43, -40 ], flag: 0, tc: [ -2, -128 ], color: [ 109, 33, 199, 255 ] },
	{ pos: [ 128, 24, -71 ], flag: 0, tc: [ -334, 1074 ], color: [ 4, 61, 145, 255 ] },
]

const luigi_low_poly_eyes_cap_on_dl_vertex = [
	{ pos: [ 128, 24, 72 ], flag: 0, tc: [ 1316, 212 ], color: [ 5, 62, 111, 255 ] },
	{ pos: [ 148, 70, 0 ], flag: 0, tc: [ 458, 68 ], color: [ 162, 85, 0, 255 ] },
	{ pos: [ 77, 87, 29 ], flag: 0, tc: [ 762, 990 ], color: [ 22, 89, 88, 255 ] },
	{ pos: [ 77, 87, -28 ], flag: 0, tc: [ 154, 990 ], color: [ 23, 89, 168, 255 ] },
	{ pos: [ 128, 24, -71 ], flag: 0, tc: [ -398, 212 ], color: [ 4, 61, 145, 255 ] },
]

const luigi_low_poly_mustache_cap_on_dl_vertex = [
	{ pos: [ 77, 87, -28 ], flag: 0, tc: [ 398, 214 ], color: [ 23, 89, 168, 255 ] },
	{ pos: [ 128, 24, -71 ], flag: 0, tc: [ 1408, -1062 ], color: [ 4, 61, 145, 255 ] },
	{ pos: [ 29, 38, -67 ], flag: 0, tc: [ 1306, 732 ], color: [ 202, 43, 149, 255 ] },
	{ pos: [ 38, 90, 0 ], flag: 0, tc: [ 10, 800 ], color: [ 160, 84, 0, 255 ] },
	{ pos: [ -6, 54, 0 ], flag: 0, tc: [ 300, 1456 ], color: [ 143, 58, 0, 255 ] },
	{ pos: [ 29, 38, 67 ], flag: 0, tc: [ 1314, 634 ], color: [ 202, 43, 107, 255 ] },
	{ pos: [ 128, 24, 72 ], flag: 0, tc: [ 1132, -1068 ], color: [ 5, 62, 111, 255 ] },
	{ pos: [ 77, 87, 29 ], flag: 0, tc: [ 294, 258 ], color: [ 22, 89, 88, 255 ] },
	{ pos: [ 38, 90, 0 ], flag: 0, tc: [ 34, 840 ], color: [ 160, 84, 0, 255 ] },
	{ pos: [ -6, 54, 0 ], flag: 0, tc: [ 470, 1412 ], color: [ 143, 58, 0, 255 ] },
]

const luigi_low_poly_face_cap_dl_vertex = [
	{ pos: [ 240, 43, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 109, 33, 199, 255 ] },
	{ pos: [ 240, 43, 41 ], flag: 0, tc: [ 0, 0 ], color: [ 108, 35, 58, 255 ] },
	{ pos: [ 131, -62, 107 ], flag: 0, tc: [ 0, 0 ], color: [ 29, 208, 114, 255 ] },
	{ pos: [ 128, 24, 72 ], flag: 0, tc: [ 0, 0 ], color: [ 5, 62, 111, 255 ] },
	{ pos: [ 50, -84, 63 ], flag: 0, tc: [ 0, 0 ], color: [ 202, 180, 87, 255 ] },
	{ pos: [ 86, -127, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 5, 129, 0, 255 ] },
	{ pos: [ 50, -84, -62 ], flag: 0, tc: [ 0, 0 ], color: [ 201, 181, 170, 255 ] },
	{ pos: [ 131, -62, -107 ], flag: 0, tc: [ 0, 0 ], color: [ 29, 208, 142, 255 ] },
	{ pos: [ 128, 24, -71 ], flag: 0, tc: [ 0, 0 ], color: [ 4, 61, 145, 255 ] },
	{ pos: [ 148, 70, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 162, 85, 0, 255 ] },
	{ pos: [ 154, 137, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 13, 126, 11, 255 ] },
	{ pos: [ 153, 70, -7 ], flag: 0, tc: [ 0, 0 ], color: [ 103, 73, 244, 255 ] },
]

const luigi_low_poly_face_part_cap_on_dl_vertex = [
	{ pos: [ 77, 87, 29 ], flag: 0, tc: [ 0, 0 ], color: [ 22, 89, 88, 255 ] },
	{ pos: [ 80, 127, 29 ], flag: 0, tc: [ 0, 0 ], color: [ 52, 68, 94, 255 ] },
	{ pos: [ 38, 90, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 160, 84, 0, 255 ] },
	{ pos: [ 80, 127, -28 ], flag: 0, tc: [ 0, 0 ], color: [ 53, 68, 162, 255 ] },
	{ pos: [ 77, 87, -28 ], flag: 0, tc: [ 0, 0 ], color: [ 23, 89, 168, 255 ] },
	{ pos: [ 41, 128, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 155, 77, 0, 255 ] },
	{ pos: [ 29, 38, 67 ], flag: 0, tc: [ 0, 0 ], color: [ 202, 43, 107, 255 ] },
	{ pos: [ -6, 54, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 143, 58, 0, 255 ] },
	{ pos: [ 5, -60, 54 ], flag: 0, tc: [ 0, 0 ], color: [ 164, 203, 70, 255 ] },
	{ pos: [ 5, -60, -53 ], flag: 0, tc: [ 0, 0 ], color: [ 164, 203, 186, 255 ] },
	{ pos: [ 29, 38, -67 ], flag: 0, tc: [ 0, 0 ], color: [ 202, 43, 149, 255 ] },
	{ pos: [ 128, 24, -71 ], flag: 0, tc: [ 0, 0 ], color: [ 4, 61, 145, 255 ] },
	{ pos: [ 128, 24, 72 ], flag: 0, tc: [ 0, 0 ], color: [ 5, 62, 111, 255 ] },
]

const luigi_low_poly_face_back_hair_cap_on_dl_vertex = [
	{ pos: [ 128, 24, 72 ], flag: 0, tc: [ 0, 0 ], color: [ 5, 62, 111, 255 ] },
	{ pos: [ 5, -60, 54 ], flag: 0, tc: [ 0, 0 ], color: [ 164, 203, 70, 255 ] },
	{ pos: [ 50, -84, 63 ], flag: 0, tc: [ 0, 0 ], color: [ 202, 180, 87, 255 ] },
	{ pos: [ 5, -60, -53 ], flag: 0, tc: [ 0, 0 ], color: [ 164, 203, 186, 255 ] },
	{ pos: [ 50, -84, -62 ], flag: 0, tc: [ 0, 0 ], color: [ 201, 181, 170, 255 ] },
	{ pos: [ 128, 24, -71 ], flag: 0, tc: [ 0, 0 ], color: [ 4, 61, 145, 255 ] },
]

export const luigi_low_poly_l_logo_dl = [
	Gbi.gsSPVertex(luigi_low_poly_l_logo_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 0, 0),
	Gbi.gsSP1Triangle(3, 4, 1, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_eyes_cap_on_dl = [
	Gbi.gsSPVertex(luigi_low_poly_eyes_cap_on_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 2, 1, 0),
	Gbi.gsSP1Triangle(3, 1, 4, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_mustache_cap_on_dl = [
	Gbi.gsSPVertex(luigi_low_poly_mustache_cap_on_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(2, 3, 0, 0),
	Gbi.gsSP1Triangle(2, 4, 3, 0),
	Gbi.gsSP1Triangle(5, 6, 7, 0),
	Gbi.gsSP1Triangle(7, 8, 5, 0),
	Gbi.gsSP1Triangle(8, 9, 5, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_face_part_cap_on_dl = [
	Gbi.gsSPVertex(luigi_low_poly_face_part_cap_on_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 0, 0),
	Gbi.gsSP1Triangle(4, 3, 0, 0),
	Gbi.gsSP1Triangle(2, 3, 4, 0),
	Gbi.gsSP1Triangle(2, 5, 3, 0),
	Gbi.gsSP1Triangle(1, 5, 2, 0),
	Gbi.gsSP1Triangle(3, 5, 1, 0),
	Gbi.gsSP1Triangle(6, 7, 8, 0),
	Gbi.gsSP1Triangle(8, 7, 9, 0),
	Gbi.gsSP1Triangle(9, 7, 10, 0),
	Gbi.gsSP1Triangle(9, 10, 11, 0),
	Gbi.gsSP1Triangle(12, 6, 8, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_face_cap_dl = [
	Gbi.gsSPVertex(luigi_low_poly_face_cap_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(2, 1, 3, 0),
	Gbi.gsSP1Triangle(4, 2, 3, 0),
	Gbi.gsSP1Triangle(4, 5, 2, 0),
	Gbi.gsSP1Triangle(6, 5, 4, 0),
	Gbi.gsSP1Triangle(7, 5, 6, 0),
	Gbi.gsSP1Triangle(8, 7, 6, 0),
	Gbi.gsSP1Triangle(8, 0, 7, 0),
	Gbi.gsSP1Triangle(7, 0, 2, 0),
	Gbi.gsSP1Triangle(5, 7, 2, 0),
	Gbi.gsSP1Triangle(9, 10, 8, 0),
	Gbi.gsSP1Triangle(10, 9, 3, 0),
	Gbi.gsSP1Triangle(10, 3, 11, 0),
	Gbi.gsSP1Triangle(10, 11, 8, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_face_back_hair_cap_on_dl = [
	Gbi.gsSPVertex(luigi_low_poly_face_back_hair_cap_on_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(2, 1, 3, 0),
	Gbi.gsSP1Triangle(2, 3, 4, 0),
	Gbi.gsSP1Triangle(4, 3, 5, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_face_cap_on_dl = (customData) => {
	return [
	Gbi.gsSPDisplayList(luigi_low_poly_face_part_cap_on_dl),
	Gbi.gsSPLight(mario_hat_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_hat_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_dl),
	Gbi.gsSPLight(mario_brown2_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_brown2_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_face_back_hair_cap_on_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_cap_on_eyes_front = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_l_logo_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_front),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_on_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_on_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_cap_on_eyes_half_closed = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_l_logo_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_half_closed),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_on_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_on_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_cap_on_eyes_closed = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_l_logo_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_closed),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_on_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_on_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_cap_on_eyes_right = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_l_logo_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_right),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_on_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_on_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_cap_on_eyes_left = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_l_logo_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_left),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_on_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_on_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_cap_on_eyes_up = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_l_logo_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_up),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_on_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_on_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_cap_on_eyes_down = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_l_logo_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_down),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_on_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_on_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_cap_on_eyes_dead = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_l_logo_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_dead),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_on_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_on_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_on_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_metal_low_poly_cap_on = [
	Gbi.gsSPDisplayList(luigi_low_poly_l_logo_dl),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_on_dl),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_on_dl),
	Gbi.gsSPDisplayList(luigi_low_poly_face_part_cap_on_dl),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_dl),
	Gbi.gsSPDisplayList(luigi_low_poly_face_back_hair_cap_on_dl),
	Gbi.gsSPEndDisplayList(),
]

const luigi_low_poly_eyes_cap_off_dl_vertex = [
	{ pos: [ 130, 24, 72 ], flag: 0, tc: [ 1316, 212 ], color: [ 19, 41, 119, 255 ] },
	{ pos: [ 150, 70, 0 ], flag: 0, tc: [ 458, 68 ], color: [ 39, 121, 0, 255 ] },
	{ pos: [ 79, 87, 29 ], flag: 0, tc: [ 762, 990 ], color: [ 22, 89, 88, 255 ] },
	{ pos: [ 79, 87, -28 ], flag: 0, tc: [ 154, 990 ], color: [ 22, 89, 168, 255 ] },
	{ pos: [ 130, 24, -71 ], flag: 0, tc: [ -398, 212 ], color: [ 17, 43, 138, 255 ] },
]

const luigi_low_poly_mustache_cap_off_dl_vertex = [
	{ pos: [ 79, 87, -28 ], flag: 0, tc: [ 398, 214 ], color: [ 22, 89, 168, 255 ] },
	{ pos: [ 130, 24, -71 ], flag: 0, tc: [ 1408, -1062 ], color: [ 17, 43, 138, 255 ] },
	{ pos: [ 31, 38, -67 ], flag: 0, tc: [ 1306, 732 ], color: [ 202, 43, 149, 255 ] },
	{ pos: [ 40, 90, 0 ], flag: 0, tc: [ 10, 800 ], color: [ 160, 83, 0, 255 ] },
	{ pos: [ -4, 54, 0 ], flag: 0, tc: [ 300, 1456 ], color: [ 142, 57, 0, 255 ] },
	{ pos: [ 31, 38, 67 ], flag: 0, tc: [ 1314, 634 ], color: [ 202, 43, 107, 255 ] },
	{ pos: [ 130, 24, 72 ], flag: 0, tc: [ 1132, -1068 ], color: [ 19, 41, 119, 255 ] },
	{ pos: [ 79, 87, 29 ], flag: 0, tc: [ 294, 258 ], color: [ 22, 89, 88, 255 ] },
	{ pos: [ 40, 90, 0 ], flag: 0, tc: [ 34, 840 ], color: [ 160, 83, 0, 255 ] },
	{ pos: [ -4, 54, 0 ], flag: 0, tc: [ 470, 1412 ], color: [ 142, 57, 0, 255 ] },
]

const luigi_low_poly_face_part_cap_off_dl_vertex = [
	{ pos: [ 130, 24, 72 ], flag: 0, tc: [ 0, 0 ], color: [ 19, 41, 119, 255 ] },
	{ pos: [ 31, 38, 67 ], flag: 0, tc: [ 0, 0 ], color: [ 202, 43, 107, 255 ] },
	{ pos: [ 7, -60, 54 ], flag: 0, tc: [ 0, 0 ], color: [ 164, 203, 70, 255 ] },
	{ pos: [ -4, 54, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 142, 57, 0, 255 ] },
	{ pos: [ 7, -60, -53 ], flag: 0, tc: [ 0, 0 ], color: [ 164, 203, 186, 255 ] },
	{ pos: [ 31, 38, -67 ], flag: 0, tc: [ 0, 0 ], color: [ 202, 43, 149, 255 ] },
	{ pos: [ 130, 24, -71 ], flag: 0, tc: [ 0, 0 ], color: [ 17, 43, 138, 255 ] },
	{ pos: [ 79, 87, 29 ], flag: 0, tc: [ 0, 0 ], color: [ 22, 89, 88, 255 ] },
	{ pos: [ 82, 127, 29 ], flag: 0, tc: [ 0, 0 ], color: [ 52, 67, 95, 255 ] },
	{ pos: [ 40, 90, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 160, 83, 0, 255 ] },
	{ pos: [ 82, 127, -28 ], flag: 0, tc: [ 0, 0 ], color: [ 52, 68, 162, 255 ] },
	{ pos: [ 79, 87, -28 ], flag: 0, tc: [ 0, 0 ], color: [ 22, 89, 168, 255 ] },
	{ pos: [ 42, 128, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 155, 77, 0, 255 ] },
]

const luigi_low_poly_face_hair_cap_off_dl_vertex = [
	{ pos: [ 194, 46, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 87, 67, 192, 255 ] },
	{ pos: [ 130, 24, -71 ], flag: 0, tc: [ 0, 0 ], color: [ 17, 43, 138, 255 ] },
	{ pos: [ 150, 70, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 39, 121, 0, 255 ] },
	{ pos: [ 171, -13, -62 ], flag: 0, tc: [ 0, 0 ], color: [ 76, 245, 155, 255 ] },
	{ pos: [ 199, -21, -1 ], flag: 0, tc: [ 0, 0 ], color: [ 122, 220, 0, 255 ] },
	{ pos: [ 194, 46, 41 ], flag: 0, tc: [ 0, 0 ], color: [ 88, 66, 64, 255 ] },
	{ pos: [ 130, 24, 72 ], flag: 0, tc: [ 0, 0 ], color: [ 19, 41, 119, 255 ] },
	{ pos: [ 171, -13, 61 ], flag: 0, tc: [ 0, 0 ], color: [ 77, 242, 100, 255 ] },
	{ pos: [ 149, -85, 60 ], flag: 0, tc: [ 0, 0 ], color: [ 55, 171, 77, 255 ] },
	{ pos: [ 52, -84, 63 ], flag: 0, tc: [ 0, 0 ], color: [ 222, 171, 88, 255 ] },
	{ pos: [ 7, -60, 54 ], flag: 0, tc: [ 0, 0 ], color: [ 164, 203, 70, 255 ] },
	{ pos: [ 7, -60, -53 ], flag: 0, tc: [ 0, 0 ], color: [ 164, 203, 186, 255 ] },
	{ pos: [ 52, -84, -62 ], flag: 0, tc: [ 0, 0 ], color: [ 221, 171, 168, 255 ] },
	{ pos: [ 149, -85, -63 ], flag: 0, tc: [ 0, 0 ], color: [ 53, 172, 177, 255 ] },
	{ pos: [ 80, -97, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 242, 130, 0, 255 ] },
]

export const luigi_low_poly_eyes_cap_off_dl = [
	Gbi.gsSPVertex(luigi_low_poly_eyes_cap_off_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 2, 1, 0),
	Gbi.gsSP1Triangle(3, 1, 4, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_mustache_cap_off_dl = [
	Gbi.gsSPVertex(luigi_low_poly_mustache_cap_off_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(2, 3, 0, 0),
	Gbi.gsSP1Triangle(2, 4, 3, 0),
	Gbi.gsSP1Triangle(5, 6, 7, 0),
	Gbi.gsSP1Triangle(7, 8, 5, 0),
	Gbi.gsSP1Triangle(8, 9, 5, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_face_part_cap_off_dl = [
	Gbi.gsSPVertex(luigi_low_poly_face_part_cap_off_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(1, 3, 2, 0),
	Gbi.gsSP1Triangle(2, 3, 4, 0),
	Gbi.gsSP1Triangle(4, 3, 5, 0),
	Gbi.gsSP1Triangle(4, 5, 6, 0),
	Gbi.gsSP1Triangle(7, 8, 9, 0),
	Gbi.gsSP1Triangle(10, 8, 7, 0),
	Gbi.gsSP1Triangle(11, 10, 7, 0),
	Gbi.gsSP1Triangle(9, 10, 11, 0),
	Gbi.gsSP1Triangle(9, 12, 10, 0),
	Gbi.gsSP1Triangle(8, 12, 9, 0),
	Gbi.gsSP1Triangle(10, 12, 8, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_face_hair_cap_off_dl = [
	Gbi.gsSPVertex(luigi_low_poly_face_hair_cap_off_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(1, 0, 3, 0),
	Gbi.gsSP1Triangle(3, 0, 4, 0),
	Gbi.gsSP1Triangle(0, 5, 4, 0),
	Gbi.gsSP1Triangle(0, 2, 5, 0),
	Gbi.gsSP1Triangle(5, 2, 6, 0),
	Gbi.gsSP1Triangle(7, 5, 6, 0),
	Gbi.gsSP1Triangle(8, 7, 6, 0),
	Gbi.gsSP1Triangle(9, 8, 6, 0),
	Gbi.gsSP1Triangle(6, 10, 9, 0),
	Gbi.gsSP1Triangle(9, 10, 11, 0),
	Gbi.gsSP1Triangle(9, 11, 12, 0),
	Gbi.gsSP1Triangle(12, 11, 1, 0),
	Gbi.gsSP1Triangle(1, 13, 12, 0),
	Gbi.gsSP1Triangle(1, 3, 13, 0),
	Gbi.gsSP1Triangle(13, 3, 4, 0),
	Gbi.gsSP1Triangle(8, 13, 4, 0),
	Gbi.gsSP1Triangle(7, 8, 4, 0),
	Gbi.gsSP1Triangle(5, 7, 4, 0),
	Gbi.gsSP1Triangle(14, 13, 8, 0),
	Gbi.gsSP1Triangle(13, 14, 12, 0),
	Gbi.gsSP1Triangle(12, 14, 9, 0),
	Gbi.gsSP1Triangle(9, 14, 8, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_low_poly_face_cap_off_dl = (customData) => {
	return [
	Gbi.gsSPDisplayList(luigi_low_poly_face_part_cap_off_dl),
	Gbi.gsSPLight(mario_brown2_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_brown2_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_face_hair_cap_off_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_cap_off_eyes_front = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_front),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_off_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_off_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_cap_off_eyes_half_closed = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_half_closed),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_off_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_off_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_cap_off_eyes_closed = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_closed),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_off_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_off_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_cap_off_eyes_right = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_right),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_off_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_off_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_cap_off_eyes_left = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_left),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_off_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_off_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_cap_off_eyes_up = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_up),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_off_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_off_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_cap_off_eyes_down = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_down),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_off_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_off_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_low_poly_cap_off_eyes_dead = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_eyes_dead),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_beige_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_off_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_mustache),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_off_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_low_poly_face_cap_off_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_metal_low_poly_cap_off = [
	Gbi.gsSPDisplayList(luigi_low_poly_eyes_cap_off_dl),
	Gbi.gsSPDisplayList(luigi_low_poly_mustache_cap_off_dl),
	Gbi.gsSPDisplayList(luigi_low_poly_face_part_cap_off_dl),
	Gbi.gsSPDisplayList(luigi_low_poly_face_hair_cap_off_dl),
	Gbi.gsSPEndDisplayList(),
]

const luigi_left_hand_open_shared_dl_vertex = [
	{ pos: [ 104, 66, -13 ], flag: 0, tc: [ 0, 0 ], color: [ 77, 95, 34, 255 ] },
	{ pos: [ 60, 80, -12 ], flag: 0, tc: [ 0, 0 ], color: [ 240, 126, 249, 255 ] },
	{ pos: [ 66, 38, 23 ], flag: 0, tc: [ 0, 0 ], color: [ 20, 40, 119, 255 ] },
	{ pos: [ 102, 63, -32 ], flag: 0, tc: [ 0, 0 ], color: [ 50, 65, 159, 255 ] },
	{ pos: [ 121, 32, -1 ], flag: 0, tc: [ 0, 0 ], color: [ 116, 248, 52, 255 ] },
	{ pos: [ 71, -12, 14 ], flag: 0, tc: [ 0, 0 ], color: [ 67, 193, 88, 255 ] },
	{ pos: [ 21, 16, 29 ], flag: 0, tc: [ 0, 0 ], color: [ 222, 13, 122, 255 ] },
	{ pos: [ 4, 49, -3 ], flag: 0, tc: [ 0, 0 ], color: [ 172, 93, 23, 255 ] },
	{ pos: [ 21, 38, -31 ], flag: 0, tc: [ 0, 0 ], color: [ 245, 65, 147, 255 ] },
	{ pos: [ 67, 54, -25 ], flag: 0, tc: [ 0, 0 ], color: [ 246, 22, 131, 255 ] },
	{ pos: [ 114, 27, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 80, 216, 166, 255 ] },
	{ pos: [ 76, -3, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 101, 227, 184, 255 ] },
	{ pos: [ 76, -38, -27 ], flag: 0, tc: [ 0, 0 ], color: [ 75, 164, 212, 255 ] },
	{ pos: [ 38, -27, 14 ], flag: 0, tc: [ 0, 0 ], color: [ 255, 159, 82, 255 ] },
	{ pos: [ 21, -25, 10 ], flag: 0, tc: [ 0, 0 ], color: [ 55, 168, 73, 255 ] },
	{ pos: [ 8, 7, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 5, 27, 124, 255 ] },
	{ pos: [ -4, 33, -3 ], flag: 0, tc: [ 0, 0 ], color: [ 206, 114, 24, 255 ] },
	{ pos: [ 8, 7, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 5, 27, 124, 255 ] },
	{ pos: [ 21, 16, 29 ], flag: 0, tc: [ 0, 0 ], color: [ 222, 13, 122, 255 ] },
	{ pos: [ 4, 49, -3 ], flag: 0, tc: [ 0, 0 ], color: [ 172, 93, 23, 255 ] },
	{ pos: [ 8, 28, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 219, 30, 138, 255 ] },
	{ pos: [ 21, 38, -31 ], flag: 0, tc: [ 0, 0 ], color: [ 245, 65, 147, 255 ] },
	{ pos: [ 21, 2, -33 ], flag: 0, tc: [ 0, 0 ], color: [ 224, 227, 137, 255 ] },
	{ pos: [ 65, -13, -37 ], flag: 0, tc: [ 0, 0 ], color: [ 45, 3, 137, 255 ] },
	{ pos: [ 59, 11, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 51, 29, 143, 255 ] },
	{ pos: [ 67, 54, -25 ], flag: 0, tc: [ 0, 0 ], color: [ 246, 22, 131, 255 ] },
	{ pos: [ 76, -3, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 101, 227, 184, 255 ] },
	{ pos: [ 114, 27, -30 ], flag: 0, tc: [ 0, 0 ], color: [ 80, 216, 166, 255 ] },
	{ pos: [ 76, -38, -27 ], flag: 0, tc: [ 0, 0 ], color: [ 75, 164, 212, 255 ] },
	{ pos: [ 34, -30, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 216, 157, 187, 255 ] },
	{ pos: [ 38, -27, 14 ], flag: 0, tc: [ 0, 0 ], color: [ 255, 159, 82, 255 ] },
	{ pos: [ 21, -25, 10 ], flag: 0, tc: [ 0, 0 ], color: [ 55, 168, 73, 255 ] },
	{ pos: [ 21, -25, 10 ], flag: 0, tc: [ 0, 0 ], color: [ 55, 168, 73, 255 ] },
	{ pos: [ 16, -21, -19 ], flag: 0, tc: [ 0, 0 ], color: [ 16, 178, 157, 255 ] },
	{ pos: [ 34, -30, -26 ], flag: 0, tc: [ 0, 0 ], color: [ 216, 157, 187, 255 ] },
	{ pos: [ 10, -31, -22 ], flag: 0, tc: [ 0, 0 ], color: [ 19, 164, 171, 255 ] },
	{ pos: [ 16, -38, 15 ], flag: 0, tc: [ 0, 0 ], color: [ 39, 153, 64, 255 ] },
	{ pos: [ 1, 5, 28 ], flag: 0, tc: [ 0, 0 ], color: [ 249, 25, 124, 255 ] },
	{ pos: [ 8, 7, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 5, 27, 124, 255 ] },
	{ pos: [ -4, 33, -3 ], flag: 0, tc: [ 0, 0 ], color: [ 206, 114, 24, 255 ] },
	{ pos: [ -16, 37, -2 ], flag: 0, tc: [ 0, 0 ], color: [ 196, 111, 12, 255 ] },
	{ pos: [ -10, 15, -32 ], flag: 0, tc: [ 0, 0 ], color: [ 215, 35, 141, 255 ] },
	{ pos: [ 0, 16, -27 ], flag: 0, tc: [ 0, 0 ], color: [ 225, 28, 136, 255 ] },
	{ pos: [ 8, 28, -40 ], flag: 0, tc: [ 0, 0 ], color: [ 219, 30, 138, 255 ] },
	{ pos: [ 21, 2, -33 ], flag: 0, tc: [ 0, 0 ], color: [ 224, 227, 137, 255 ] },
	{ pos: [ 65, -13, -37 ], flag: 0, tc: [ 0, 0 ], color: [ 45, 3, 137, 255 ] },
	{ pos: [ 0, -26, -15 ], flag: 0, tc: [ 0, 0 ], color: [ 159, 179, 226, 255 ] },
	{ pos: [ 4, -31, 11 ], flag: 0, tc: [ 0, 0 ], color: [ 167, 176, 42, 255 ] },
	{ pos: [ 1, 5, 28 ], flag: 0, tc: [ 0, 0 ], color: [ 249, 25, 124, 255 ] },
	{ pos: [ -6, 0, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 151, 226, 66, 255 ] },
	{ pos: [ 4, -31, 11 ], flag: 0, tc: [ 0, 0 ], color: [ 167, 176, 42, 255 ] },
	{ pos: [ -19, 22, -1 ], flag: 0, tc: [ 0, 0 ], color: [ 131, 0, 22, 255 ] },
	{ pos: [ -16, 37, -2 ], flag: 0, tc: [ 0, 0 ], color: [ 196, 111, 12, 255 ] },
	{ pos: [ -10, 15, -32 ], flag: 0, tc: [ 0, 0 ], color: [ 215, 35, 141, 255 ] },
	{ pos: [ -14, 6, -23 ], flag: 0, tc: [ 0, 0 ], color: [ 141, 222, 214, 255 ] },
	{ pos: [ 0, -26, -15 ], flag: 0, tc: [ 0, 0 ], color: [ 159, 179, 226, 255 ] },
]

export const luigi_left_hand_open_shared_dl = [
	Gbi.gsSPVertex(luigi_left_hand_open_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(1, 0, 3, 0),
	Gbi.gsSP1Triangle(0, 4, 3, 0),
	Gbi.gsSP1Triangle(4, 0, 2, 0),
	Gbi.gsSP1Triangle(5, 4, 2, 0),
	Gbi.gsSP1Triangle(5, 2, 6, 0),
	Gbi.gsSP1Triangle(6, 2, 1, 0),
	Gbi.gsSP1Triangle(6, 1, 7, 0),
	Gbi.gsSP1Triangle(8, 7, 1, 0),
	Gbi.gsSP1Triangle(1, 9, 8, 0),
	Gbi.gsSP1Triangle(3, 9, 1, 0),
	Gbi.gsSP1Triangle(9, 3, 10, 0),
	Gbi.gsSP1Triangle(3, 4, 10, 0),
	Gbi.gsSP1Triangle(10, 4, 5, 0),
	Gbi.gsSP1Triangle(11, 10, 5, 0),
	Gbi.gsSP1Triangle(12, 11, 5, 0),
	Gbi.gsSP1Triangle(12, 5, 13, 0),
	Gbi.gsSP1Triangle(13, 5, 6, 0),
	Gbi.gsSP1Triangle(14, 13, 6, 0),
	Gbi.gsSP1Triangle(6, 15, 14, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(16, 18, 19, 0),
	Gbi.gsSP1Triangle(16, 19, 20, 0),
	Gbi.gsSP1Triangle(19, 21, 20, 0),
	Gbi.gsSP1Triangle(22, 20, 21, 0),
	Gbi.gsSP1Triangle(23, 22, 21, 0),
	Gbi.gsSP1Triangle(23, 21, 24, 0),
	Gbi.gsSP1Triangle(21, 25, 24, 0),
	Gbi.gsSP1Triangle(24, 25, 26, 0),
	Gbi.gsSP1Triangle(25, 27, 26, 0),
	Gbi.gsSP1Triangle(23, 24, 26, 0),
	Gbi.gsSP1Triangle(23, 26, 28, 0),
	Gbi.gsSP1Triangle(28, 29, 23, 0),
	Gbi.gsSP1Triangle(30, 29, 28, 0),
	Gbi.gsSP1Triangle(31, 29, 30, 0),
	Gbi.gsSP1Triangle(32, 33, 34, 0),
	Gbi.gsSP1Triangle(35, 33, 32, 0),
	Gbi.gsSP1Triangle(32, 36, 35, 0),
	Gbi.gsSP1Triangle(37, 36, 32, 0),
	Gbi.gsSP1Triangle(32, 38, 37, 0),
	Gbi.gsSP1Triangle(37, 38, 39, 0),
	Gbi.gsSP1Triangle(39, 40, 37, 0),
	Gbi.gsSP1Triangle(41, 40, 39, 0),
	Gbi.gsSP1Triangle(39, 42, 41, 0),
	Gbi.gsSP1Triangle(43, 42, 39, 0),
	Gbi.gsSP1Triangle(42, 43, 44, 0),
	Gbi.gsSP1Triangle(33, 42, 44, 0),
	Gbi.gsSP1Triangle(33, 44, 34, 0),
	Gbi.gsSP1Triangle(34, 44, 45, 0),
	Gbi.gsSP1Triangle(41, 42, 33, 0),
	Gbi.gsSP1Triangle(33, 35, 41, 0),
	Gbi.gsSP1Triangle(35, 46, 41, 0),
	Gbi.gsSP1Triangle(47, 46, 35, 0),
	Gbi.gsSP1Triangle(36, 47, 35, 0),
	Gbi.gsSP1Triangle(37, 47, 36, 0),
	Gbi.gsSP1Triangle(48, 49, 50, 0),
	Gbi.gsSP1Triangle(51, 49, 48, 0),
	Gbi.gsSP1Triangle(52, 51, 48, 0),
	Gbi.gsSP1Triangle(53, 51, 52, 0),
	Gbi.gsSP1Triangle(53, 54, 51, 0),
	Gbi.gsSP1Triangle(55, 54, 53, 0),
	Gbi.gsSP1Triangle(49, 54, 55, 0),
	Gbi.gsSP1Triangle(55, 50, 49, 0),
	Gbi.gsSP1Triangle(49, 51, 54, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_left_hand_open = (customData) => {
	return [
	Gbi.gsSPLight(mario_white_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_white_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_left_hand_open_shared_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_right_hand_open_dl_vertex = [
	{ pos: [ 117, 27, 22 ], flag: 0, tc: [ 0, 0 ], color: [ 82, 222, 91, 255 ] },
	{ pos: [ 107, 62, 21 ], flag: 0, tc: [ 0, 0 ], color: [ 57, 70, 90, 255 ] },
	{ pos: [ 72, 54, 17 ], flag: 0, tc: [ 0, 0 ], color: [ 253, 33, 123, 255 ] },
	{ pos: [ 123, 29, -6 ], flag: 0, tc: [ 0, 0 ], color: [ 115, 240, 204, 255 ] },
	{ pos: [ 73, -14, -16 ], flag: 0, tc: [ 0, 0 ], color: [ 62, 185, 171, 255 ] },
	{ pos: [ 80, -2, 14 ], flag: 0, tc: [ 0, 0 ], color: [ 104, 230, 69, 255 ] },
	{ pos: [ 64, 12, 23 ], flag: 0, tc: [ 0, 0 ], color: [ 61, 36, 106, 255 ] },
	{ pos: [ 28, 40, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 253, 74, 103, 255 ] },
	{ pos: [ 65, 79, 3 ], flag: 0, tc: [ 0, 0 ], color: [ 243, 126, 255, 255 ] },
	{ pos: [ 107, 64, 3 ], flag: 0, tc: [ 0, 0 ], color: [ 78, 90, 212, 255 ] },
	{ pos: [ 69, 35, -29 ], flag: 0, tc: [ 0, 0 ], color: [ 16, 29, 133, 255 ] },
	{ pos: [ 25, 14, -31 ], flag: 0, tc: [ 0, 0 ], color: [ 215, 3, 136, 255 ] },
	{ pos: [ 40, -28, -13 ], flag: 0, tc: [ 0, 0 ], color: [ 247, 153, 182, 255 ] },
	{ pos: [ 80, -37, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 76, 167, 48, 255 ] },
	{ pos: [ 69, -11, 34 ], flag: 0, tc: [ 0, 0 ], color: [ 53, 11, 115, 255 ] },
	{ pos: [ 27, 4, 32 ], flag: 0, tc: [ 0, 0 ], color: [ 227, 238, 122, 255 ] },
	{ pos: [ 28, 40, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 253, 74, 103, 255 ] },
	{ pos: [ 16, 31, 37 ], flag: 0, tc: [ 0, 0 ], color: [ 226, 42, 116, 255 ] },
	{ pos: [ 27, 4, 32 ], flag: 0, tc: [ 0, 0 ], color: [ 227, 238, 122, 255 ] },
	{ pos: [ 10, 49, -1 ], flag: 0, tc: [ 0, 0 ], color: [ 174, 94, 231, 255 ] },
	{ pos: [ 65, 79, 3 ], flag: 0, tc: [ 0, 0 ], color: [ 243, 126, 255, 255 ] },
	{ pos: [ 25, 14, -31 ], flag: 0, tc: [ 0, 0 ], color: [ 215, 3, 136, 255 ] },
	{ pos: [ 69, 35, -29 ], flag: 0, tc: [ 0, 0 ], color: [ 16, 29, 133, 255 ] },
	{ pos: [ 107, 64, 3 ], flag: 0, tc: [ 0, 0 ], color: [ 78, 90, 212, 255 ] },
	{ pos: [ 1, 34, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 215, 116, 225, 255 ] },
	{ pos: [ 13, 6, -20 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 17, 130, 255 ] },
	{ pos: [ 25, -25, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 55, 163, 189, 255 ] },
	{ pos: [ 40, -28, -13 ], flag: 0, tc: [ 0, 0 ], color: [ 247, 153, 182, 255 ] },
	{ pos: [ 39, -28, 27 ], flag: 0, tc: [ 0, 0 ], color: [ 216, 164, 78, 255 ] },
	{ pos: [ 80, -37, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 76, 167, 48, 255 ] },
	{ pos: [ 69, -11, 34 ], flag: 0, tc: [ 0, 0 ], color: [ 53, 11, 115, 255 ] },
	{ pos: [ 21, -18, 19 ], flag: 0, tc: [ 0, 0 ], color: [ 13, 186, 105, 255 ] },
	{ pos: [ 27, 4, 32 ], flag: 0, tc: [ 0, 0 ], color: [ 227, 238, 122, 255 ] },
	{ pos: [ 7, 18, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 234, 40, 119, 255 ] },
	{ pos: [ 21, -18, 19 ], flag: 0, tc: [ 0, 0 ], color: [ 13, 186, 105, 255 ] },
	{ pos: [ 16, 31, 37 ], flag: 0, tc: [ 0, 0 ], color: [ 226, 42, 116, 255 ] },
	{ pos: [ 1, 34, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 215, 116, 225, 255 ] },
	{ pos: [ 10, 49, -1 ], flag: 0, tc: [ 0, 0 ], color: [ 174, 94, 231, 255 ] },
	{ pos: [ -2, 18, 32 ], flag: 0, tc: [ 0, 0 ], color: [ 225, 47, 114, 255 ] },
	{ pos: [ 15, -29, 24 ], flag: 0, tc: [ 0, 0 ], color: [ 22, 169, 90, 255 ] },
	{ pos: [ 5, -24, 18 ], flag: 0, tc: [ 0, 0 ], color: [ 158, 186, 42, 255 ] },
	{ pos: [ -7, 9, 23 ], flag: 0, tc: [ 0, 0 ], color: [ 141, 231, 49, 255 ] },
	{ pos: [ -12, 22, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 130, 0, 240, 255 ] },
	{ pos: [ -9, 38, -1 ], flag: 0, tc: [ 0, 0 ], color: [ 199, 112, 236, 255 ] },
	{ pos: [ 5, 3, -28 ], flag: 0, tc: [ 0, 0 ], color: [ 242, 13, 130, 255 ] },
	{ pos: [ 13, 6, -20 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 17, 130, 255 ] },
	{ pos: [ 25, -25, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 55, 163, 189, 255 ] },
	{ pos: [ 20, -38, -13 ], flag: 0, tc: [ 0, 0 ], color: [ 40, 150, 198, 255 ] },
	{ pos: [ 39, -28, 27 ], flag: 0, tc: [ 0, 0 ], color: [ 216, 164, 78, 255 ] },
	{ pos: [ 21, -18, 19 ], flag: 0, tc: [ 0, 0 ], color: [ 13, 186, 105, 255 ] },
	{ pos: [ 25, -25, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 55, 163, 189, 255 ] },
	{ pos: [ 15, -29, 24 ], flag: 0, tc: [ 0, 0 ], color: [ 22, 169, 90, 255 ] },
	{ pos: [ 8, -31, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 164, 173, 227, 255 ] },
	{ pos: [ 20, -38, -13 ], flag: 0, tc: [ 0, 0 ], color: [ 40, 150, 198, 255 ] },
	{ pos: [ 5, -24, 18 ], flag: 0, tc: [ 0, 0 ], color: [ 158, 186, 42, 255 ] },
	{ pos: [ -1, -1, -18 ], flag: 0, tc: [ 0, 0 ], color: [ 145, 222, 204, 255 ] },
	{ pos: [ -7, 9, 23 ], flag: 0, tc: [ 0, 0 ], color: [ 141, 231, 49, 255 ] },
	{ pos: [ -12, 22, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 130, 0, 240, 255 ] },
	{ pos: [ 5, 3, -28 ], flag: 0, tc: [ 0, 0 ], color: [ 242, 13, 130, 255 ] },
	{ pos: [ -9, 38, -1 ], flag: 0, tc: [ 0, 0 ], color: [ 199, 112, 236, 255 ] },
]

export const luigi_right_hand_open_dl = [
	Gbi.gsSPVertex(luigi_right_hand_open_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 3, 1, 0),
	Gbi.gsSP1Triangle(4, 3, 0, 0),
	Gbi.gsSP1Triangle(4, 0, 5, 0),
	Gbi.gsSP1Triangle(5, 0, 2, 0),
	Gbi.gsSP1Triangle(5, 2, 6, 0),
	Gbi.gsSP1Triangle(6, 2, 7, 0),
	Gbi.gsSP1Triangle(7, 2, 8, 0),
	Gbi.gsSP1Triangle(8, 2, 1, 0),
	Gbi.gsSP1Triangle(1, 9, 8, 0),
	Gbi.gsSP1Triangle(1, 3, 9, 0),
	Gbi.gsSP1Triangle(10, 9, 3, 0),
	Gbi.gsSP1Triangle(10, 3, 4, 0),
	Gbi.gsSP1Triangle(11, 10, 4, 0),
	Gbi.gsSP1Triangle(11, 4, 12, 0),
	Gbi.gsSP1Triangle(12, 4, 13, 0),
	Gbi.gsSP1Triangle(4, 5, 13, 0),
	Gbi.gsSP1Triangle(13, 5, 14, 0),
	Gbi.gsSP1Triangle(5, 6, 14, 0),
	Gbi.gsSP1Triangle(6, 7, 14, 0),
	Gbi.gsSP1Triangle(7, 15, 14, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(17, 16, 19, 0),
	Gbi.gsSP1Triangle(20, 19, 16, 0),
	Gbi.gsSP1Triangle(19, 20, 21, 0),
	Gbi.gsSP1Triangle(20, 22, 21, 0),
	Gbi.gsSP1Triangle(22, 20, 23, 0),
	Gbi.gsSP1Triangle(19, 21, 24, 0),
	Gbi.gsSP1Triangle(21, 25, 24, 0),
	Gbi.gsSP1Triangle(26, 25, 21, 0),
	Gbi.gsSP1Triangle(21, 27, 26, 0),
	Gbi.gsSP1Triangle(27, 28, 26, 0),
	Gbi.gsSP1Triangle(29, 28, 27, 0),
	Gbi.gsSP1Triangle(30, 28, 29, 0),
	Gbi.gsSP1Triangle(30, 18, 28, 0),
	Gbi.gsSP1Triangle(28, 18, 31, 0),
	Gbi.gsSP1Triangle(32, 33, 34, 0),
	Gbi.gsSP1Triangle(32, 35, 33, 0),
	Gbi.gsSP1Triangle(36, 33, 35, 0),
	Gbi.gsSP1Triangle(35, 37, 36, 0),
	Gbi.gsSP1Triangle(38, 33, 36, 0),
	Gbi.gsSP1Triangle(34, 33, 38, 0),
	Gbi.gsSP1Triangle(38, 39, 34, 0),
	Gbi.gsSP1Triangle(38, 40, 39, 0),
	Gbi.gsSP1Triangle(38, 41, 40, 0),
	Gbi.gsSP1Triangle(42, 41, 38, 0),
	Gbi.gsSP1Triangle(43, 42, 38, 0),
	Gbi.gsSP1Triangle(36, 43, 38, 0),
	Gbi.gsSP1Triangle(44, 43, 36, 0),
	Gbi.gsSP1Triangle(36, 45, 44, 0),
	Gbi.gsSP1Triangle(44, 45, 46, 0),
	Gbi.gsSP1Triangle(46, 47, 44, 0),
	Gbi.gsSP1Triangle(39, 47, 46, 0),
	Gbi.gsSP1Triangle(46, 34, 39, 0),
	Gbi.gsSP1Triangle(48, 49, 50, 0),
	Gbi.gsSP1Triangle(51, 52, 53, 0),
	Gbi.gsSP1Triangle(51, 54, 52, 0),
	Gbi.gsSP1Triangle(55, 52, 54, 0),
	Gbi.gsSP1Triangle(54, 56, 55, 0),
	Gbi.gsSP1Triangle(56, 57, 55, 0),
	Gbi.gsSP1Triangle(58, 55, 57, 0),
	Gbi.gsSP1Triangle(58, 57, 59, 0),
	Gbi.gsSP1Triangle(52, 55, 58, 0),
	Gbi.gsSP1Triangle(53, 52, 58, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_right_hand_open = (customData) => {
	return [
	Gbi.gsSPLight(mario_white_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_white_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_right_hand_open_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_metal_right_hand_open = [
	Gbi.gsSPDisplayList(luigi_right_hand_open_dl),
	Gbi.gsSPClearGeometryMode(Gbi.G_TEXTURE_GEN),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADE),
	Gbi.gsSPTexture(0x0F80, 0x07C0, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsSPEndDisplayList(),
]

const luigi_right_hand_cap_l_logo_dl_vertex = [
	{ pos: [ 109, -16, -35 ], flag: 0, tc: [ 466, -5 ], color: [ 218, 13, 135, 255 ] },
	{ pos: [ 75, 6, 34 ], flag: 0, tc: [ 735, 920 ], color: [ 216, 70, 158, 255 ] },
	{ pos: [ 117, 30, -6 ], flag: 0, tc: [ 1085, 268 ], color: [ 225, 95, 177, 255 ] },
	{ pos: [ 70, -39, 31 ], flag: 0, tc: [ 161, 905 ], color: [ 200, 215, 149, 255 ] },
	{ pos: [ 104, -66, -13 ], flag: 0, tc: [ -162, 239 ], color: [ 202, 186, 165, 255 ] },
]

const luigi_right_hand_cap_hand_position_dl_vertex = [
	{ pos: [ 29, 10, -37 ], flag: 0, tc: [ 0, 0 ], color: [ 232, 246, 132, 255 ] },
	{ pos: [ 47, -36, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 7, 140, 205, 255 ] },
	{ pos: [ 26, -32, -6 ], flag: 0, tc: [ 0, 0 ], color: [ 58, 153, 209, 255 ] },
	{ pos: [ 89, -20, -4 ], flag: 0, tc: [ 0, 0 ], color: [ 101, 191, 215, 255 ] },
	{ pos: [ 73, 29, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 68, 29, 152, 255 ] },
	{ pos: [ 49, 73, -5 ], flag: 0, tc: [ 0, 0 ], color: [ 23, 122, 228, 255 ] },
	{ pos: [ 7, 55, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 176, 89, 212, 255 ] },
	{ pos: [ -3, 38, -6 ], flag: 0, tc: [ 0, 0 ], color: [ 216, 111, 209, 255 ] },
	{ pos: [ 12, 2, -25 ], flag: 0, tc: [ 0, 0 ], color: [ 13, 255, 130, 255 ] },
	{ pos: [ 2, 0, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 240, 252, 130, 255 ] },
	{ pos: [ 20, -47, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 28, 137, 220, 255 ] },
	{ pos: [ 10, -31, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 251, 176, 98, 255 ] },
	{ pos: [ 19, -20, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 14, 191, 108, 255 ] },
	{ pos: [ 64, -26, 52 ], flag: 0, tc: [ 0, 0 ], color: [ 25, 178, 97, 255 ] },
	{ pos: [ 82, -4, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 103, 251, 74, 255 ] },
	{ pos: [ 83, 36, 16 ], flag: 0, tc: [ 0, 0 ], color: [ 108, 61, 28, 255 ] },
	{ pos: [ 46, 49, 33 ], flag: 0, tc: [ 0, 0 ], color: [ 22, 81, 95, 255 ] },
	{ pos: [ 83, 36, 16 ], flag: 0, tc: [ 0, 0 ], color: [ 108, 61, 28, 255 ] },
	{ pos: [ 49, 73, -5 ], flag: 0, tc: [ 0, 0 ], color: [ 23, 122, 228, 255 ] },
	{ pos: [ 24, 56, 25 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 89, 77, 255 ] },
	{ pos: [ 7, 55, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 176, 89, 212, 255 ] },
	{ pos: [ 0, 23, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 245, 61, 111, 255 ] },
	{ pos: [ -3, 38, -6 ], flag: 0, tc: [ 0, 0 ], color: [ 216, 111, 209, 255 ] },
	{ pos: [ -13, 25, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 198, 53, 100, 255 ] },
	{ pos: [ -18, 43, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 188, 102, 221, 255 ] },
	{ pos: [ 2, 0, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 240, 252, 130, 255 ] },
	{ pos: [ 12, 2, -25 ], flag: 0, tc: [ 0, 0 ], color: [ 13, 255, 130, 255 ] },
	{ pos: [ -15, -8, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 139, 208, 246, 255 ] },
	{ pos: [ 20, -47, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 28, 137, 220, 255 ] },
	{ pos: [ 10, -31, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 251, 176, 98, 255 ] },
	{ pos: [ 19, -20, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 14, 191, 108, 255 ] },
	{ pos: [ 24, 8, 38 ], flag: 0, tc: [ 0, 0 ], color: [ 192, 250, 110, 255 ] },
	{ pos: [ 64, -26, 52 ], flag: 0, tc: [ 0, 0 ], color: [ 25, 178, 97, 255 ] },
	{ pos: [ 24, 8, 38 ], flag: 0, tc: [ 0, 0 ], color: [ 192, 250, 110, 255 ] },
	{ pos: [ 19, -20, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 14, 191, 108, 255 ] },
	{ pos: [ 48, 11, 52 ], flag: 0, tc: [ 0, 0 ], color: [ 244, 20, 125, 255 ] },
	{ pos: [ 82, -4, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 103, 251, 74, 255 ] },
	{ pos: [ 73, 16, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 67, 46, 98, 255 ] },
	{ pos: [ 83, 36, 16 ], flag: 0, tc: [ 0, 0 ], color: [ 108, 61, 28, 255 ] },
	{ pos: [ 46, 49, 33 ], flag: 0, tc: [ 0, 0 ], color: [ 22, 81, 95, 255 ] },
	{ pos: [ 24, 56, 25 ], flag: 0, tc: [ 0, 0 ], color: [ 208, 89, 77, 255 ] },
	{ pos: [ 0, 23, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 245, 61, 111, 255 ] },
	{ pos: [ -18, 43, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 188, 102, 221, 255 ] },
	{ pos: [ -15, -8, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 139, 208, 246, 255 ] },
	{ pos: [ -13, 25, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 198, 53, 100, 255 ] },
]

const luigi_right_hand_cap_top_dl_vertex = [
	{ pos: [ 75, 6, 34 ], flag: 0, tc: [ 0, 0 ], color: [ 216, 70, 158, 255 ] },
	{ pos: [ 110, 41, 86 ], flag: 0, tc: [ 0, 0 ], color: [ 164, 76, 43, 255 ] },
	{ pos: [ 117, 30, -6 ], flag: 0, tc: [ 0, 0 ], color: [ 225, 95, 177, 255 ] },
	{ pos: [ 43, 34, 43 ], flag: 0, tc: [ 0, 0 ], color: [ 183, 104, 3, 255 ] },
	{ pos: [ 15, -9, 24 ], flag: 0, tc: [ 0, 0 ], color: [ 136, 16, 216, 255 ] },
	{ pos: [ 70, -39, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 200, 215, 149, 255 ] },
	{ pos: [ 32, -59, 36 ], flag: 0, tc: [ 0, 0 ], color: [ 159, 174, 246, 255 ] },
	{ pos: [ 93, -91, 75 ], flag: 0, tc: [ 0, 0 ], color: [ 151, 188, 23, 255 ] },
	{ pos: [ 104, -66, -13 ], flag: 0, tc: [ 0, 0 ], color: [ 202, 186, 165, 255 ] },
	{ pos: [ 129, -128, 54 ], flag: 0, tc: [ 0, 0 ], color: [ 242, 135, 220, 255 ] },
	{ pos: [ 164, -54, -10 ], flag: 0, tc: [ 0, 0 ], color: [ 78, 210, 166, 255 ] },
	{ pos: [ 109, -16, -35 ], flag: 0, tc: [ 0, 0 ], color: [ 218, 13, 135, 255 ] },
	{ pos: [ 170, 3, -6 ], flag: 0, tc: [ 0, 0 ], color: [ 88, 39, 173, 255 ] },
	{ pos: [ 155, 72, 69 ], flag: 0, tc: [ 0, 0 ], color: [ 17, 125, 238, 255 ] },
	{ pos: [ 134, 41, 121 ], flag: 0, tc: [ 0, 0 ], color: [ 169, 67, 64, 255 ] },
	{ pos: [ 171, 57, 128 ], flag: 0, tc: [ 0, 0 ], color: [ 26, 116, 46, 255 ] },
	{ pos: [ 171, 57, 128 ], flag: 0, tc: [ 0, 0 ], color: [ 26, 116, 46, 255 ] },
	{ pos: [ 134, 41, 121 ], flag: 0, tc: [ 0, 0 ], color: [ 169, 67, 64, 255 ] },
	{ pos: [ 154, 24, 159 ], flag: 0, tc: [ 0, 0 ], color: [ 186, 57, 89, 255 ] },
	{ pos: [ 181, -6, 191 ], flag: 0, tc: [ 0, 0 ], color: [ 245, 37, 121, 255 ] },
	{ pos: [ 238, -13, 165 ], flag: 0, tc: [ 0, 0 ], color: [ 116, 29, 44, 255 ] },
	{ pos: [ 229, -82, 160 ], flag: 0, tc: [ 0, 0 ], color: [ 104, 193, 37, 255 ] },
	{ pos: [ 172, -79, 186 ], flag: 0, tc: [ 0, 0 ], color: [ 234, 206, 115, 255 ] },
	{ pos: [ 149, -127, 114 ], flag: 0, tc: [ 0, 0 ], color: [ 253, 132, 25, 255 ] },
	{ pos: [ 139, -96, 150 ], flag: 0, tc: [ 0, 0 ], color: [ 171, 204, 79, 255 ] },
	{ pos: [ 117, -100, 110 ], flag: 0, tc: [ 0, 0 ], color: [ 156, 203, 58, 255 ] },
	{ pos: [ 129, -128, 54 ], flag: 0, tc: [ 0, 0 ], color: [ 242, 135, 220, 255 ] },
	{ pos: [ 93, -91, 75 ], flag: 0, tc: [ 0, 0 ], color: [ 151, 188, 23, 255 ] },
	{ pos: [ 195, -91, 98 ], flag: 0, tc: [ 0, 0 ], color: [ 100, 191, 214, 255 ] },
	{ pos: [ 208, 14, 106 ], flag: 0, tc: [ 0, 0 ], color: [ 114, 45, 223, 255 ] },
	{ pos: [ 164, -54, -10 ], flag: 0, tc: [ 0, 0 ], color: [ 78, 210, 166, 255 ] },
	{ pos: [ 170, 3, -6 ], flag: 0, tc: [ 0, 0 ], color: [ 88, 39, 173, 255 ] },
	{ pos: [ 155, 72, 69 ], flag: 0, tc: [ 0, 0 ], color: [ 17, 125, 238, 255 ] },
	{ pos: [ 208, 14, 106 ], flag: 0, tc: [ 0, 0 ], color: [ 114, 45, 223, 255 ] },
	{ pos: [ 170, 3, -6 ], flag: 0, tc: [ 0, 0 ], color: [ 88, 39, 173, 255 ] },
	{ pos: [ 171, 57, 128 ], flag: 0, tc: [ 0, 0 ], color: [ 26, 116, 46, 255 ] },
	{ pos: [ 238, -13, 165 ], flag: 0, tc: [ 0, 0 ], color: [ 116, 29, 44, 255 ] },
	{ pos: [ 32, -59, 36 ], flag: 0, tc: [ 0, 0 ], color: [ 159, 174, 246, 255 ] },
	{ pos: [ 93, -91, 75 ], flag: 0, tc: [ 0, 0 ], color: [ 151, 188, 23, 255 ] },
	{ pos: [ 62, -39, 46 ], flag: 0, tc: [ 0, 0 ], color: [ 185, 9, 105, 255 ] },
	{ pos: [ 15, -9, 24 ], flag: 0, tc: [ 0, 0 ], color: [ 136, 16, 216, 255 ] },
	{ pos: [ 68, 6, 50 ], flag: 0, tc: [ 0, 0 ], color: [ 185, 248, 105, 255 ] },
	{ pos: [ 43, 34, 43 ], flag: 0, tc: [ 0, 0 ], color: [ 183, 104, 3, 255 ] },
	{ pos: [ 110, 41, 86 ], flag: 0, tc: [ 0, 0 ], color: [ 164, 76, 43, 255 ] },
]

const luigi_right_hand_cap_bottom_dl_vertex = [
	{ pos: [ 62, -39, 46 ], flag: 0, tc: [ 0, 0 ], color: [ 185, 9, 105, 255 ] },
	{ pos: [ 93, -91, 75 ], flag: 0, tc: [ 0, 0 ], color: [ 151, 188, 23, 255 ] },
	{ pos: [ 117, -100, 110 ], flag: 0, tc: [ 0, 0 ], color: [ 156, 203, 58, 255 ] },
	{ pos: [ 68, 6, 50 ], flag: 0, tc: [ 0, 0 ], color: [ 185, 248, 105, 255 ] },
	{ pos: [ 110, 41, 86 ], flag: 0, tc: [ 0, 0 ], color: [ 164, 76, 43, 255 ] },
	{ pos: [ 134, 41, 121 ], flag: 0, tc: [ 0, 0 ], color: [ 169, 67, 64, 255 ] },
	{ pos: [ 154, 24, 159 ], flag: 0, tc: [ 0, 0 ], color: [ 186, 57, 89, 255 ] },
	{ pos: [ 139, -96, 150 ], flag: 0, tc: [ 0, 0 ], color: [ 171, 204, 79, 255 ] },
	{ pos: [ 172, -79, 186 ], flag: 0, tc: [ 0, 0 ], color: [ 234, 206, 115, 255 ] },
	{ pos: [ 181, -6, 191 ], flag: 0, tc: [ 0, 0 ], color: [ 245, 37, 121, 255 ] },
]

export const luigi_right_hand_cap_l_logo_dl = [
	Gbi.gsSPVertex(luigi_right_hand_cap_l_logo_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 0, 0),
	Gbi.gsSP1Triangle(4, 3, 0, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_right_hand_cap_top_dl = [
	Gbi.gsSPVertex(luigi_right_hand_cap_top_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 1, 0, 0),
	Gbi.gsSP1Triangle(4, 3, 0, 0),
	Gbi.gsSP1Triangle(4, 0, 5, 0),
	Gbi.gsSP1Triangle(4, 5, 6, 0),
	Gbi.gsSP1Triangle(7, 6, 5, 0),
	Gbi.gsSP1Triangle(7, 5, 8, 0),
	Gbi.gsSP1Triangle(9, 7, 8, 0),
	Gbi.gsSP1Triangle(8, 10, 9, 0),
	Gbi.gsSP1Triangle(10, 8, 11, 0),
	Gbi.gsSP1Triangle(11, 12, 10, 0),
	Gbi.gsSP1Triangle(11, 2, 12, 0),
	Gbi.gsSP1Triangle(13, 12, 2, 0),
	Gbi.gsSP1Triangle(2, 1, 13, 0),
	Gbi.gsSP1Triangle(1, 14, 13, 0),
	Gbi.gsSP1Triangle(15, 13, 14, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(18, 19, 16, 0),
	Gbi.gsSP1Triangle(16, 19, 20, 0),
	Gbi.gsSP1Triangle(20, 19, 21, 0),
	Gbi.gsSP1Triangle(21, 19, 22, 0),
	Gbi.gsSP1Triangle(22, 23, 21, 0),
	Gbi.gsSP1Triangle(22, 24, 23, 0),
	Gbi.gsSP1Triangle(23, 24, 25, 0),
	Gbi.gsSP1Triangle(23, 25, 26, 0),
	Gbi.gsSP1Triangle(25, 27, 26, 0),
	Gbi.gsSP1Triangle(28, 23, 26, 0),
	Gbi.gsSP1Triangle(21, 23, 28, 0),
	Gbi.gsSP1Triangle(21, 28, 20, 0),
	Gbi.gsSP1Triangle(29, 20, 28, 0),
	Gbi.gsSP1Triangle(30, 29, 28, 0),
	Gbi.gsSP1Triangle(26, 30, 28, 0),
	Gbi.gsSP1Triangle(31, 29, 30, 0),
	Gbi.gsSP1Triangle(32, 33, 34, 0),
	Gbi.gsSP1Triangle(33, 32, 35, 0),
	Gbi.gsSP1Triangle(36, 33, 35, 0),
	Gbi.gsSP1Triangle(37, 38, 39, 0),
	Gbi.gsSP1Triangle(40, 37, 39, 0),
	Gbi.gsSP1Triangle(41, 40, 39, 0),
	Gbi.gsSP1Triangle(40, 41, 42, 0),
	Gbi.gsSP1Triangle(42, 41, 43, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_right_hand_cap_hand_position_dl = [
	Gbi.gsSPVertex(luigi_right_hand_cap_hand_position_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 3, 1, 0),
	Gbi.gsSP1Triangle(0, 4, 3, 0),
	Gbi.gsSP1Triangle(5, 4, 0, 0),
	Gbi.gsSP1Triangle(6, 5, 0, 0),
	Gbi.gsSP1Triangle(6, 0, 7, 0),
	Gbi.gsSP1Triangle(0, 8, 7, 0),
	Gbi.gsSP1Triangle(2, 8, 0, 0),
	Gbi.gsSP1Triangle(9, 8, 2, 0),
	Gbi.gsSP1Triangle(2, 10, 9, 0),
	Gbi.gsSP1Triangle(11, 10, 2, 0),
	Gbi.gsSP1Triangle(2, 12, 11, 0),
	Gbi.gsSP1Triangle(12, 2, 1, 0),
	Gbi.gsSP1Triangle(1, 13, 12, 0),
	Gbi.gsSP1Triangle(1, 3, 13, 0),
	Gbi.gsSP1Triangle(3, 14, 13, 0),
	Gbi.gsSP1Triangle(3, 15, 14, 0),
	Gbi.gsSP1Triangle(4, 15, 3, 0),
	Gbi.gsSP1Triangle(5, 15, 4, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(19, 16, 18, 0),
	Gbi.gsSP1Triangle(18, 20, 19, 0),
	Gbi.gsSP1Triangle(19, 20, 21, 0),
	Gbi.gsSP1Triangle(20, 22, 21, 0),
	Gbi.gsSP1Triangle(23, 21, 22, 0),
	Gbi.gsSP1Triangle(22, 24, 23, 0),
	Gbi.gsSP1Triangle(25, 24, 22, 0),
	Gbi.gsSP1Triangle(22, 26, 25, 0),
	Gbi.gsSP1Triangle(25, 27, 24, 0),
	Gbi.gsSP1Triangle(28, 27, 25, 0),
	Gbi.gsSP1Triangle(29, 27, 28, 0),
	Gbi.gsSP1Triangle(23, 27, 29, 0),
	Gbi.gsSP1Triangle(23, 29, 30, 0),
	Gbi.gsSP1Triangle(30, 21, 23, 0),
	Gbi.gsSP1Triangle(31, 21, 30, 0),
	Gbi.gsSP1Triangle(32, 33, 34, 0),
	Gbi.gsSP1Triangle(32, 35, 33, 0),
	Gbi.gsSP1Triangle(32, 36, 35, 0),
	Gbi.gsSP1Triangle(36, 37, 35, 0),
	Gbi.gsSP1Triangle(36, 38, 37, 0),
	Gbi.gsSP1Triangle(38, 39, 37, 0),
	Gbi.gsSP1Triangle(37, 39, 35, 0),
	Gbi.gsSP1Triangle(39, 40, 35, 0),
	Gbi.gsSP1Triangle(40, 33, 35, 0),
	Gbi.gsSP1Triangle(41, 33, 40, 0),
	Gbi.gsSP1Triangle(42, 43, 44, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_right_hand_cap_bottom_dl = [
	Gbi.gsSPVertex(luigi_right_hand_cap_bottom_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(3, 0, 2, 0),
	Gbi.gsSP1Triangle(4, 3, 2, 0),
	Gbi.gsSP1Triangle(5, 4, 2, 0),
	Gbi.gsSP1Triangle(6, 5, 2, 0),
	Gbi.gsSP1Triangle(6, 2, 7, 0),
	Gbi.gsSP1Triangle(6, 7, 8, 0),
	Gbi.gsSP1Triangle(8, 9, 6, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_right_hand_cap_dl = (customData) => {
	return [
	Gbi.gsSPDisplayList(luigi_right_hand_cap_top_dl),
	Gbi.gsSPLight(mario_white_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_white_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_right_hand_cap_hand_position_dl),
	Gbi.gsSPLight(mario_hat_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_hat_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_right_hand_cap_bottom_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_right_hand_cap_wings_half_1_dl_vertex = [
	{ pos: [ 325, 111, 12 ], flag: 0, tc: [ 990, 0 ], color: [ 190, 101, 218, 255 ] },
	{ pos: [ 143, 14, 59 ], flag: 0, tc: [ 0, 2012 ], color: [ 190, 101, 218, 255 ] },
	{ pos: [ 181, 67, 128 ], flag: 0, tc: [ 990, 2012 ], color: [ 190, 101, 218, 255 ] },
	{ pos: [ 287, 59, -56 ], flag: 0, tc: [ 0, 0 ], color: [ 190, 101, 218, 255 ] },
	{ pos: [ 156, -133, 117 ], flag: 0, tc: [ 990, 2012 ], color: [ 168, 180, 207, 255 ] },
	{ pos: [ 134, -65, 55 ], flag: 0, tc: [ 0, 2012 ], color: [ 168, 180, 207, 255 ] },
	{ pos: [ 288, -196, -4 ], flag: 0, tc: [ 990, 0 ], color: [ 168, 180, 207, 255 ] },
	{ pos: [ 264, -128, -65 ], flag: 0, tc: [ 0, 0 ], color: [ 168, 180, 207, 255 ] },
]

const luigi_right_hand_cap_wings_half_2_dl_vertex = [
	{ pos: [ 363, 165, 81 ], flag: 0, tc: [ 990, 0 ], color: [ 190, 101, 218, 255 ] },
	{ pos: [ 181, 67, 128 ], flag: 0, tc: [ 0, 2012 ], color: [ 190, 101, 218, 255 ] },
	{ pos: [ 219, 121, 196 ], flag: 0, tc: [ 990, 2012 ], color: [ 190, 101, 218, 255 ] },
	{ pos: [ 325, 111, 12 ], flag: 0, tc: [ 0, 0 ], color: [ 190, 101, 218, 255 ] },
	{ pos: [ 156, -133, 117 ], flag: 0, tc: [ 0, 2012 ], color: [ 168, 180, 207, 255 ] },
	{ pos: [ 288, -196, -4 ], flag: 0, tc: [ 0, 0 ], color: [ 168, 180, 207, 255 ] },
	{ pos: [ 312, -265, 57 ], flag: 0, tc: [ 990, 0 ], color: [ 168, 180, 207, 255 ] },
	{ pos: [ 180, -201, 178 ], flag: 0, tc: [ 990, 2012 ], color: [ 168, 180, 207, 255 ] },
]

export const luigi_right_hand_cap_wings_half_1_dl = [
	Gbi.gsSPVertex(luigi_right_hand_cap_wings_half_1_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 3, 1, 0),
	Gbi.gsSP1Triangle(4, 5, 6, 0),
	Gbi.gsSP1Triangle(5, 7, 6, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_right_hand_cap_wings_half_2_dl = [
	Gbi.gsSPVertex(luigi_right_hand_cap_wings_half_2_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 3, 1, 0),
	Gbi.gsSP1Triangle(4, 5, 6, 0),
	Gbi.gsSP1Triangle(7, 4, 6, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_right_hand_cap_wings_intial_dl = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_MODULATERGBFADEA),
	Gbi.gsSPClearGeometryMode(Gbi.G_CULL_BACK | Gbi.G_SHADING_SMOOTH),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsSPLight(mario_white_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_white_lights_group(customData).a, 2),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 6, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (64 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_right_hand_cap_wings_end_dl = [
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsSPSetGeometryMode(Gbi.G_CULL_BACK | Gbi.G_SHADING_SMOOTH),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_right_hand_cap = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_BLENDRGBFADEA),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_l_logo),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 32 - 1),
	Gbi.gsSPDisplayList(luigi_right_hand_cap_l_logo_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPDisplayList(luigi_right_hand_cap_dl(customData)),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_right_hand_cap_wings = (customData) => {
	return [
	Gbi.gsSPDisplayList(luigi_right_hand_cap_wings_intial_dl(customData)),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_wings_half_1),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 64 - 1),
	Gbi.gsSPDisplayList(luigi_right_hand_cap_wings_half_1_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_wings_half_2),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 64 - 1),
	Gbi.gsSPDisplayList(luigi_right_hand_cap_wings_half_2_dl),
	Gbi.gsSPDisplayList(luigi_right_hand_cap_wings_end_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_metal_right_hand_cap_shared_dl = [
	Gbi.gsSPDisplayList(luigi_right_hand_cap_l_logo_dl),
	Gbi.gsSPDisplayList(luigi_right_hand_cap_top_dl),
	Gbi.gsSPDisplayList(luigi_right_hand_cap_hand_position_dl),
	Gbi.gsSPDisplayList(luigi_right_hand_cap_bottom_dl),
	Gbi.gsSPClearGeometryMode(Gbi.G_TEXTURE_GEN),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADE),
	Gbi.gsSPTexture(0x0F80, 0x07C0, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_metal_right_hand_cap_shared_dl_wings = (customData) => {
	return [
	Gbi.gsSPDisplayList(luigi_right_hand_cap_wings_intial_dl(customData)),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_metal_wings_half_1),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 64 - 1),
	Gbi.gsSPDisplayList(luigi_right_hand_cap_wings_half_1_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_metal_wings_half_2),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 64 - 1),
	Gbi.gsSPDisplayList(luigi_right_hand_cap_wings_half_2_dl),
	Gbi.gsSPDisplayList(luigi_right_hand_cap_wings_end_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_right_hand_peace_shared_dl_vertex = [
	{ pos: [ 90, 17, -2 ], flag: 0, tc: [ 0, 0 ], color: [ 9, 125, 18, 255 ] },
	{ pos: [ 84, 11, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 9, 122, 35, 255 ] },
	{ pos: [ 132, 9, 16 ], flag: 0, tc: [ 0, 0 ], color: [ 12, 123, 30, 255 ] },
	{ pos: [ 140, 15, -14 ], flag: 0, tc: [ 0, 0 ], color: [ 11, 125, 19, 255 ] },
	{ pos: [ 76, 18, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 6, 127, 0, 255 ] },
	{ pos: [ 143, -9, -20 ], flag: 0, tc: [ 0, 0 ], color: [ 122, 9, 34, 255 ] },
	{ pos: [ 140, 15, -14 ], flag: 0, tc: [ 0, 0 ], color: [ 122, 10, 33, 255 ] },
	{ pos: [ 132, 9, 16 ], flag: 0, tc: [ 0, 0 ], color: [ 122, 8, 35, 255 ] },
	{ pos: [ 133, -11, 13 ], flag: 0, tc: [ 0, 0 ], color: [ 122, 6, 35, 255 ] },
	{ pos: [ 87, -23, 8 ], flag: 0, tc: [ 0, 0 ], color: [ 4, 220, 122, 255 ] },
	{ pos: [ 132, 9, 16 ], flag: 0, tc: [ 0, 0 ], color: [ 254, 228, 124, 255 ] },
	{ pos: [ 84, 11, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 8, 214, 120, 255 ] },
	{ pos: [ 133, -11, 13 ], flag: 0, tc: [ 0, 0 ], color: [ 247, 238, 125, 255 ] },
	{ pos: [ 76, 18, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 7, 10, 130, 255 ] },
	{ pos: [ 140, 15, -14 ], flag: 0, tc: [ 0, 0 ], color: [ 38, 31, 139, 255 ] },
	{ pos: [ 143, -9, -20 ], flag: 0, tc: [ 0, 0 ], color: [ 30, 6, 133, 255 ] },
	{ pos: [ 143, -9, -20 ], flag: 0, tc: [ 0, 0 ], color: [ 30, 6, 133, 255 ] },
	{ pos: [ 80, -17, -21 ], flag: 0, tc: [ 0, 0 ], color: [ 26, 168, 168, 255 ] },
	{ pos: [ 76, 18, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 7, 10, 130, 255 ] },
	{ pos: [ 27, 9, -37 ], flag: 0, tc: [ 0, 0 ], color: [ 223, 250, 133, 255 ] },
	{ pos: [ 47, -38, -9 ], flag: 0, tc: [ 0, 0 ], color: [ 3, 138, 209, 255 ] },
	{ pos: [ 87, -23, 8 ], flag: 0, tc: [ 0, 0 ], color: [ 71, 151, 251, 255 ] },
	{ pos: [ 133, -11, 13 ], flag: 0, tc: [ 0, 0 ], color: [ 21, 131, 246, 255 ] },
	{ pos: [ 143, -9, -20 ], flag: 0, tc: [ 0, 0 ], color: [ 15, 130, 254, 255 ] },
	{ pos: [ 75, -27, 29 ], flag: 0, tc: [ 0, 0 ], color: [ 61, 166, 65, 255 ] },
	{ pos: [ 77, 0, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 72, 2, 105, 255 ] },
	{ pos: [ 84, 11, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 95, 26, 81, 255 ] },
	{ pos: [ 72, 44, 16 ], flag: 0, tc: [ 0, 0 ], color: [ 46, 64, 100, 255 ] },
	{ pos: [ 120, 49, 17 ], flag: 0, tc: [ 0, 0 ], color: [ 252, 19, 126, 255 ] },
	{ pos: [ 106, 65, 13 ], flag: 0, tc: [ 0, 0 ], color: [ 252, 22, 125, 255 ] },
	{ pos: [ 39, 45, 34 ], flag: 0, tc: [ 0, 0 ], color: [ 247, 72, 104, 255 ] },
	{ pos: [ 47, 72, -4 ], flag: 0, tc: [ 0, 0 ], color: [ 6, 125, 237, 255 ] },
	{ pos: [ 47, 72, -4 ], flag: 0, tc: [ 0, 0 ], color: [ 6, 125, 237, 255 ] },
	{ pos: [ 72, 44, 16 ], flag: 0, tc: [ 0, 0 ], color: [ 46, 64, 100, 255 ] },
	{ pos: [ 72, 55, -11 ], flag: 0, tc: [ 0, 0 ], color: [ 24, 93, 172, 255 ] },
	{ pos: [ 76, 18, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 7, 10, 130, 255 ] },
	{ pos: [ 108, 76, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 6, 51, 140, 255 ] },
	{ pos: [ 126, 54, -12 ], flag: 0, tc: [ 0, 0 ], color: [ 23, 42, 138, 255 ] },
	{ pos: [ 27, 9, -37 ], flag: 0, tc: [ 0, 0 ], color: [ 223, 250, 133, 255 ] },
	{ pos: [ 6, 53, -7 ], flag: 0, tc: [ 0, 0 ], color: [ 175, 93, 226, 255 ] },
	{ pos: [ -5, 36, -5 ], flag: 0, tc: [ 0, 0 ], color: [ 217, 115, 217, 255 ] },
	{ pos: [ 11, 2, -24 ], flag: 0, tc: [ 0, 0 ], color: [ 3, 4, 129, 255 ] },
	{ pos: [ 27, -35, -5 ], flag: 0, tc: [ 0, 0 ], color: [ 51, 148, 212, 255 ] },
	{ pos: [ 47, -38, -9 ], flag: 0, tc: [ 0, 0 ], color: [ 3, 138, 209, 255 ] },
	{ pos: [ 38, -23, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 231, 188, 105, 255 ] },
	{ pos: [ 75, -27, 29 ], flag: 0, tc: [ 0, 0 ], color: [ 61, 166, 65, 255 ] },
	{ pos: [ 77, 0, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 72, 2, 105, 255 ] },
	{ pos: [ 39, 45, 34 ], flag: 0, tc: [ 0, 0 ], color: [ 247, 72, 104, 255 ] },
	{ pos: [ 38, -23, 40 ], flag: 0, tc: [ 0, 0 ], color: [ 231, 188, 105, 255 ] },
	{ pos: [ 39, 45, 34 ], flag: 0, tc: [ 0, 0 ], color: [ 247, 72, 104, 255 ] },
	{ pos: [ 14, 29, 31 ], flag: 0, tc: [ 0, 0 ], color: [ 201, 45, 105, 255 ] },
	{ pos: [ 6, 53, -7 ], flag: 0, tc: [ 0, 0 ], color: [ 175, 93, 226, 255 ] },
	{ pos: [ 47, 72, -4 ], flag: 0, tc: [ 0, 0 ], color: [ 6, 125, 237, 255 ] },
	{ pos: [ -5, 36, -5 ], flag: 0, tc: [ 0, 0 ], color: [ 217, 115, 217, 255 ] },
	{ pos: [ -1, 21, 27 ], flag: 0, tc: [ 0, 0 ], color: [ 5, 68, 107, 255 ] },
	{ pos: [ -14, 22, 32 ], flag: 0, tc: [ 0, 0 ], color: [ 212, 59, 104, 255 ] },
	{ pos: [ -20, 40, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 195, 105, 218, 255 ] },
	{ pos: [ 11, 2, -24 ], flag: 0, tc: [ 0, 0 ], color: [ 3, 4, 129, 255 ] },
	{ pos: [ 0, -2, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 250, 2, 129, 255 ] },
	{ pos: [ 27, -35, -5 ], flag: 0, tc: [ 0, 0 ], color: [ 51, 148, 212, 255 ] },
	{ pos: [ 20, -49, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 38, 141, 219, 255 ] },
	{ pos: [ 19, -23, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 22, 197, 110, 255 ] },
	{ pos: [ 12, -31, 32 ], flag: 0, tc: [ 0, 0 ], color: [ 18, 186, 104, 255 ] },
	{ pos: [ -1, -28, 23 ], flag: 0, tc: [ 0, 0 ], color: [ 163, 184, 49, 255 ] },
	{ pos: [ -14, 22, 32 ], flag: 0, tc: [ 0, 0 ], color: [ 212, 59, 104, 255 ] },
	{ pos: [ -20, 10, 24 ], flag: 0, tc: [ 0, 0 ], color: [ 141, 231, 47, 255 ] },
	{ pos: [ -1, -28, 23 ], flag: 0, tc: [ 0, 0 ], color: [ 163, 184, 49, 255 ] },
	{ pos: [ -20, 40, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 195, 105, 218, 255 ] },
	{ pos: [ -23, 23, -5 ], flag: 0, tc: [ 0, 0 ], color: [ 132, 251, 229, 255 ] },
	{ pos: [ 0, -2, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 250, 2, 129, 255 ] },
	{ pos: [ -8, -8, -22 ], flag: 0, tc: [ 0, 0 ], color: [ 155, 208, 196, 255 ] },
	{ pos: [ 20, -49, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 38, 141, 219, 255 ] },
	{ pos: [ 4, -40, -5 ], flag: 0, tc: [ 0, 0 ], color: [ 171, 165, 230, 255 ] },
	{ pos: [ 12, -31, 32 ], flag: 0, tc: [ 0, 0 ], color: [ 18, 186, 104, 255 ] },
	{ pos: [ 19, -23, 26 ], flag: 0, tc: [ 0, 0 ], color: [ 22, 197, 110, 255 ] },
	{ pos: [ 72, 55, -11 ], flag: 0, tc: [ 0, 0 ], color: [ 193, 103, 40, 255 ] },
	{ pos: [ 72, 44, 16 ], flag: 0, tc: [ 0, 0 ], color: [ 194, 103, 41, 255 ] },
	{ pos: [ 108, 76, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 195, 103, 42, 255 ] },
	{ pos: [ 106, 65, 13 ], flag: 0, tc: [ 0, 0 ], color: [ 196, 103, 44, 255 ] },
	{ pos: [ 126, 54, -12 ], flag: 0, tc: [ 0, 0 ], color: [ 89, 166, 246, 255 ] },
	{ pos: [ 90, 17, -2 ], flag: 0, tc: [ 0, 0 ], color: [ 89, 166, 241, 255 ] },
	{ pos: [ 76, 18, -34 ], flag: 0, tc: [ 0, 0 ], color: [ 82, 166, 218, 255 ] },
	{ pos: [ 120, 49, 17 ], flag: 0, tc: [ 0, 0 ], color: [ 92, 168, 2, 255 ] },
	{ pos: [ 84, 11, 20 ], flag: 0, tc: [ 0, 0 ], color: [ 92, 168, 1, 255 ] },
	{ pos: [ 126, 54, -12 ], flag: 0, tc: [ 0, 0 ], color: [ 94, 76, 40, 255 ] },
	{ pos: [ 108, 76, -8 ], flag: 0, tc: [ 0, 0 ], color: [ 97, 68, 46, 255 ] },
	{ pos: [ 106, 65, 13 ], flag: 0, tc: [ 0, 0 ], color: [ 94, 76, 40, 255 ] },
	{ pos: [ 120, 49, 17 ], flag: 0, tc: [ 0, 0 ], color: [ 90, 83, 34, 255 ] },
]

export const luigi_right_hand_peace_shared_dl = [
	Gbi.gsSPVertex(luigi_right_hand_peace_shared_dl_vertex, 0, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 2, 3, 0),
	Gbi.gsSP1Triangle(3, 4, 0, 0),
	Gbi.gsSP1Triangle(5, 6, 7, 0),
	Gbi.gsSP1Triangle(5, 7, 8, 0),
	Gbi.gsSP1Triangle(9, 10, 11, 0),
	Gbi.gsSP1Triangle(9, 12, 10, 0),
	Gbi.gsSP1Triangle(13, 14, 15, 0),
	Gbi.gsSP1Triangle(16, 17, 18, 0),
	Gbi.gsSP1Triangle(19, 18, 17, 0),
	Gbi.gsSP1Triangle(20, 19, 17, 0),
	Gbi.gsSP1Triangle(21, 20, 17, 0),
	Gbi.gsSP1Triangle(17, 22, 21, 0),
	Gbi.gsSP1Triangle(22, 17, 23, 0),
	Gbi.gsSP1Triangle(21, 24, 20, 0),
	Gbi.gsSP1Triangle(24, 21, 25, 0),
	Gbi.gsSP1Triangle(21, 26, 25, 0),
	Gbi.gsSP1Triangle(26, 27, 25, 0),
	Gbi.gsSP1Triangle(27, 26, 28, 0),
	Gbi.gsSP1Triangle(28, 29, 27, 0),
	Gbi.gsSP1Triangle(25, 27, 30, 0),
	Gbi.gsSP1Triangle(30, 27, 31, 0),
	Gbi.gsSP1Triangle(32, 33, 34, 0),
	Gbi.gsSP1Triangle(32, 34, 35, 0),
	Gbi.gsSP1Triangle(36, 35, 34, 0),
	Gbi.gsSP1Triangle(35, 36, 37, 0),
	Gbi.gsSP1Triangle(32, 35, 38, 0),
	Gbi.gsSP1Triangle(39, 32, 38, 0),
	Gbi.gsSP1Triangle(39, 38, 40, 0),
	Gbi.gsSP1Triangle(38, 41, 40, 0),
	Gbi.gsSP1Triangle(42, 41, 38, 0),
	Gbi.gsSP1Triangle(38, 43, 42, 0),
	Gbi.gsSP1Triangle(43, 44, 42, 0),
	Gbi.gsSP1Triangle(44, 43, 45, 0),
	Gbi.gsSP1Triangle(45, 46, 44, 0),
	Gbi.gsSP1Triangle(44, 46, 47, 0),
	Gbi.gsSP1Triangle(48, 49, 50, 0),
	Gbi.gsSP1Triangle(49, 51, 50, 0),
	Gbi.gsSP1Triangle(49, 52, 51, 0),
	Gbi.gsSP1Triangle(50, 51, 53, 0),
	Gbi.gsSP1Triangle(53, 54, 50, 0),
	Gbi.gsSP1Triangle(55, 54, 53, 0),
	Gbi.gsSP1Triangle(55, 53, 56, 0),
	Gbi.gsSP1Triangle(56, 53, 57, 0),
	Gbi.gsSP1Triangle(56, 57, 58, 0),
	Gbi.gsSP1Triangle(58, 57, 59, 0),
	Gbi.gsSP1Triangle(58, 59, 60, 0),
	Gbi.gsSP1Triangle(60, 59, 61, 0),
	Gbi.gsSP1Triangle(48, 61, 59, 0),
	Gbi.gsSP1Triangle(61, 48, 50, 0),
	Gbi.gsSP1Triangle(54, 61, 50, 0),
	Gbi.gsSP1Triangle(62, 61, 54, 0),
	Gbi.gsSP1Triangle(62, 54, 55, 0),
	Gbi.gsSP1Triangle(55, 63, 62, 0),
	Gbi.gsSP1Triangle(64, 65, 66, 0),
	Gbi.gsSP1Triangle(67, 65, 64, 0),
	Gbi.gsSP1Triangle(67, 68, 65, 0),
	Gbi.gsSP1Triangle(69, 68, 67, 0),
	Gbi.gsSP1Triangle(69, 70, 68, 0),
	Gbi.gsSP1Triangle(71, 70, 69, 0),
	Gbi.gsSP1Triangle(71, 72, 70, 0),
	Gbi.gsSP1Triangle(73, 72, 71, 0),
	Gbi.gsSP1Triangle(71, 74, 73, 0),
	Gbi.gsSP1Triangle(73, 66, 72, 0),
	Gbi.gsSP1Triangle(70, 72, 66, 0),
	Gbi.gsSP1Triangle(66, 65, 70, 0),
	Gbi.gsSP1Triangle(65, 68, 70, 0),
	Gbi.gsSP1Triangle(75, 76, 77, 0),
	Gbi.gsSP1Triangle(76, 78, 77, 0),
	Gbi.gsSP1Triangle(79, 80, 81, 0),
	Gbi.gsSP1Triangle(82, 80, 79, 0),
	Gbi.gsSP1Triangle(82, 83, 80, 0),
	Gbi.gsSP1Triangle(84, 85, 86, 0),
	Gbi.gsSP1Triangle(86, 87, 84, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_right_hand_peace = (customData) => {
	return [
	Gbi.gsSPLight(mario_white_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_white_lights_group(customData).a, 2),
	Gbi.gsSPDisplayList(luigi_right_hand_peace_shared_dl),
	Gbi.gsSPEndDisplayList(),
	]
}

const luigi_wings_half_1_dl_vertex = [
	{ pos: [ -90, 185, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 0, 127, 255 ] },
	{ pos: [ 0, 0, 0 ], flag: 0, tc: [ 990, 2012 ], color: [ 0, 0, 127, 255 ] },
	{ pos: [ 0, 185, 0 ], flag: 0, tc: [ 990, 0 ], color: [ 0, 0, 127, 255 ] },
	{ pos: [ -90, 0, 0 ], flag: 0, tc: [ 0, 2012 ], color: [ 0, 0, 127, 255 ] },
]

const luigi_wings_half_2_dl_vertex = [
	{ pos: [ 0, 0, 0 ], flag: 0, tc: [ 0, 2012 ], color: [ 0, 0, 127, 255 ] },
	{ pos: [ 90, 0, 0 ], flag: 0, tc: [ 990, 2012 ], color: [ 0, 0, 127, 255 ] },
	{ pos: [ 90, 185, 0 ], flag: 0, tc: [ 990, 0 ], color: [ 0, 0, 127, 255 ] },
	{ pos: [ 0, 185, 0 ], flag: 0, tc: [ 0, 0 ], color: [ 0, 0, 127, 255 ] },
]

export const luigi_wings_half_1_dl = [
	Gbi.gsSPVertex(luigi_wings_half_1_dl_vertex, 4, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 3, 1, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_wings_half_2_dl = [
	Gbi.gsSPVertex(luigi_wings_half_2_dl_vertex, 4, 0),
	Gbi.gsSP1Triangle(0, 1, 2, 0),
	Gbi.gsSP1Triangle(0, 2, 3, 0),
	Gbi.gsSPEndDisplayList(),
]

export const luigi_cap_wings = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_DECALRGBA),
	Gbi.gsSPClearGeometryMode(Gbi.G_CULL_BACK | Gbi.G_SHADING_SMOOTH),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 6, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (64 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsSPLight(mario_white_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_white_lights_group(customData).a, 2),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_wings_half_1),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 64 - 1),
	Gbi.gsSPDisplayList(luigi_wings_half_1_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_wings_half_2),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 64 - 1),
	Gbi.gsSPDisplayList(luigi_wings_half_2_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADE),
	Gbi.gsSPSetGeometryMode(Gbi.G_CULL_BACK | Gbi.G_SHADING_SMOOTH),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_cap_wings_transparent = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_DECALFADEA),
	Gbi.gsSPClearGeometryMode(Gbi.G_CULL_BACK | Gbi.G_SHADING_SMOOTH),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 6, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (64 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsSPLight(mario_white_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_white_lights_group(customData).a, 2),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_wings_half_1),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 64 - 1),
	Gbi.gsSPDisplayList(luigi_wings_half_1_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_wings_half_2),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 64 - 1),
	Gbi.gsSPDisplayList(luigi_wings_half_2_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADEFADEA),
	Gbi.gsSPSetGeometryMode(Gbi.G_CULL_BACK | Gbi.G_SHADING_SMOOTH),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_metal_cap_wings = (customData) => {
	return [
	Gbi.gsDPSetCombineMode(Gbi.G_CC_DECALRGBA),
	Gbi.gsSPClearGeometryMode(Gbi.G_CULL_BACK | Gbi.G_SHADING_SMOOTH),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 6, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (64 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsSPLight(mario_white_lights_group(customData).l[0], 1),
	Gbi.gsSPLight(mario_white_lights_group(customData).a, 2),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_metal_wings_half_1),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 64 - 1),
	Gbi.gsSPDisplayList(luigi_wings_half_1_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_metal_wings_half_2),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 64 - 1),
	Gbi.gsSPDisplayList(luigi_wings_half_2_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_SHADE),
	Gbi.gsSPSetGeometryMode(Gbi.G_CULL_BACK | Gbi.G_SHADING_SMOOTH),
	Gbi.gsSPEndDisplayList(),
	]
}

export const luigi_metal_cap_wings_transparent = [
	Gbi.gsSPClearGeometryMode(Gbi.G_TEXTURE_GEN),
	Gbi.gsSPTexture(0x0F80, 0x07C0, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_DECALFADEA),
	Gbi.gsSPClearGeometryMode(Gbi.G_CULL_BACK | Gbi.G_SHADING_SMOOTH),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 0, 0, Gbi.G_TX_LOADTILE, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_NOMASK, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsDPSetTile(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 8, 0, Gbi.G_TX_RENDERTILE, 0, Gbi.G_TX_CLAMP, 6, Gbi.G_TX_NOLOD, Gbi.G_TX_CLAMP, 5, Gbi.G_TX_NOLOD),
	Gbi.gsDPSetTileSize(0, 0, 0, (32 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC, (64 - 1) << Gbi.G_TEXTURE_IMAGE_FRAC),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_metal_wings_half_1),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 64 - 1),
	Gbi.gsSPDisplayList(luigi_wings_half_1_dl),
	Gbi.gsDPSetTextureImage(Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 1, luigi_texture_metal_wings_half_2),
	Gbi.gsDPLoadBlock(Gbi.G_TX_LOADTILE, 0, 0, 32 * 64 - 1),
	Gbi.gsSPDisplayList(luigi_wings_half_2_dl),
	Gbi.gsSPTexture(0xFFFF, 0xFFFF, 0, Gbi.G_TX_RENDERTILE, Gbi.G_OFF),
	Gbi.gsSPSetGeometryMode(Gbi.G_TEXTURE_GEN | Gbi.G_CULL_BACK | Gbi.G_SHADING_SMOOTH),
	Gbi.gsDPSetCombineMode(Gbi.G_CC_DECALFADE),
	...Gbi.gsDPLoadTextureBlock(luigi_texture_metal, Gbi.G_IM_FMT_RGBA, Gbi.G_IM_SIZ_16b, 64, 32, 0, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, Gbi.G_TX_WRAP | Gbi.G_TX_NOMIRROR, 6, 5, Gbi.G_TX_NOLOD, Gbi.G_TX_NOLOD),
	Gbi.gsSPTexture(0x0F80, 0x07C0, 0, Gbi.G_TX_RENDERTILE, Gbi.G_ON),
	Gbi.gsSPEndDisplayList(),
]
